{"version":3,"sources":["main.js"],"names":["e","t","module","exports","document","Error","window","this","C","r","Object","getPrototypeOf","s","slice","g","flat","call","concat","apply","u","push","i","indexOf","n","o","toString","v","hasOwnProperty","a","l","y","m","nodeType","item","x","E","c","type","src","nonce","noModule","b","createElement","text","getAttribute","setAttribute","head","appendChild","parentNode","removeChild","w","f","S","fn","init","p","length","prototype","jquery","constructor","toArray","get","pushStack","merge","prevObject","each","map","arguments","first","eq","last","even","grep","odd","end","sort","splice","extend","isPlainObject","Array","isArray","expando","Math","random","replace","isReady","error","noop","isEmptyObject","globalEval","makeArray","inArray","guid","support","Symbol","iterator","split","toLowerCase","d","h","T","Date","k","ue","A","N","j","D","q","pop","L","H","O","P","R","M","I","W","F","B","RegExp","$","_","z","U","X","V","G","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","Y","Q","J","K","Z","ee","te","ne","String","fromCharCode","re","ie","charCodeAt","oe","ae","be","disabled","nodeName","dir","next","childNodes","se","ownerDocument","exec","getElementById","id","getElementsByTagName","getElementsByClassName","qsa","test","ye","scope","xe","join","querySelectorAll","removeAttribute","cacheLength","shift","le","ce","fe","attrHandle","pe","sourceIndex","nextSibling","de","he","ge","isDisabled","ve","isXML","namespaceURI","documentElement","setDocument","defaultView","top","addEventListener","attachEvent","attributes","className","createComment","getById","getElementsByName","filter","find","getAttributeNode","value","innerHTML","matchesSelector","matches","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","contains","sortDetached","unshift","attr","specified","escape","uniqueSort","detectDuplicates","sortStable","getText","textContent","firstChild","nodeValue","selectors","createPseudo","match","relative",">"," ","+","~","preFilter","lastChild","uniqueID","pseudos","setFilters","not","has","lang","target","location","hash","root","focus","activeElement","hasFocus","href","tabIndex","enabled","checked","selected","selectedIndex","empty","parent","header","input","button","lt","gt","nth","radio","checkbox","file","password","image","submit","reset","me","we","Te","Ce","Ee","filters","tokenize","compile","selector","select","defaultValue","expr","unique","isXMLDoc","escapeSelector","is","parseHTML","ready","children","contents","prev","closest","index","prevAll","add","addBack","parents","parentsUntil","nextAll","nextUntil","prevUntil","siblings","contentDocument","content","reverse","promise","done","fail","then","Callbacks","once","stopOnFalse","memory","remove","disable","lock","locked","fireWith","fire","fired","Deferred","state","always","catch","pipe","progress","notify","resolve","reject","TypeError","notifyWith","resolveWith","exceptionHook","stackTrace","rejectWith","getStackHook","setTimeout","when","console","warn","name","message","stack","readyException","removeEventListener","readyWait","readyState","doScroll","toUpperCase","uid","cache","defineProperty","configurable","set","access","hasData","JSON","parse","data","removeData","_data","_removeData","queue","dequeue","_queueHooks","stop","clearQueue","source","composed","getRootNode","style","display","css","cur","cssNumber","unit","start","body","show","hide","toggle","createDocumentFragment","checkClone","cloneNode","noCloneChecked","option","thead","col","tr","td","_default","tbody","tfoot","colgroup","caption","th","optgroup","htmlPrefilter","createTextNode","off","event","Se","namespace","handler","isTrigger","special","delegateType","stopPropagation","stopImmediatePropagation","preventDefault","trigger","Event","global","events","create","handle","triggered","dispatch","bindType","origType","delegateCount","setup","teardown","removeEvent","fix","delegateTarget","preDispatch","handlers","isPropagationStopped","currentTarget","elem","isImmediatePropagationStopped","rnamespace","handleObj","result","postDispatch","addProp","enumerable","originalEvent","writable","load","noBubble","click","beforeunload","returnValue","isDefaultPrevented","defaultPrevented","relatedTarget","timeStamp","now","isSimulated","altKey","bubbles","cancelable","changedTouches","ctrlKey","detail","eventPhase","metaKey","pageX","pageY","shiftKey","view","char","code","charCode","key","keyCode","buttons","clientX","clientY","offsetX","offsetY","pointerId","pointerType","screenX","screenY","targetTouches","toElement","touches","which","blur","mouseenter","mouseleave","pointerenter","pointerleave","on","one","ke","Ae","Ne","je","De","qe","Le","He","html","clone","_evalUrl","Oe","cleanData","detach","append","prepend","insertBefore","before","after","replaceWith","replaceChild","appendTo","prependTo","insertAfter","replaceAll","Pe","Re","opener","getComputedStyle","Me","Ie","We","getPropertyValue","pixelBoxStyles","width","minWidth","maxWidth","Fe","cssText","marginLeft","right","position","offsetWidth","round","parseFloat","backgroundClip","clearCloneStyle","boxSizingReliable","pixelPosition","reliableMarginLeft","scrollboxSize","reliableTrDimensions","height","parseInt","borderTopWidth","borderBottomWidth","offsetHeight","Be","$e","_e","ze","cssProps","Ue","Xe","Ve","visibility","Ge","letterSpacing","fontWeight","Ye","max","Qe","ceil","Je","getClientRects","Ke","cssHooks","opacity","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","gridArea","gridColumn","gridColumnEnd","gridColumnStart","gridRow","gridRowEnd","gridRowStart","lineHeight","order","orphans","widows","zIndex","zoom","setProperty","isFinite","getBoundingClientRect","left","margin","padding","border","expand","Tween","prop","easing","options","propHooks","run","duration","pos","step","fx","scrollTop","scrollLeft","linear","swing","cos","PI","Ze","et","tt","nt","rt","it","ot","hidden","requestAnimationFrame","interval","tick","at","st","ut","tweeners","prefilters","startTime","tweens","props","opts","specialEasing","originalProperties","originalOptions","createTween","bind","complete","timer","anim","Animation","*","tweener","unqueued","overflow","overflowX","overflowY","prefilter","speed","speeds","old","fadeTo","animate","finish","timers","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","slow","fast","delay","clearTimeout","checkOn","optSelected","radioValue","ct","ft","removeAttr","attrHooks","pt","dt","ht","vt","removeProp","propFix","for","class","addClass","removeClass","toggleClass","hasClass","yt","val","valHooks","focusin","mt","xt","parentWindow","simulate","triggerHandler","bt","wt","Tt","parseXML","DOMParser","parseFromString","Ct","Et","St","kt","At","param","encodeURIComponent","serialize","serializeArray","Nt","jt","Dt","qt","Lt","Ht","Ot","Pt","Rt","Mt","It","Wt","dataTypes","Ft","ajaxSettings","flatOptions","active","lastModified","etag","url","isLocal","protocol","processData","async","contentType","accepts","xml","json","responseFields","converters","* text","text html","text json","text xml","context","ajaxSetup","ajaxPrefilter","ajaxTransport","ajax","statusCode","getResponseHeader","getAllResponseHeaders","setRequestHeader","overrideMimeType","mimeType","status","abort","method","dataType","crossDomain","host","traditional","hasContent","ifModified","headers","beforeSend","success","timeout","send","dataFilter","statusText","getJSON","getScript","text script","wrapAll","firstElementChild","wrapInner","wrap","unwrap","visible","xhr","XMLHttpRequest","Bt","0","1223","$t","cors","open","username","xhrFields","onload","onerror","onabort","ontimeout","onreadystatechange","responseType","responseText","binary","response","script","scriptAttrs","charset","scriptCharset","_t","zt","Ut","jsonp","jsonpCallback","createHTMLDocument","implementation","animated","offset","setOffset","using","pageYOffset","pageXOffset","offsetParent","scrollTo","Height","Width","","unbind","delegate","undelegate","hover","Xt","proxy","holdReady","parseJSON","isFunction","isWindow","camelCase","isNumeric","isNaN","trim","define","amd","Vt","jQuery","Gt","noConflict","factory","globalThis","self","Chart","requestAnimFrame","callback","throttled","thisArg","updateFn","updateArgs","args","ticking","rest","debounce","_toLeftRightCenter","align","_alignStartEnd","_textX","rtl","animator","[object Object]","_request","_charts","Map","_running","_lastDate","undefined","chart","anims","date","callbacks","listeners","numSteps","forEach","initial","currentStep","min","_update","_refresh","remaining","running","items","draw","_active","_total","_notify","charts","cb","_getAnims","reduce","acc","_duration","cancel","delete","map$1","1","2","3","4","5","6","7","8","9","hex","h1","h2","hexString","isShort","lim","p2b","n2b","b2n","n2p","RGB_RE","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","rgb","rgb2hsl","calln","hsl2rgb","hue","hueParse","str","p1","p2","hwb2rgb","hsv2rgb","map$1$1","names","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names$1","nameParse","unpacked","keys","tkeys","ok","nk","unpack","transparent","modHSL","ratio","tmp","clone$1","proto","assign","fromObject","functionParse","charAt","rgbParse","Color","ret","len","_rgb","_valid","valid","obj","hslString","color","weight","c1","c2","w2","w1","deg","rotate","index_esm","isPatternOrGradient","CanvasGradient","CanvasPattern","getHoverColor","saturate","darken","isNullOrUndef","substr","isObject","isNumberFinite","Number","finiteOrDefault","valueOrDefault","toPercentage","dimension","endsWith","toDimension","loopable","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","klen","isValidKey","_merger","tval","sval","sources","merger","mergeIf","_mergerIf","indexOfDotOrLength","idx","resolveObjectKey","_capitalize","defined","setsEqual","size","_isClickEvent","overrides","descriptors","getScope$1","node","values","defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","platform","getDevicePixelRatio","elements","font","family","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","local","_scriptable","startsWith","_indexable","_fallback","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","almostEquals","niceRange","pow","floor","fraction","_factorize","sqrt","isNumber","epsilon","abs","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","toFontString","_measureText","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","drawPoint","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","sin","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","bottom","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","setRenderOpts","strokeStyle","lineWidth","strokeText","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","_lookup","table","cmp","mid","hi","lo","_lookupByKey","_rlookupByKey","_filterBetween","arrayEvents","listenArrayEvents","listener","_chartjs","base","res","object","unlistenArrayEvents","stub","_arrayUnique","Set","from","_isDomSupported","_getParentNode","domNode","parseMaxStyle","styleValue","parentProperty","valueInPixels","element","getStyle","el","positions","getPositionedStyle","styles","suffix","getRelativePosition$1","evt","borderBox","boxSizing","paddings","borders","box","native","shadowRoot","useOffsetPos","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","readUsedSize","getRelativePosition","binarySearch","metaset","axis","controller","_sorted","iScale","_cachedMeta","lookupMethod","_reversePixels","_sharedOptions","getRange","optimizedEvaluateItems","metasets","getSortedVisibleDatasetMetas","skip","getIntersectItems","useFinalPosition","chartArea","_minPadding","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestItems","startAngle","endAngle","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","evaluateAllVisibleItems","Interaction","modes","meta","getDatasetMeta","nearest","LINE_HEIGHT","FONT_STYLE","toLineHeight","_readValueToProps","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","fallback","inputs","info","cacheable","_addGrace","minmax","grace","beginAtZero","change","keepZero","createContext","parentContext","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","stacks","stackWeight","includes","_stack","count","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","factor","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","changed","update","setBoxDims","placeBoxes","userPadding","autoPadding","_layers","layoutItem","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","freeze","updatePos","handleMaxPadding","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","override","Proxy","deleteProperty","_keys","_cached","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","setContext","receiver","isScriptable","_resolveScriptable","isIndexable","arr","resolver","_resolveArray","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","resolveFallback","getScope","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","current","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","delta","iPixel","vPixel","monotoneCompute","capControlPoint","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","atEdge","elasticIn","elasticOut","effects","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInBounce","easeOutBounce","easeInOutBounce","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","formatNumber","num","locale","cacheKey","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","getRtlAdapter","rectX","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","bounds","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","_computeSegments","segmentOptions","_loop","findStartAndEnd","splitByStyles","solidSegments","_fullLoop","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","helpers","__proto__","easingEffects","_deprecated","fontString","pixelSize","fontStyle","fontFamily","BasePlatform","config","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerdown","pointermove","pointerup","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","createAttachObserver","observer","MutationObserver","entries","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","fromNativeEvent","addListener","DomPlatform","renderHeight","renderWidth","displayWidth","displayHeight","initCanvas","proxies","$proxies","attach","isConnected","_detectPlatform","OffscreenCanvas","platforms","interpolators","boolean","to","c0","mix","number","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","rej","resolved","animationOptions","colors","properties","numbers","animations","Animations","_properties","configure","animatedProps","getOwnPropertyNames","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","wait","all","awaitAll","_animateOptions","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","parsed","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_parsing","_objectData","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","scaleID","adata","convertObjectDataToArray","isExtensible","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","parsedValue","NaN","canStack","otherScale","_getOtherScale","createStack","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","toClip","defaultClip","getMaxOverflow","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","transition","datasetAnimationScopeKeys","sharedOptions","_animationsDisabled","_resolveAnimations","getSharedOptions","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_dataChanges","_sync","newCount","Element","final","defaultRoutes","formatters","tickValue","ticks","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","numeric","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","majorIndices","major","getMajorIndices","numMajorIndices","newTicks","spacing","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","grid","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","title","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","super","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","suggestedMin","suggestedMax","metas","getMinMax","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","caches","widths","heights","tickFont","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","getPixelForValue","decimal","getBaseValue","createTickContext","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","labelPadding","fillRect","findIndex","_computeGridLineItems","drawLine","setLineDash","lineDashOffset","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","fontSize","TypedRegistry","isPrototypeOf","parentScope","isIChartComponent","register","itemDefaults","routes","propertyParts","sourceName","sourceScope","parts","routeDefaults","registerDefaults","registry","controllers","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","component","camelMethod","PluginService","_init","hook","_createDescriptors","descriptor","plugin","_oldCache","_notifyStateChanges","getPlugin","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","instances","getChart","moveNumericKeys","intKey","userConfig","initialCanvas","existingChart","chartOptionScopes","updateConfig","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","listen","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","hasUpdated","addBox","_destroyDatasetMeta","_dataset","newControllers","_removeUnreferencedMetasets","isDatasetVisible","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","removeBox","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","_stop","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","isAttached","activeElements","lastActive","replay","hoverOptions","deactivated","activated","updateHoverStyle","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","getElementsAtEventForMode","invalidatePlugins","abstract","version","unregister","DateAdapter","timestamp","amount","weekday","members","_adapters","_date","computeMinSampleSize","$bar","visibleMetas","getAllParsedValues","getAllScaleValues","curr","updateMinAndPrev","parseValue","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","borderSkipped","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","bars","getBasePixel","ruler","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","updateElement","grouped","_getStacks","pixels","barThickness","stackCount","_getStackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","_index_","_value_","BubbleController","getPixelForDecimal","tooltip","DoughnutController","innerRadius","outerRadius","getter","circumference","_getRotation","_getCircumference","arcs","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_getRotationExtents","ratioX","ratioY","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","LineController","animationsDisabled","pointCount","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","scaleRangesChanged","_decimated","maxGapLength","directUpdate","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","_updateRadius","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","clipArc","pixelMargin","angleMargin","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","inner","lineJoin","fullCircles","drawFullCircleBorders","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","decodeFill","fillOption","parseFillOption","simpleArc","computeBoundary","computeCircularBoundary","computeLinearBoundary","findSegmentEnd","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","interpolate","pointValue","linePoints","firstValue","lastValue","getLineByIndex","sourcePoints","below","getLinesBelow","createBoundaryLine","buildStackLine","boundary","pointsFromSegments","resolveTarget","propagate","visited","clipY","getBounds","_getEdge","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","notShape","lineLoop","targetLoop","drawfill","lineOpts","above","doFill","plugin_filler","_args","$filler","drawTime","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","rtlHelper","hitbox","_draw","defaultColor","fontColor","halfFontSize","cursor","textDirection","setWidth","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","onLeave","isListened","hoveredItem","_getLegendItemAt","sameItem","plugin_legend","_element","adjustHitBoxes","handleEvent","ci","Title","_padding","textSize","fontOpts","_drawArgs","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","getLabelAndValue","getTooltipSize","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","labelCount","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","getDecimalForPixel","relativeLabelSize","minSpacing","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","maxTicks","stepSize","computeTickLimit","getTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks$1","_maxDigits","LinearScale","handleTickRangeOptions","isMajor","tickVal","LogarithmicScale","_zero","exp","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","logarithmic","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","drawPointLabels","gridLineOpts","drawRadiusLine","angleLines.color","pointLabels.color","ticks.color","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","startOf","determineUnitForAutoTicks","minUnit","capacity","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","require","nodeIdCompat","substring","select2","requirejs","pr","uri","deps","_defined","Extend","__super__","Decorate","displayName","invoke","Observable","generateChars","_convertData","hasScroll","innerHeight","scrollHeight","innerWidth","scrollWidth","escapeMarkup","\\","&","<","\"","'","/","__cache","GetUniqueElementId","StoreData","GetData","RemoveData","copyNonInternalCssClasses","$element","$results","displayMessage","hideLoading","hideMessages","results","highlightFirstItem","ensureHighlightVisible","setClasses","classList","showLoading","loading","role","_resultId","template","isOpen","getHighlightedResults","mousewheel","destroy","BACKSPACE","TAB","ENTER","SHIFT","CTRL","ALT","ESC","SPACE","PAGE_UP","PAGE_DOWN","END","HOME","LEFT","UP","RIGHT","DOWN","DELETE","_tabindex","$selection","_handleBlur","_attachCloseHandler","_detachCloseHandler","isEnabled","selectionContainer","placeholder","normalizePlaceholder","createPlaceholder","_handleClear","_handleKeyboardClear","prevented","$searchContainer","$search","_transferTabIndex","resizeSearch","_keyUpPrevented","searchRemoveChoice","documentMode","handleSearch","term","dict","loadPath","Ⓐ","Ａ","À","Á","Â","Ầ","Ấ","Ẫ","Ẩ","Ã","Ā","Ă","Ằ","Ắ","Ẵ","Ẳ","Ȧ","Ǡ","Ä","Ǟ","Ả","Å","Ǻ","Ǎ","Ȁ","Ȃ","Ạ","Ậ","Ặ","Ḁ","Ą","Ⱥ","Ɐ","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ⓑ","Ｂ","Ḃ","Ḅ","Ḇ","Ƀ","Ƃ","Ɓ","Ⓒ","Ｃ","Ć","Ĉ","Ċ","Č","Ç","Ḉ","Ƈ","Ȼ","Ꜿ","Ⓓ","Ｄ","Ḋ","Ď","Ḍ","Ḑ","Ḓ","Ḏ","Đ","Ƌ","Ɗ","Ɖ","Ꝺ","Ǳ","Ǆ","ǲ","ǅ","Ⓔ","Ｅ","È","É","Ê","Ề","Ế","Ễ","Ể","Ẽ","Ē","Ḕ","Ḗ","Ĕ","Ė","Ë","Ẻ","Ě","Ȅ","Ȇ","Ẹ","Ệ","Ȩ","Ḝ","Ę","Ḙ","Ḛ","Ɛ","Ǝ","Ⓕ","Ｆ","Ḟ","Ƒ","Ꝼ","Ⓖ","Ｇ","Ǵ","Ĝ","Ḡ","Ğ","Ġ","Ǧ","Ģ","Ǥ","Ɠ","Ꞡ","Ᵹ","Ꝿ","Ⓗ","Ｈ","Ĥ","Ḣ","Ḧ","Ȟ","Ḥ","Ḩ","Ḫ","Ħ","Ⱨ","Ⱶ","Ɥ","Ⓘ","Ｉ","Ì","Í","Î","Ĩ","Ī","Ĭ","İ","Ï","Ḯ","Ỉ","Ǐ","Ȉ","Ȋ","Ị","Į","Ḭ","Ɨ","Ⓙ","Ｊ","Ĵ","Ɉ","Ⓚ","Ｋ","Ḱ","Ǩ","Ḳ","Ķ","Ḵ","Ƙ","Ⱪ","Ꝁ","Ꝃ","Ꝅ","Ꞣ","Ⓛ","Ｌ","Ŀ","Ĺ","Ľ","Ḷ","Ḹ","Ļ","Ḽ","Ḻ","Ł","Ƚ","Ɫ","Ⱡ","Ꝉ","Ꝇ","Ꞁ","Ǉ","ǈ","Ⓜ","Ｍ","Ḿ","Ṁ","Ṃ","Ɱ","Ɯ","Ⓝ","Ｎ","Ǹ","Ń","Ñ","Ṅ","Ň","Ṇ","Ņ","Ṋ","Ṉ","Ƞ","Ɲ","Ꞑ","Ꞥ","Ǌ","ǋ","Ⓞ","Ｏ","Ò","Ó","Ô","Ồ","Ố","Ỗ","Ổ","Õ","Ṍ","Ȭ","Ṏ","Ō","Ṑ","Ṓ","Ŏ","Ȯ","Ȱ","Ö","Ȫ","Ỏ","Ő","Ǒ","Ȍ","Ȏ","Ơ","Ờ","Ớ","Ỡ","Ở","Ợ","Ọ","Ộ","Ǫ","Ǭ","Ø","Ǿ","Ɔ","Ɵ","Ꝋ","Ꝍ","Œ","Ƣ","Ꝏ","Ȣ","Ⓟ","Ｐ","Ṕ","Ṗ","Ƥ","Ᵽ","Ꝑ","Ꝓ","Ꝕ","Ⓠ","Ｑ","Ꝗ","Ꝙ","Ɋ","Ⓡ","Ｒ","Ŕ","Ṙ","Ř","Ȑ","Ȓ","Ṛ","Ṝ","Ŗ","Ṟ","Ɍ","Ɽ","Ꝛ","Ꞧ","Ꞃ","Ⓢ","Ｓ","ẞ","Ś","Ṥ","Ŝ","Ṡ","Š","Ṧ","Ṣ","Ṩ","Ș","Ş","Ȿ","Ꞩ","Ꞅ","Ⓣ","Ｔ","Ṫ","Ť","Ṭ","Ț","Ţ","Ṱ","Ṯ","Ŧ","Ƭ","Ʈ","Ⱦ","Ꞇ","Ꜩ","Ⓤ","Ｕ","Ù","Ú","Û","Ũ","Ṹ","Ū","Ṻ","Ŭ","Ü","Ǜ","Ǘ","Ǖ","Ǚ","Ủ","Ů","Ű","Ǔ","Ȕ","Ȗ","Ư","Ừ","Ứ","Ữ","Ử","Ự","Ụ","Ṳ","Ų","Ṷ","Ṵ","Ʉ","Ⓥ","Ｖ","Ṽ","Ṿ","Ʋ","Ꝟ","Ʌ","Ꝡ","Ⓦ","Ｗ","Ẁ","Ẃ","Ŵ","Ẇ","Ẅ","Ẉ","Ⱳ","Ⓧ","Ｘ","Ẋ","Ẍ","Ⓨ","Ｙ","Ỳ","Ý","Ŷ","Ỹ","Ȳ","Ẏ","Ÿ","Ỷ","Ỵ","Ƴ","Ɏ","Ỿ","Ⓩ","Ｚ","Ź","Ẑ","Ż","Ž","Ẓ","Ẕ","Ƶ","Ȥ","Ɀ","Ⱬ","Ꝣ","ⓐ","ａ","ẚ","à","á","â","ầ","ấ","ẫ","ẩ","ã","ā","ă","ằ","ắ","ẵ","ẳ","ȧ","ǡ","ä","ǟ","ả","å","ǻ","ǎ","ȁ","ȃ","ạ","ậ","ặ","ḁ","ą","ⱥ","ɐ","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ⓑ","ｂ","ḃ","ḅ","ḇ","ƀ","ƃ","ɓ","ⓒ","ｃ","ć","ĉ","ċ","č","ç","ḉ","ƈ","ȼ","ꜿ","ↄ","ⓓ","ｄ","ḋ","ď","ḍ","ḑ","ḓ","ḏ","đ","ƌ","ɖ","ɗ","ꝺ","ǳ","ǆ","ⓔ","ｅ","è","é","ê","ề","ế","ễ","ể","ẽ","ē","ḕ","ḗ","ĕ","ė","ë","ẻ","ě","ȅ","ȇ","ẹ","ệ","ȩ","ḝ","ę","ḙ","ḛ","ɇ","ɛ","ǝ","ⓕ","ｆ","ḟ","ƒ","ꝼ","ⓖ","ｇ","ǵ","ĝ","ḡ","ğ","ġ","ǧ","ģ","ǥ","ɠ","ꞡ","ᵹ","ꝿ","ⓗ","ｈ","ĥ","ḣ","ḧ","ȟ","ḥ","ḩ","ḫ","ẖ","ħ","ⱨ","ⱶ","ɥ","ƕ","ⓘ","ｉ","ì","í","î","ĩ","ī","ĭ","ï","ḯ","ỉ","ǐ","ȉ","ȋ","ị","į","ḭ","ɨ","ı","ⓙ","ｊ","ĵ","ǰ","ɉ","ⓚ","ｋ","ḱ","ǩ","ḳ","ķ","ḵ","ƙ","ⱪ","ꝁ","ꝃ","ꝅ","ꞣ","ⓛ","ｌ","ŀ","ĺ","ľ","ḷ","ḹ","ļ","ḽ","ḻ","ſ","ł","ƚ","ɫ","ⱡ","ꝉ","ꞁ","ꝇ","ǉ","ⓜ","ｍ","ḿ","ṁ","ṃ","ɱ","ɯ","ⓝ","ｎ","ǹ","ń","ñ","ṅ","ň","ṇ","ņ","ṋ","ṉ","ƞ","ɲ","ŉ","ꞑ","ꞥ","ǌ","ⓞ","ｏ","ò","ó","ô","ồ","ố","ỗ","ổ","õ","ṍ","ȭ","ṏ","ō","ṑ","ṓ","ŏ","ȯ","ȱ","ö","ȫ","ỏ","ő","ǒ","ȍ","ȏ","ơ","ờ","ớ","ỡ","ở","ợ","ọ","ộ","ǫ","ǭ","ø","ǿ","ɔ","ꝋ","ꝍ","ɵ","œ","ƣ","ȣ","ꝏ","ⓟ","ｐ","ṕ","ṗ","ƥ","ᵽ","ꝑ","ꝓ","ꝕ","ⓠ","ｑ","ɋ","ꝗ","ꝙ","ⓡ","ｒ","ŕ","ṙ","ř","ȑ","ȓ","ṛ","ṝ","ŗ","ṟ","ɍ","ɽ","ꝛ","ꞧ","ꞃ","ⓢ","ｓ","ß","ś","ṥ","ŝ","ṡ","š","ṧ","ṣ","ṩ","ș","ş","ȿ","ꞩ","ꞅ","ẛ","ⓣ","ｔ","ṫ","ẗ","ť","ṭ","ț","ţ","ṱ","ṯ","ŧ","ƭ","ʈ","ⱦ","ꞇ","ꜩ","ⓤ","ｕ","ù","ú","û","ũ","ṹ","ū","ṻ","ŭ","ü","ǜ","ǘ","ǖ","ǚ","ủ","ů","ű","ǔ","ȕ","ȗ","ư","ừ","ứ","ữ","ử","ự","ụ","ṳ","ų","ṷ","ṵ","ʉ","ⓥ","ｖ","ṽ","ṿ","ʋ","ꝟ","ʌ","ꝡ","ⓦ","ｗ","ẁ","ẃ","ŵ","ẇ","ẅ","ẘ","ẉ","ⱳ","ⓧ","ｘ","ẋ","ẍ","ⓨ","ｙ","ỳ","ý","ŷ","ỹ","ȳ","ẏ","ÿ","ỷ","ẙ","ỵ","ƴ","ɏ","ỿ","ⓩ","ｚ","ź","ẑ","ż","ž","ẓ","ẕ","ƶ","ȥ","ɀ","ⱬ","ꝣ","Ά","Έ","Ή","Ί","Ϊ","Ό","Ύ","Ϋ","Ώ","ά","έ","ή","ί","ϊ","ΐ","ό","ύ","ϋ","ΰ","ώ","ς","’","query","generateResultId","tagName","unselect","addOptions","innerText","_normalizeItem","_dataToConvert","convertToOptions","ajaxOptions","_applyDefaults","processResults","transport","_queryTimeout","createTag","insertTag","_removeOldTags","page","tokenizer","dropdown","selection","minimumInputLength","minimum","maximumInputLength","maximum","maximumSelectionLength","_checkIfMaximumSelected","$dropdown","showSearch","removePlaceholder","lastParams","$loadingMore","createLoadingMore","showLoadingMore","loadMoreIfNeeded","loadMore","pagination","more","$dropdownParent","_showDropdown","_attachPositioningHandler","_bindContainerResultHandlers","_hideDropdown","_detachPositioningHandler","$dropdownContainer","$container","_containerResultsHandlersBound","_positionDropdown","_resizeDropdown","minimumResultsForSearch","_handleSelectOnClose","originalSelect2Event","_selectTriggered","errorLoading","inputTooLong","inputTooShort","loadingMore","maximumSelected","noResults","searching","removeAllItems","removeItem","search","dataAdapter","tags","tokenSeparators","resultsAdapter","selectOnClose","dropdownAdapter","multiple","closeOnSelect","dropdownCssClass","selectionAdapter","allowClear","selectionCssClass","language","_resolveLanguage","translations","_processTranslations","debug","amdLanguageBase","autocomplete","dropdownAutoWidth","matcher","scrollAfterSelect","templateResult","templateSelection","theme","applyFromElement","fromElement","_generateId","_placeContainer","_bindAdapters","_registerDomEvents","_registerDataEvents","_registerSelectionEvents","_registerDropdownEvents","_registerResultsEvents","_registerEvents","_syncAttributes","_resolveWidth","_syncA","_syncS","_syncSubtree","_observer","toggleDropdown","close","_isChangeMutation","enable","IMask","commonjsGlobal","check","global$p","Function","objectGetOwnPropertyDescriptor","fails$8","functionBindNative","NATIVE_BIND$1","call$5","functionCall","objectPropertyIsEnumerable","$propertyIsEnumerable","propertyIsEnumerable","getOwnPropertyDescriptor$1","NASHORN_BUG","createPropertyDescriptor$2","bitmap","NATIVE_BIND","FunctionPrototype$1","call$4","uncurryThis$b","functionUncurryThis","uncurryThis$a","toString$4","stringSlice$1","classofRaw$1","uncurryThis$9","fails$5","classof$2","Object$4","indexedObject","TypeError$7","requireObjectCoercible$4","IndexedObject$1","requireObjectCoercible$3","toIndexedObject$3","isCallable$a","argument","isCallable$9","isObject$5","global$m","isCallable$8","aFunction","getBuiltIn$3","objectIsPrototypeOf","engineUserAgent","global$l","userAgent$1","process","Deno","versions","v8","V8_VERSION","fails$4","nativeSymbol","getOwnPropertySymbols","symbol","sham","useSymbolAsUid","getBuiltIn$1","isCallable$7","USE_SYMBOL_AS_UID$1","Object$3","isSymbol$2","$Symbol","String$3","isCallable$6","tryToString","TypeError$6","aCallable","call$3","isCallable$5","isObject$4","TypeError$5","shared$3","global$g","defineProperty$1","setGlobal$3","setGlobal$2","sharedStore","store$2","copyright","license","requireObjectCoercible$2","Object$2","toObject$2","toObject$1","hasOwnProperty_1","hasOwn","uncurryThis$6","postfix","toString$3","uid$2","global$d","shared$2","hasOwn$6","uid$1","NATIVE_SYMBOL","USE_SYMBOL_AS_UID","WellKnownSymbolsStore","Symbol$1","symbolFor","createWellKnownSymbol","withoutSetter","wellKnownSymbol$3","description","call$2","isObject$3","isSymbol$1","getMethod","func","ordinaryToPrimitive","pref","valueOf","wellKnownSymbol$2","TypeError$4","TO_PRIMITIVE","toPrimitive","exoticToPrim","isSymbol","toPropertyKey$2","isObject$2","document$1","EXISTS$1","ie8DomDefine","DESCRIPTORS$5","call$1","propertyIsEnumerableModule$1","createPropertyDescriptor$1","toIndexedObject$2","toPropertyKey$1","hasOwn$5","IE8_DOM_DEFINE$1","$getOwnPropertyDescriptor$1","objectDefineProperty","v8PrototypeDefineBug","global$a","isObject$1","String$2","TypeError$3","anObject$2","DESCRIPTORS$3","IE8_DOM_DEFINE","V8_PROTOTYPE_DEFINE_BUG","anObject$1","toPropertyKey","TypeError$2","$defineProperty","$getOwnPropertyDescriptor","Attributes","definePropertyModule$1","createPropertyDescriptor","createNonEnumerableProperty$3","redefine$1","isCallable$4","store$1","functionToString","inspectSource","set$1","inspectSource$2","isCallable$3","inspectSource$1","WeakMap$1","nativeWeakMap","shared$1","hiddenKeys$3","NATIVE_WEAK_MAP","global$7","uncurryThis$4","createNonEnumerableProperty$2","hasOwn$4","sharedKey","hiddenKeys$2","TypeError$1","store","wmget","wmhas","wmset","metadata","facade","STATE","internalState","enforce","getterFor","TYPE","DESCRIPTORS$1","hasOwn$3","FunctionPrototype","getDescriptor","EXISTS","PROPER","CONFIGURABLE","global$6","isCallable$2","hasOwn$2","createNonEnumerableProperty$1","setGlobal$1","CONFIGURABLE_FUNCTION_NAME","getInternalState","enforceInternalState","TEMPLATE","unsafe","simple","noTargetGet","objectGetOwnPropertyNames","ceil$1","toIntegerOrInfinity$3","toIntegerOrInfinity$2","min$1","toIntegerOrInfinity$1","toLength$2","toLength$1","toIndexedObject$1","toAbsoluteIndex","integer","lengthOfArrayLike","createMethod$1","IS_INCLUDES","$this","fromIndex","arrayIncludes","hasOwn$1","toIndexedObject","hiddenKeys$1","objectKeysInternal","enumBugKeys$2","internalObjectKeys$1","hiddenKeys","objectGetOwnPropertySymbols","getBuiltIn","getOwnPropertyNamesModule","getOwnPropertySymbolsModule$1","anObject","concat$1","ownKeys$1","getOwnPropertyDescriptorModule","definePropertyModule","fails$1","isCallable$1","replacement","isForced$1","feature","detection","POLYFILL","NATIVE","isForced_1","global$5","createNonEnumerableProperty","redefine","setGlobal","copyConstructorProperties","exceptions","isForced","_export","targetProperty","sourceProperty","TARGET","GLOBAL","STATIC","stat","forced","internalObjectKeys","enumBugKeys","objectKeys$1","DESCRIPTORS","uncurryThis$1","fails","objectKeys","getOwnPropertySymbolsModule","propertyIsEnumerableModule","toObject","IndexedObject","$assign","chr","argumentsLength","global$4","TO_STRING_TAG_SUPPORT","isCallable","classofRaw","TO_STRING_TAG","Object$1","CORRECT_ARGUMENTS","classof","tag","tryGet","callee","String$1","toString$2","toIntegerOrInfinity","toString$1","requireObjectCoercible$1","RangeError","stringRepeat","repeat","uncurryThis","toLength","requireObjectCoercible","stringSlice","createMethod","IS_END","maxLength","fillString","fillLen","stringFiller","intMaxLength","stringLength","fillStr","stringPad","stringPadWebkitBug","$padStart","padStart","$padEnd","_typeof","_classCallCheck","instance","Constructor","_defineProperties","_createClass","protoProps","staticProps","_inherits","subClass","superClass","_setPrototypeOf","_getPrototypeOf","setPrototypeOf","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","sourceSymbolKeys","_possibleConstructorReturn","ReferenceError","_assertThisInitialized","_createSuper","Derived","hasNativeReflectConstruct","construct","Boolean","_isNativeReflectConstruct","Super","NewTarget","_superPropBase","desc","_defineProperty","_set","isStrict","_slicedToArray","_arrayWithHoles","_i","_s","_arr","_n","_d","err","_iterableToArrayLimit","minLen","_arrayLikeToArray","_unsupportedIterableToArray","_nonIterableRest","arr2","padEnd","ChangeDetails","details","inserted","rawInserted","tailShift","isString","DIRECTION","escapeRegExp","normalizePrepare","prep","ActionDetails","cursorPos","oldValue","oldSelection","startChangePos","insertedCount","removedCount","ContinuousTailDetails","tail","masked","aggregate","_appendPlaceholder","beforePos","shiftChar","InputMask","Masked","_value","DEFAULTS","isInitialized","withValueRefresh","doCommit","doParse","doFormat","extractInput","isComplete","fromPos","toPos","ch","flags","checkTail","consistentState","_normalizePrepare","doPrepare","_normalizePrepare2","_appendCharRaw","consistentTail","appended","doValidate","beforeTailState","overwrite","tailDetails","appendTail","_beforeTailState","_appendChar","eager","_appendEager","_refreshing","rawInput","rawInputValue","_isolated","prepare","validate","commit","deleteCount","removeDirection","oldRawValue","tailPos","extractTail","forceDirection","nearestInputPos","valLength","mask","maskedClass","MaskedRegExp","MaskedPattern","MaskedDate","MaskedNumber","MaskedDynamic","MaskedFunction","createMask","MaskedClass","_excluded$4","DEFAULT_INPUT_DEFINITIONS","PatternInputDefinition","blockOpts","isFilled","isOptional","placeholderChar","unmaskedValue","lazy","_this$masked","_this$masked2","_this$masked3","minPos","maxPos","boundPos","_this$masked4","_this$parent","PatternFixedDefinition","isFixed","isUnmasking","_isRawInput","isResolved","_excluded$3","ChunksTailDetails","chunks","tailChunk","lastChunk","extendLast","firstTailChunk","blockIndex","lastBlockIter","_mapPosToBlock","chunkBlock","_stops","_blocks","remainChars","cstate","chunkShiftPos","PatternCursor","_log","_ref","_blockStartPos","block","pushState","bindBlock","_this$block","_this","_pushLeft","_this2","_this3","_this4","_pushRight","_this5","_this6","_Masked","_super","_excluded$2","definitions","_rebuildMask","defs","_maskedBlocks","pattern","unmaskingBlock","optionalBlock","blocks","bNames","bName","maskedBlock","isInput","STOP_CHAR","ESCAPE_CHAR","def","maskedState","bi","every","_this$_mapPosToBlock","startBlockIndex","blockIter","_flags$_beforeTailSta","_block","blockDetails","chunkTail","_forEachBlocksInRange","bFromPos","bToPos","blockChunk","_findStopBefore","stopBefore","si","toBlockIndex","startBlockIter","endBlockIndex","bDetails","accVal","_block2","blockStartPos","fromBlockIter","toBlockIter","isSameBlock","fromBlockStartPos","fromBlockEndPos","removeDetails","pushRightBeforeInput","popState","pushLeftBeforeInput","pushRightBeforeFilled","pushLeftBeforeRequired","pushLeftBeforeFilled","pushRightBeforeRequired","maskedBlocks","indices","gi","InputDefinition","FixedDefinition","MaskedRange","_MaskedPattern","fromStr","toStr","sameCharsCount","minstr","maxstr","_ref2","autofix","nextVal","_this$boundaries","boundaries","_this$boundaries2","_get2","firstNonZero","_matchFrom","_this$boundaries3","_this$boundaries4","_len","_key","GET_DEFAULT_BLOCKS","getFullYear","getMonth","getDate","bk","isDateExist","typedValue","_str$split2","MaskElement","_unsafeSelectionStart","_unsafeSelectionEnd","selectionStart","selectionEnd","_unsafeSelect","HTMLMaskElement","_MaskElement","_handlers","_this$input$getRootNo","_this$input$getRootNo2","_this$input","rootElement","setSelectionRange","_toggleEventHandler","EVENTS_MAP","selectionChange","drop","HTMLContenteditableMaskElement","_HTMLMaskElement","getSelection","anchorOffset","focusOffset","createRange","setStart","setEnd","removeAllRanges","addRange","_excluded$1","isContentEditable","_unmaskedValue","_saveSelection","_onInput","_onChange","_onDrop","_onFocus","_onClick","alignCursor","alignCursorFriendly","_bindEvents","updateValue","maskEquals","updateOptions","updateControl","ev","_cursorChanging","_changingCursorPos","isActive","_selection","newUnmaskedValue","newValue","isChanged","_fireChangeEvents","restOpts","updateMask","updateOpts","objectIncludes","arrA","arrB","dateA","dateB","getTime","regexpA","regexpB","_delayUpdateCursor","_abortUpdateCursor","_fireEvent","_inputEvent","hIndex","updateCursor","_unbindEvents","MaskedEnum","enum","_updateRegExps","allowNegative","radix","_numberRegExpInput","_numberRegExp","_mapToRadixRegExp","mapToRadix","_thousandsSeparatorRegExp","thousandsSeparator","noSepCh","_removeThousandsSeparators","prepCh","extendOnSeparators","_separatorsCount","_this$_adjustRangeWit","_adjustRangeWithSeparators","_this$_adjustRangeWit2","prevBeforeTailValue","prevBeforeTailSeparatorsCount","_separatorsCountFromSlice","appendDetails","_insertThousandsSeparators","beforeTailValue","beforeTailSeparatorsCount","searchFrom","separatorPos","separatorAroundFromPos","_findSeparatorAround","separatorAroundToPos","_this$_adjustRangeWit3","_this$_adjustRangeWit4","valueBeforePos","valueAfterPos","separatorAtLeftPos","separatorAtLeftEndPos","separatorAtRightPos","validnum","formatted","normalizeZeros","_normalizeZeros","padFractionalZeros","_padFractionalZeros","zeros","signed","_excluded","currentMask","compiledMasks","_applyDispatch","prevValueBeforeTail","inputValue","insertValue","_rawInputValue","tailValue","prevMask","prevMaskState","doDispatch","_this$currentMask","_this$currentMask2","currentMaskRef","mi","_this$currentMask3","_this$currentMask4","_get3","_len2","_key2","_this$currentMask5","_get4","_len3","_key3","_mask$mi","i1","i2","PIPE_TYPE","MASKED","UNMASKED","TYPED","createPipe","runIsolated","pipeArgs","burger","querySelector","hasAttribute","submenu","nextElementSibling","config1","pointBorderWidth","pointRadius","config2","config3","diagElem1","diagElem2","diagElem3","maskedElem","checkValid","errs","isValid","fieldValidate","form","fields","alert"],"mappings":"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","file":"../main.min.js","sourcesContent":["/* Libs */\r\n\r\n/*! jQuery v3.6.0 | (c) OpenJS Foundation and other contributors | jquery.org/license */\r\n!function(e,t){\"use strict\";\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error(\"jQuery requires a window with a document\");return t(e)}:t(e)}(\"undefined\"!=typeof window?window:this,function(C,e){\"use strict\";var t=[],r=Object.getPrototypeOf,s=t.slice,g=t.flat?function(e){return t.flat.call(e)}:function(e){return t.concat.apply([],e)},u=t.push,i=t.indexOf,n={},o=n.toString,v=n.hasOwnProperty,a=v.toString,l=a.call(Object),y={},m=function(e){return\"function\"==typeof e&&\"number\"!=typeof e.nodeType&&\"function\"!=typeof e.item},x=function(e){return null!=e&&e===e.window},E=C.document,c={type:!0,src:!0,nonce:!0,noModule:!0};function b(e,t,n){var r,i,o=(n=n||E).createElement(\"script\");if(o.text=e,t)for(r in c)(i=t[r]||t.getAttribute&&t.getAttribute(r))&&o.setAttribute(r,i);n.head.appendChild(o).parentNode.removeChild(o)}function w(e){return null==e?e+\"\":\"object\"==typeof e||\"function\"==typeof e?n[o.call(e)]||\"object\":typeof e}var f=\"3.6.0\",S=function(e,t){return new S.fn.init(e,t)};function p(e){var t=!!e&&\"length\"in e&&e.length,n=w(e);return!m(e)&&!x(e)&&(\"array\"===n||0===t||\"number\"==typeof t&&0<t&&t-1 in e)}S.fn=S.prototype={jquery:f,constructor:S,length:0,toArray:function(){return s.call(this)},get:function(e){return null==e?s.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=S.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return S.each(this,e)},map:function(n){return this.pushStack(S.map(this,function(e,t){return n.call(e,t,e)}))},slice:function(){return this.pushStack(s.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(S.grep(this,function(e,t){return(t+1)%2}))},odd:function(){return this.pushStack(S.grep(this,function(e,t){return t%2}))},eq:function(e){var t=this.length,n=+e+(e<0?t:0);return this.pushStack(0<=n&&n<t?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:u,sort:t.sort,splice:t.splice},S.extend=S.fn.extend=function(){var e,t,n,r,i,o,a=arguments[0]||{},s=1,u=arguments.length,l=!1;for(\"boolean\"==typeof a&&(l=a,a=arguments[s]||{},s++),\"object\"==typeof a||m(a)||(a={}),s===u&&(a=this,s--);s<u;s++)if(null!=(e=arguments[s]))for(t in e)r=e[t],\"__proto__\"!==t&&a!==r&&(l&&r&&(S.isPlainObject(r)||(i=Array.isArray(r)))?(n=a[t],o=i&&!Array.isArray(n)?[]:i||S.isPlainObject(n)?n:{},i=!1,a[t]=S.extend(l,o,r)):void 0!==r&&(a[t]=r));return a},S.extend({expando:\"jQuery\"+(f+Math.random()).replace(/\\D/g,\"\"),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var t,n;return!(!e||\"[object Object]\"!==o.call(e))&&(!(t=r(e))||\"function\"==typeof(n=v.call(t,\"constructor\")&&t.constructor)&&a.call(n)===l)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},globalEval:function(e,t,n){b(e,{nonce:t&&t.nonce},n)},each:function(e,t){var n,r=0;if(p(e)){for(n=e.length;r<n;r++)if(!1===t.call(e[r],r,e[r]))break}else for(r in e)if(!1===t.call(e[r],r,e[r]))break;return e},makeArray:function(e,t){var n=t||[];return null!=e&&(p(Object(e))?S.merge(n,\"string\"==typeof e?[e]:e):u.call(n,e)),n},inArray:function(e,t,n){return null==t?-1:i.call(t,e,n)},merge:function(e,t){for(var n=+t.length,r=0,i=e.length;r<n;r++)e[i++]=t[r];return e.length=i,e},grep:function(e,t,n){for(var r=[],i=0,o=e.length,a=!n;i<o;i++)!t(e[i],i)!==a&&r.push(e[i]);return r},map:function(e,t,n){var r,i,o=0,a=[];if(p(e))for(r=e.length;o<r;o++)null!=(i=t(e[o],o,n))&&a.push(i);else for(o in e)null!=(i=t(e[o],o,n))&&a.push(i);return g(a)},guid:1,support:y}),\"function\"==typeof Symbol&&(S.fn[Symbol.iterator]=t[Symbol.iterator]),S.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"),function(e,t){n[\"[object \"+t+\"]\"]=t.toLowerCase()});var d=function(n){var e,d,b,o,i,h,f,g,w,u,l,T,C,a,E,v,s,c,y,S=\"sizzle\"+1*new Date,p=n.document,k=0,r=0,m=ue(),x=ue(),A=ue(),N=ue(),j=function(e,t){return e===t&&(l=!0),0},D={}.hasOwnProperty,t=[],q=t.pop,L=t.push,H=t.push,O=t.slice,P=function(e,t){for(var n=0,r=e.length;n<r;n++)if(e[n]===t)return n;return-1},R=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",M=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",I=\"(?:\\\\\\\\[\\\\da-fA-F]{1,6}\"+M+\"?|\\\\\\\\[^\\\\r\\\\n\\\\f]|[\\\\w-]|[^\\0-\\\\x7f])+\",W=\"\\\\[\"+M+\"*(\"+I+\")(?:\"+M+\"*([*^$|!~]?=)\"+M+\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\"+I+\"))|)\"+M+\"*\\\\]\",F=\":(\"+I+\")(?:\\\\((('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+W+\")*)|.*)\\\\)|)\",B=new RegExp(M+\"+\",\"g\"),$=new RegExp(\"^\"+M+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+M+\"+$\",\"g\"),_=new RegExp(\"^\"+M+\"*,\"+M+\"*\"),z=new RegExp(\"^\"+M+\"*([>+~]|\"+M+\")\"+M+\"*\"),U=new RegExp(M+\"|>\"),X=new RegExp(F),V=new RegExp(\"^\"+I+\"$\"),G={ID:new RegExp(\"^#(\"+I+\")\"),CLASS:new RegExp(\"^\\\\.(\"+I+\")\"),TAG:new RegExp(\"^(\"+I+\"|[*])\"),ATTR:new RegExp(\"^\"+W),PSEUDO:new RegExp(\"^\"+F),CHILD:new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+M+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+M+\"*(?:([+-]|)\"+M+\"*(\\\\d+)|))\"+M+\"*\\\\)|)\",\"i\"),bool:new RegExp(\"^(?:\"+R+\")$\",\"i\"),needsContext:new RegExp(\"^\"+M+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+M+\"*((?:-\\\\d)?\\\\d*)\"+M+\"*\\\\)|)(?=[^-]|$)\",\"i\")},Y=/HTML$/i,Q=/^(?:input|select|textarea|button)$/i,J=/^h\\d$/i,K=/^[^{]+\\{\\s*\\[native \\w/,Z=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,ee=/[+~]/,te=new RegExp(\"\\\\\\\\[\\\\da-fA-F]{1,6}\"+M+\"?|\\\\\\\\([^\\\\r\\\\n\\\\f])\",\"g\"),ne=function(e,t){var n=\"0x\"+e.slice(1)-65536;return t||(n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320))},re=/([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,ie=function(e,t){return t?\"\\0\"===e?\"\\ufffd\":e.slice(0,-1)+\"\\\\\"+e.charCodeAt(e.length-1).toString(16)+\" \":\"\\\\\"+e},oe=function(){T()},ae=be(function(e){return!0===e.disabled&&\"fieldset\"===e.nodeName.toLowerCase()},{dir:\"parentNode\",next:\"legend\"});try{H.apply(t=O.call(p.childNodes),p.childNodes),t[p.childNodes.length].nodeType}catch(e){H={apply:t.length?function(e,t){L.apply(e,O.call(t))}:function(e,t){var n=e.length,r=0;while(e[n++]=t[r++]);e.length=n-1}}}function se(t,e,n,r){var i,o,a,s,u,l,c,f=e&&e.ownerDocument,p=e?e.nodeType:9;if(n=n||[],\"string\"!=typeof t||!t||1!==p&&9!==p&&11!==p)return n;if(!r&&(T(e),e=e||C,E)){if(11!==p&&(u=Z.exec(t)))if(i=u[1]){if(9===p){if(!(a=e.getElementById(i)))return n;if(a.id===i)return n.push(a),n}else if(f&&(a=f.getElementById(i))&&y(e,a)&&a.id===i)return n.push(a),n}else{if(u[2])return H.apply(n,e.getElementsByTagName(t)),n;if((i=u[3])&&d.getElementsByClassName&&e.getElementsByClassName)return H.apply(n,e.getElementsByClassName(i)),n}if(d.qsa&&!N[t+\" \"]&&(!v||!v.test(t))&&(1!==p||\"object\"!==e.nodeName.toLowerCase())){if(c=t,f=e,1===p&&(U.test(t)||z.test(t))){(f=ee.test(t)&&ye(e.parentNode)||e)===e&&d.scope||((s=e.getAttribute(\"id\"))?s=s.replace(re,ie):e.setAttribute(\"id\",s=S)),o=(l=h(t)).length;while(o--)l[o]=(s?\"#\"+s:\":scope\")+\" \"+xe(l[o]);c=l.join(\",\")}try{return H.apply(n,f.querySelectorAll(c)),n}catch(e){N(t,!0)}finally{s===S&&e.removeAttribute(\"id\")}}}return g(t.replace($,\"$1\"),e,n,r)}function ue(){var r=[];return function e(t,n){return r.push(t+\" \")>b.cacheLength&&delete e[r.shift()],e[t+\" \"]=n}}function le(e){return e[S]=!0,e}function ce(e){var t=C.createElement(\"fieldset\");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function fe(e,t){var n=e.split(\"|\"),r=n.length;while(r--)b.attrHandle[n[r]]=t}function pe(e,t){var n=t&&e,r=n&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(r)return r;if(n)while(n=n.nextSibling)if(n===t)return-1;return e?1:-1}function de(t){return function(e){return\"input\"===e.nodeName.toLowerCase()&&e.type===t}}function he(n){return function(e){var t=e.nodeName.toLowerCase();return(\"input\"===t||\"button\"===t)&&e.type===n}}function ge(t){return function(e){return\"form\"in e?e.parentNode&&!1===e.disabled?\"label\"in e?\"label\"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&ae(e)===t:e.disabled===t:\"label\"in e&&e.disabled===t}}function ve(a){return le(function(o){return o=+o,le(function(e,t){var n,r=a([],e.length,o),i=r.length;while(i--)e[n=r[i]]&&(e[n]=!(t[n]=e[n]))})})}function ye(e){return e&&\"undefined\"!=typeof e.getElementsByTagName&&e}for(e in d=se.support={},i=se.isXML=function(e){var t=e&&e.namespaceURI,n=e&&(e.ownerDocument||e).documentElement;return!Y.test(t||n&&n.nodeName||\"HTML\")},T=se.setDocument=function(e){var t,n,r=e?e.ownerDocument||e:p;return r!=C&&9===r.nodeType&&r.documentElement&&(a=(C=r).documentElement,E=!i(C),p!=C&&(n=C.defaultView)&&n.top!==n&&(n.addEventListener?n.addEventListener(\"unload\",oe,!1):n.attachEvent&&n.attachEvent(\"onunload\",oe)),d.scope=ce(function(e){return a.appendChild(e).appendChild(C.createElement(\"div\")),\"undefined\"!=typeof e.querySelectorAll&&!e.querySelectorAll(\":scope fieldset div\").length}),d.attributes=ce(function(e){return e.className=\"i\",!e.getAttribute(\"className\")}),d.getElementsByTagName=ce(function(e){return e.appendChild(C.createComment(\"\")),!e.getElementsByTagName(\"*\").length}),d.getElementsByClassName=K.test(C.getElementsByClassName),d.getById=ce(function(e){return a.appendChild(e).id=S,!C.getElementsByName||!C.getElementsByName(S).length}),d.getById?(b.filter.ID=function(e){var t=e.replace(te,ne);return function(e){return e.getAttribute(\"id\")===t}},b.find.ID=function(e,t){if(\"undefined\"!=typeof t.getElementById&&E){var n=t.getElementById(e);return n?[n]:[]}}):(b.filter.ID=function(e){var n=e.replace(te,ne);return function(e){var t=\"undefined\"!=typeof e.getAttributeNode&&e.getAttributeNode(\"id\");return t&&t.value===n}},b.find.ID=function(e,t){if(\"undefined\"!=typeof t.getElementById&&E){var n,r,i,o=t.getElementById(e);if(o){if((n=o.getAttributeNode(\"id\"))&&n.value===e)return[o];i=t.getElementsByName(e),r=0;while(o=i[r++])if((n=o.getAttributeNode(\"id\"))&&n.value===e)return[o]}return[]}}),b.find.TAG=d.getElementsByTagName?function(e,t){return\"undefined\"!=typeof t.getElementsByTagName?t.getElementsByTagName(e):d.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,r=[],i=0,o=t.getElementsByTagName(e);if(\"*\"===e){while(n=o[i++])1===n.nodeType&&r.push(n);return r}return o},b.find.CLASS=d.getElementsByClassName&&function(e,t){if(\"undefined\"!=typeof t.getElementsByClassName&&E)return t.getElementsByClassName(e)},s=[],v=[],(d.qsa=K.test(C.querySelectorAll))&&(ce(function(e){var t;a.appendChild(e).innerHTML=\"<a id='\"+S+\"'></a><select id='\"+S+\"-\\r\\\\' msallowcapture=''><option selected=''></option></select>\",e.querySelectorAll(\"[msallowcapture^='']\").length&&v.push(\"[*^$]=\"+M+\"*(?:''|\\\"\\\")\"),e.querySelectorAll(\"[selected]\").length||v.push(\"\\\\[\"+M+\"*(?:value|\"+R+\")\"),e.querySelectorAll(\"[id~=\"+S+\"-]\").length||v.push(\"~=\"),(t=C.createElement(\"input\")).setAttribute(\"name\",\"\"),e.appendChild(t),e.querySelectorAll(\"[name='']\").length||v.push(\"\\\\[\"+M+\"*name\"+M+\"*=\"+M+\"*(?:''|\\\"\\\")\"),e.querySelectorAll(\":checked\").length||v.push(\":checked\"),e.querySelectorAll(\"a#\"+S+\"+*\").length||v.push(\".#.+[+~]\"),e.querySelectorAll(\"\\\\\\f\"),v.push(\"[\\\\r\\\\n\\\\f]\")}),ce(function(e){e.innerHTML=\"<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>\";var t=C.createElement(\"input\");t.setAttribute(\"type\",\"hidden\"),e.appendChild(t).setAttribute(\"name\",\"D\"),e.querySelectorAll(\"[name=d]\").length&&v.push(\"name\"+M+\"*[*^$|!~]?=\"),2!==e.querySelectorAll(\":enabled\").length&&v.push(\":enabled\",\":disabled\"),a.appendChild(e).disabled=!0,2!==e.querySelectorAll(\":disabled\").length&&v.push(\":enabled\",\":disabled\"),e.querySelectorAll(\"*,:x\"),v.push(\",.*:\")})),(d.matchesSelector=K.test(c=a.matches||a.webkitMatchesSelector||a.mozMatchesSelector||a.oMatchesSelector||a.msMatchesSelector))&&ce(function(e){d.disconnectedMatch=c.call(e,\"*\"),c.call(e,\"[s!='']:x\"),s.push(\"!=\",F)}),v=v.length&&new RegExp(v.join(\"|\")),s=s.length&&new RegExp(s.join(\"|\")),t=K.test(a.compareDocumentPosition),y=t||K.test(a.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)while(t=t.parentNode)if(t===e)return!0;return!1},j=t?function(e,t){if(e===t)return l=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n||(1&(n=(e.ownerDocument||e)==(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!d.sortDetached&&t.compareDocumentPosition(e)===n?e==C||e.ownerDocument==p&&y(p,e)?-1:t==C||t.ownerDocument==p&&y(p,t)?1:u?P(u,e)-P(u,t):0:4&n?-1:1)}:function(e,t){if(e===t)return l=!0,0;var n,r=0,i=e.parentNode,o=t.parentNode,a=[e],s=[t];if(!i||!o)return e==C?-1:t==C?1:i?-1:o?1:u?P(u,e)-P(u,t):0;if(i===o)return pe(e,t);n=e;while(n=n.parentNode)a.unshift(n);n=t;while(n=n.parentNode)s.unshift(n);while(a[r]===s[r])r++;return r?pe(a[r],s[r]):a[r]==p?-1:s[r]==p?1:0}),C},se.matches=function(e,t){return se(e,null,null,t)},se.matchesSelector=function(e,t){if(T(e),d.matchesSelector&&E&&!N[t+\" \"]&&(!s||!s.test(t))&&(!v||!v.test(t)))try{var n=c.call(e,t);if(n||d.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(e){N(t,!0)}return 0<se(t,C,null,[e]).length},se.contains=function(e,t){return(e.ownerDocument||e)!=C&&T(e),y(e,t)},se.attr=function(e,t){(e.ownerDocument||e)!=C&&T(e);var n=b.attrHandle[t.toLowerCase()],r=n&&D.call(b.attrHandle,t.toLowerCase())?n(e,t,!E):void 0;return void 0!==r?r:d.attributes||!E?e.getAttribute(t):(r=e.getAttributeNode(t))&&r.specified?r.value:null},se.escape=function(e){return(e+\"\").replace(re,ie)},se.error=function(e){throw new Error(\"Syntax error, unrecognized expression: \"+e)},se.uniqueSort=function(e){var t,n=[],r=0,i=0;if(l=!d.detectDuplicates,u=!d.sortStable&&e.slice(0),e.sort(j),l){while(t=e[i++])t===e[i]&&(r=n.push(i));while(r--)e.splice(n[r],1)}return u=null,e},o=se.getText=function(e){var t,n=\"\",r=0,i=e.nodeType;if(i){if(1===i||9===i||11===i){if(\"string\"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=o(e)}else if(3===i||4===i)return e.nodeValue}else while(t=e[r++])n+=o(t);return n},(b=se.selectors={cacheLength:50,createPseudo:le,match:G,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(te,ne),e[3]=(e[3]||e[4]||e[5]||\"\").replace(te,ne),\"~=\"===e[2]&&(e[3]=\" \"+e[3]+\" \"),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),\"nth\"===e[1].slice(0,3)?(e[3]||se.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*(\"even\"===e[3]||\"odd\"===e[3])),e[5]=+(e[7]+e[8]||\"odd\"===e[3])):e[3]&&se.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return G.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||\"\":n&&X.test(n)&&(t=h(n,!0))&&(t=n.indexOf(\")\",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(te,ne).toLowerCase();return\"*\"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=m[e+\" \"];return t||(t=new RegExp(\"(^|\"+M+\")\"+e+\"(\"+M+\"|$)\"))&&m(e,function(e){return t.test(\"string\"==typeof e.className&&e.className||\"undefined\"!=typeof e.getAttribute&&e.getAttribute(\"class\")||\"\")})},ATTR:function(n,r,i){return function(e){var t=se.attr(e,n);return null==t?\"!=\"===r:!r||(t+=\"\",\"=\"===r?t===i:\"!=\"===r?t!==i:\"^=\"===r?i&&0===t.indexOf(i):\"*=\"===r?i&&-1<t.indexOf(i):\"$=\"===r?i&&t.slice(-i.length)===i:\"~=\"===r?-1<(\" \"+t.replace(B,\" \")+\" \").indexOf(i):\"|=\"===r&&(t===i||t.slice(0,i.length+1)===i+\"-\"))}},CHILD:function(h,e,t,g,v){var y=\"nth\"!==h.slice(0,3),m=\"last\"!==h.slice(-4),x=\"of-type\"===e;return 1===g&&0===v?function(e){return!!e.parentNode}:function(e,t,n){var r,i,o,a,s,u,l=y!==m?\"nextSibling\":\"previousSibling\",c=e.parentNode,f=x&&e.nodeName.toLowerCase(),p=!n&&!x,d=!1;if(c){if(y){while(l){a=e;while(a=a[l])if(x?a.nodeName.toLowerCase()===f:1===a.nodeType)return!1;u=l=\"only\"===h&&!u&&\"nextSibling\"}return!0}if(u=[m?c.firstChild:c.lastChild],m&&p){d=(s=(r=(i=(o=(a=c)[S]||(a[S]={}))[a.uniqueID]||(o[a.uniqueID]={}))[h]||[])[0]===k&&r[1])&&r[2],a=s&&c.childNodes[s];while(a=++s&&a&&a[l]||(d=s=0)||u.pop())if(1===a.nodeType&&++d&&a===e){i[h]=[k,s,d];break}}else if(p&&(d=s=(r=(i=(o=(a=e)[S]||(a[S]={}))[a.uniqueID]||(o[a.uniqueID]={}))[h]||[])[0]===k&&r[1]),!1===d)while(a=++s&&a&&a[l]||(d=s=0)||u.pop())if((x?a.nodeName.toLowerCase()===f:1===a.nodeType)&&++d&&(p&&((i=(o=a[S]||(a[S]={}))[a.uniqueID]||(o[a.uniqueID]={}))[h]=[k,d]),a===e))break;return(d-=v)===g||d%g==0&&0<=d/g}}},PSEUDO:function(e,o){var t,a=b.pseudos[e]||b.setFilters[e.toLowerCase()]||se.error(\"unsupported pseudo: \"+e);return a[S]?a(o):1<a.length?(t=[e,e,\"\",o],b.setFilters.hasOwnProperty(e.toLowerCase())?le(function(e,t){var n,r=a(e,o),i=r.length;while(i--)e[n=P(e,r[i])]=!(t[n]=r[i])}):function(e){return a(e,0,t)}):a}},pseudos:{not:le(function(e){var r=[],i=[],s=f(e.replace($,\"$1\"));return s[S]?le(function(e,t,n,r){var i,o=s(e,null,r,[]),a=e.length;while(a--)(i=o[a])&&(e[a]=!(t[a]=i))}):function(e,t,n){return r[0]=e,s(r,null,n,i),r[0]=null,!i.pop()}}),has:le(function(t){return function(e){return 0<se(t,e).length}}),contains:le(function(t){return t=t.replace(te,ne),function(e){return-1<(e.textContent||o(e)).indexOf(t)}}),lang:le(function(n){return V.test(n||\"\")||se.error(\"unsupported lang: \"+n),n=n.replace(te,ne).toLowerCase(),function(e){var t;do{if(t=E?e.lang:e.getAttribute(\"xml:lang\")||e.getAttribute(\"lang\"))return(t=t.toLowerCase())===n||0===t.indexOf(n+\"-\")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=n.location&&n.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===a},focus:function(e){return e===C.activeElement&&(!C.hasFocus||C.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:ge(!1),disabled:ge(!0),checked:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&!!e.checked||\"option\"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!b.pseudos.empty(e)},header:function(e){return J.test(e.nodeName)},input:function(e){return Q.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&\"button\"===e.type||\"button\"===t},text:function(e){var t;return\"input\"===e.nodeName.toLowerCase()&&\"text\"===e.type&&(null==(t=e.getAttribute(\"type\"))||\"text\"===t.toLowerCase())},first:ve(function(){return[0]}),last:ve(function(e,t){return[t-1]}),eq:ve(function(e,t,n){return[n<0?n+t:n]}),even:ve(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:ve(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:ve(function(e,t,n){for(var r=n<0?n+t:t<n?t:n;0<=--r;)e.push(r);return e}),gt:ve(function(e,t,n){for(var r=n<0?n+t:n;++r<t;)e.push(r);return e})}}).pseudos.nth=b.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})b.pseudos[e]=de(e);for(e in{submit:!0,reset:!0})b.pseudos[e]=he(e);function me(){}function xe(e){for(var t=0,n=e.length,r=\"\";t<n;t++)r+=e[t].value;return r}function be(s,e,t){var u=e.dir,l=e.next,c=l||u,f=t&&\"parentNode\"===c,p=r++;return e.first?function(e,t,n){while(e=e[u])if(1===e.nodeType||f)return s(e,t,n);return!1}:function(e,t,n){var r,i,o,a=[k,p];if(n){while(e=e[u])if((1===e.nodeType||f)&&s(e,t,n))return!0}else while(e=e[u])if(1===e.nodeType||f)if(i=(o=e[S]||(e[S]={}))[e.uniqueID]||(o[e.uniqueID]={}),l&&l===e.nodeName.toLowerCase())e=e[u]||e;else{if((r=i[c])&&r[0]===k&&r[1]===p)return a[2]=r[2];if((i[c]=a)[2]=s(e,t,n))return!0}return!1}}function we(i){return 1<i.length?function(e,t,n){var r=i.length;while(r--)if(!i[r](e,t,n))return!1;return!0}:i[0]}function Te(e,t,n,r,i){for(var o,a=[],s=0,u=e.length,l=null!=t;s<u;s++)(o=e[s])&&(n&&!n(o,r,i)||(a.push(o),l&&t.push(s)));return a}function Ce(d,h,g,v,y,e){return v&&!v[S]&&(v=Ce(v)),y&&!y[S]&&(y=Ce(y,e)),le(function(e,t,n,r){var i,o,a,s=[],u=[],l=t.length,c=e||function(e,t,n){for(var r=0,i=t.length;r<i;r++)se(e,t[r],n);return n}(h||\"*\",n.nodeType?[n]:n,[]),f=!d||!e&&h?c:Te(c,s,d,n,r),p=g?y||(e?d:l||v)?[]:t:f;if(g&&g(f,p,n,r),v){i=Te(p,u),v(i,[],n,r),o=i.length;while(o--)(a=i[o])&&(p[u[o]]=!(f[u[o]]=a))}if(e){if(y||d){if(y){i=[],o=p.length;while(o--)(a=p[o])&&i.push(f[o]=a);y(null,p=[],i,r)}o=p.length;while(o--)(a=p[o])&&-1<(i=y?P(e,a):s[o])&&(e[i]=!(t[i]=a))}}else p=Te(p===t?p.splice(l,p.length):p),y?y(null,t,p,r):H.apply(t,p)})}function Ee(e){for(var i,t,n,r=e.length,o=b.relative[e[0].type],a=o||b.relative[\" \"],s=o?1:0,u=be(function(e){return e===i},a,!0),l=be(function(e){return-1<P(i,e)},a,!0),c=[function(e,t,n){var r=!o&&(n||t!==w)||((i=t).nodeType?u(e,t,n):l(e,t,n));return i=null,r}];s<r;s++)if(t=b.relative[e[s].type])c=[be(we(c),t)];else{if((t=b.filter[e[s].type].apply(null,e[s].matches))[S]){for(n=++s;n<r;n++)if(b.relative[e[n].type])break;return Ce(1<s&&we(c),1<s&&xe(e.slice(0,s-1).concat({value:\" \"===e[s-2].type?\"*\":\"\"})).replace($,\"$1\"),t,s<n&&Ee(e.slice(s,n)),n<r&&Ee(e=e.slice(n)),n<r&&xe(e))}c.push(t)}return we(c)}return me.prototype=b.filters=b.pseudos,b.setFilters=new me,h=se.tokenize=function(e,t){var n,r,i,o,a,s,u,l=x[e+\" \"];if(l)return t?0:l.slice(0);a=e,s=[],u=b.preFilter;while(a){for(o in n&&!(r=_.exec(a))||(r&&(a=a.slice(r[0].length)||a),s.push(i=[])),n=!1,(r=z.exec(a))&&(n=r.shift(),i.push({value:n,type:r[0].replace($,\" \")}),a=a.slice(n.length)),b.filter)!(r=G[o].exec(a))||u[o]&&!(r=u[o](r))||(n=r.shift(),i.push({value:n,type:o,matches:r}),a=a.slice(n.length));if(!n)break}return t?a.length:a?se.error(e):x(e,s).slice(0)},f=se.compile=function(e,t){var n,v,y,m,x,r,i=[],o=[],a=A[e+\" \"];if(!a){t||(t=h(e)),n=t.length;while(n--)(a=Ee(t[n]))[S]?i.push(a):o.push(a);(a=A(e,(v=o,m=0<(y=i).length,x=0<v.length,r=function(e,t,n,r,i){var o,a,s,u=0,l=\"0\",c=e&&[],f=[],p=w,d=e||x&&b.find.TAG(\"*\",i),h=k+=null==p?1:Math.random()||.1,g=d.length;for(i&&(w=t==C||t||i);l!==g&&null!=(o=d[l]);l++){if(x&&o){a=0,t||o.ownerDocument==C||(T(o),n=!E);while(s=v[a++])if(s(o,t||C,n)){r.push(o);break}i&&(k=h)}m&&((o=!s&&o)&&u--,e&&c.push(o))}if(u+=l,m&&l!==u){a=0;while(s=y[a++])s(c,f,t,n);if(e){if(0<u)while(l--)c[l]||f[l]||(f[l]=q.call(r));f=Te(f)}H.apply(r,f),i&&!e&&0<f.length&&1<u+y.length&&se.uniqueSort(r)}return i&&(k=h,w=p),c},m?le(r):r))).selector=e}return a},g=se.select=function(e,t,n,r){var i,o,a,s,u,l=\"function\"==typeof e&&e,c=!r&&h(e=l.selector||e);if(n=n||[],1===c.length){if(2<(o=c[0]=c[0].slice(0)).length&&\"ID\"===(a=o[0]).type&&9===t.nodeType&&E&&b.relative[o[1].type]){if(!(t=(b.find.ID(a.matches[0].replace(te,ne),t)||[])[0]))return n;l&&(t=t.parentNode),e=e.slice(o.shift().value.length)}i=G.needsContext.test(e)?0:o.length;while(i--){if(a=o[i],b.relative[s=a.type])break;if((u=b.find[s])&&(r=u(a.matches[0].replace(te,ne),ee.test(o[0].type)&&ye(t.parentNode)||t))){if(o.splice(i,1),!(e=r.length&&xe(o)))return H.apply(n,r),n;break}}}return(l||f(e,c))(r,t,!E,n,!t||ee.test(e)&&ye(t.parentNode)||t),n},d.sortStable=S.split(\"\").sort(j).join(\"\")===S,d.detectDuplicates=!!l,T(),d.sortDetached=ce(function(e){return 1&e.compareDocumentPosition(C.createElement(\"fieldset\"))}),ce(function(e){return e.innerHTML=\"<a href='#'></a>\",\"#\"===e.firstChild.getAttribute(\"href\")})||fe(\"type|href|height|width\",function(e,t,n){if(!n)return e.getAttribute(t,\"type\"===t.toLowerCase()?1:2)}),d.attributes&&ce(function(e){return e.innerHTML=\"<input/>\",e.firstChild.setAttribute(\"value\",\"\"),\"\"===e.firstChild.getAttribute(\"value\")})||fe(\"value\",function(e,t,n){if(!n&&\"input\"===e.nodeName.toLowerCase())return e.defaultValue}),ce(function(e){return null==e.getAttribute(\"disabled\")})||fe(R,function(e,t,n){var r;if(!n)return!0===e[t]?t.toLowerCase():(r=e.getAttributeNode(t))&&r.specified?r.value:null}),se}(C);S.find=d,S.expr=d.selectors,S.expr[\":\"]=S.expr.pseudos,S.uniqueSort=S.unique=d.uniqueSort,S.text=d.getText,S.isXMLDoc=d.isXML,S.contains=d.contains,S.escapeSelector=d.escape;var h=function(e,t,n){var r=[],i=void 0!==n;while((e=e[t])&&9!==e.nodeType)if(1===e.nodeType){if(i&&S(e).is(n))break;r.push(e)}return r},T=function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n},k=S.expr.match.needsContext;function A(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var N=/^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i;function j(e,n,r){return m(n)?S.grep(e,function(e,t){return!!n.call(e,t,e)!==r}):n.nodeType?S.grep(e,function(e){return e===n!==r}):\"string\"!=typeof n?S.grep(e,function(e){return-1<i.call(n,e)!==r}):S.filter(n,e,r)}S.filter=function(e,t,n){var r=t[0];return n&&(e=\":not(\"+e+\")\"),1===t.length&&1===r.nodeType?S.find.matchesSelector(r,e)?[r]:[]:S.find.matches(e,S.grep(t,function(e){return 1===e.nodeType}))},S.fn.extend({find:function(e){var t,n,r=this.length,i=this;if(\"string\"!=typeof e)return this.pushStack(S(e).filter(function(){for(t=0;t<r;t++)if(S.contains(i[t],this))return!0}));for(n=this.pushStack([]),t=0;t<r;t++)S.find(e,i[t],n);return 1<r?S.uniqueSort(n):n},filter:function(e){return this.pushStack(j(this,e||[],!1))},not:function(e){return this.pushStack(j(this,e||[],!0))},is:function(e){return!!j(this,\"string\"==typeof e&&k.test(e)?S(e):e||[],!1).length}});var D,q=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/;(S.fn.init=function(e,t,n){var r,i;if(!e)return this;if(n=n||D,\"string\"==typeof e){if(!(r=\"<\"===e[0]&&\">\"===e[e.length-1]&&3<=e.length?[null,e,null]:q.exec(e))||!r[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(r[1]){if(t=t instanceof S?t[0]:t,S.merge(this,S.parseHTML(r[1],t&&t.nodeType?t.ownerDocument||t:E,!0)),N.test(r[1])&&S.isPlainObject(t))for(r in t)m(this[r])?this[r](t[r]):this.attr(r,t[r]);return this}return(i=E.getElementById(r[2]))&&(this[0]=i,this.length=1),this}return e.nodeType?(this[0]=e,this.length=1,this):m(e)?void 0!==n.ready?n.ready(e):e(S):S.makeArray(e,this)}).prototype=S.fn,D=S(E);var L=/^(?:parents|prev(?:Until|All))/,H={children:!0,contents:!0,next:!0,prev:!0};function O(e,t){while((e=e[t])&&1!==e.nodeType);return e}S.fn.extend({has:function(e){var t=S(e,this),n=t.length;return this.filter(function(){for(var e=0;e<n;e++)if(S.contains(this,t[e]))return!0})},closest:function(e,t){var n,r=0,i=this.length,o=[],a=\"string\"!=typeof e&&S(e);if(!k.test(e))for(;r<i;r++)for(n=this[r];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(a?-1<a.index(n):1===n.nodeType&&S.find.matchesSelector(n,e))){o.push(n);break}return this.pushStack(1<o.length?S.uniqueSort(o):o)},index:function(e){return e?\"string\"==typeof e?i.call(S(e),this[0]):i.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(S.uniqueSort(S.merge(this.get(),S(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),S.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return h(e,\"parentNode\")},parentsUntil:function(e,t,n){return h(e,\"parentNode\",n)},next:function(e){return O(e,\"nextSibling\")},prev:function(e){return O(e,\"previousSibling\")},nextAll:function(e){return h(e,\"nextSibling\")},prevAll:function(e){return h(e,\"previousSibling\")},nextUntil:function(e,t,n){return h(e,\"nextSibling\",n)},prevUntil:function(e,t,n){return h(e,\"previousSibling\",n)},siblings:function(e){return T((e.parentNode||{}).firstChild,e)},children:function(e){return T(e.firstChild)},contents:function(e){return null!=e.contentDocument&&r(e.contentDocument)?e.contentDocument:(A(e,\"template\")&&(e=e.content||e),S.merge([],e.childNodes))}},function(r,i){S.fn[r]=function(e,t){var n=S.map(this,i,e);return\"Until\"!==r.slice(-5)&&(t=e),t&&\"string\"==typeof t&&(n=S.filter(t,n)),1<this.length&&(H[r]||S.uniqueSort(n),L.test(r)&&n.reverse()),this.pushStack(n)}});var P=/[^\\x20\\t\\r\\n\\f]+/g;function R(e){return e}function M(e){throw e}function I(e,t,n,r){var i;try{e&&m(i=e.promise)?i.call(e).done(t).fail(n):e&&m(i=e.then)?i.call(e,t,n):t.apply(void 0,[e].slice(r))}catch(e){n.apply(void 0,[e])}}S.Callbacks=function(r){var e,n;r=\"string\"==typeof r?(e=r,n={},S.each(e.match(P)||[],function(e,t){n[t]=!0}),n):S.extend({},r);var i,t,o,a,s=[],u=[],l=-1,c=function(){for(a=a||r.once,o=i=!0;u.length;l=-1){t=u.shift();while(++l<s.length)!1===s[l].apply(t[0],t[1])&&r.stopOnFalse&&(l=s.length,t=!1)}r.memory||(t=!1),i=!1,a&&(s=t?[]:\"\")},f={add:function(){return s&&(t&&!i&&(l=s.length-1,u.push(t)),function n(e){S.each(e,function(e,t){m(t)?r.unique&&f.has(t)||s.push(t):t&&t.length&&\"string\"!==w(t)&&n(t)})}(arguments),t&&!i&&c()),this},remove:function(){return S.each(arguments,function(e,t){var n;while(-1<(n=S.inArray(t,s,n)))s.splice(n,1),n<=l&&l--}),this},has:function(e){return e?-1<S.inArray(e,s):0<s.length},empty:function(){return s&&(s=[]),this},disable:function(){return a=u=[],s=t=\"\",this},disabled:function(){return!s},lock:function(){return a=u=[],t||i||(s=t=\"\"),this},locked:function(){return!!a},fireWith:function(e,t){return a||(t=[e,(t=t||[]).slice?t.slice():t],u.push(t),i||c()),this},fire:function(){return f.fireWith(this,arguments),this},fired:function(){return!!o}};return f},S.extend({Deferred:function(e){var o=[[\"notify\",\"progress\",S.Callbacks(\"memory\"),S.Callbacks(\"memory\"),2],[\"resolve\",\"done\",S.Callbacks(\"once memory\"),S.Callbacks(\"once memory\"),0,\"resolved\"],[\"reject\",\"fail\",S.Callbacks(\"once memory\"),S.Callbacks(\"once memory\"),1,\"rejected\"]],i=\"pending\",a={state:function(){return i},always:function(){return s.done(arguments).fail(arguments),this},\"catch\":function(e){return a.then(null,e)},pipe:function(){var i=arguments;return S.Deferred(function(r){S.each(o,function(e,t){var n=m(i[t[4]])&&i[t[4]];s[t[1]](function(){var e=n&&n.apply(this,arguments);e&&m(e.promise)?e.promise().progress(r.notify).done(r.resolve).fail(r.reject):r[t[0]+\"With\"](this,n?[e]:arguments)})}),i=null}).promise()},then:function(t,n,r){var u=0;function l(i,o,a,s){return function(){var n=this,r=arguments,e=function(){var e,t;if(!(i<u)){if((e=a.apply(n,r))===o.promise())throw new TypeError(\"Thenable self-resolution\");t=e&&(\"object\"==typeof e||\"function\"==typeof e)&&e.then,m(t)?s?t.call(e,l(u,o,R,s),l(u,o,M,s)):(u++,t.call(e,l(u,o,R,s),l(u,o,M,s),l(u,o,R,o.notifyWith))):(a!==R&&(n=void 0,r=[e]),(s||o.resolveWith)(n,r))}},t=s?e:function(){try{e()}catch(e){S.Deferred.exceptionHook&&S.Deferred.exceptionHook(e,t.stackTrace),u<=i+1&&(a!==M&&(n=void 0,r=[e]),o.rejectWith(n,r))}};i?t():(S.Deferred.getStackHook&&(t.stackTrace=S.Deferred.getStackHook()),C.setTimeout(t))}}return S.Deferred(function(e){o[0][3].add(l(0,e,m(r)?r:R,e.notifyWith)),o[1][3].add(l(0,e,m(t)?t:R)),o[2][3].add(l(0,e,m(n)?n:M))}).promise()},promise:function(e){return null!=e?S.extend(e,a):a}},s={};return S.each(o,function(e,t){var n=t[2],r=t[5];a[t[1]]=n.add,r&&n.add(function(){i=r},o[3-e][2].disable,o[3-e][3].disable,o[0][2].lock,o[0][3].lock),n.add(t[3].fire),s[t[0]]=function(){return s[t[0]+\"With\"](this===s?void 0:this,arguments),this},s[t[0]+\"With\"]=n.fireWith}),a.promise(s),e&&e.call(s,s),s},when:function(e){var n=arguments.length,t=n,r=Array(t),i=s.call(arguments),o=S.Deferred(),a=function(t){return function(e){r[t]=this,i[t]=1<arguments.length?s.call(arguments):e,--n||o.resolveWith(r,i)}};if(n<=1&&(I(e,o.done(a(t)).resolve,o.reject,!n),\"pending\"===o.state()||m(i[t]&&i[t].then)))return o.then();while(t--)I(i[t],a(t),o.reject);return o.promise()}});var W=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;S.Deferred.exceptionHook=function(e,t){C.console&&C.console.warn&&e&&W.test(e.name)&&C.console.warn(\"jQuery.Deferred exception: \"+e.message,e.stack,t)},S.readyException=function(e){C.setTimeout(function(){throw e})};var F=S.Deferred();function B(){E.removeEventListener(\"DOMContentLoaded\",B),C.removeEventListener(\"load\",B),S.ready()}S.fn.ready=function(e){return F.then(e)[\"catch\"](function(e){S.readyException(e)}),this},S.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--S.readyWait:S.isReady)||(S.isReady=!0)!==e&&0<--S.readyWait||F.resolveWith(E,[S])}}),S.ready.then=F.then,\"complete\"===E.readyState||\"loading\"!==E.readyState&&!E.documentElement.doScroll?C.setTimeout(S.ready):(E.addEventListener(\"DOMContentLoaded\",B),C.addEventListener(\"load\",B));var $=function(e,t,n,r,i,o,a){var s=0,u=e.length,l=null==n;if(\"object\"===w(n))for(s in i=!0,n)$(e,t,s,n[s],!0,o,a);else if(void 0!==r&&(i=!0,m(r)||(a=!0),l&&(a?(t.call(e,r),t=null):(l=t,t=function(e,t,n){return l.call(S(e),n)})),t))for(;s<u;s++)t(e[s],n,a?r:r.call(e[s],s,t(e[s],n)));return i?e:l?t.call(e):u?t(e[0],n):o},_=/^-ms-/,z=/-([a-z])/g;function U(e,t){return t.toUpperCase()}function X(e){return e.replace(_,\"ms-\").replace(z,U)}var V=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType};function G(){this.expando=S.expando+G.uid++}G.uid=1,G.prototype={cache:function(e){var t=e[this.expando];return t||(t={},V(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,n){var r,i=this.cache(e);if(\"string\"==typeof t)i[X(t)]=n;else for(r in t)i[X(r)]=t[r];return i},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][X(t)]},access:function(e,t,n){return void 0===t||t&&\"string\"==typeof t&&void 0===n?this.get(e,t):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,r=e[this.expando];if(void 0!==r){if(void 0!==t){n=(t=Array.isArray(t)?t.map(X):(t=X(t))in r?[t]:t.match(P)||[]).length;while(n--)delete r[t[n]]}(void 0===t||S.isEmptyObject(r))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!S.isEmptyObject(t)}};var Y=new G,Q=new G,J=/^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,K=/[A-Z]/g;function Z(e,t,n){var r,i;if(void 0===n&&1===e.nodeType)if(r=\"data-\"+t.replace(K,\"-$&\").toLowerCase(),\"string\"==typeof(n=e.getAttribute(r))){try{n=\"true\"===(i=n)||\"false\"!==i&&(\"null\"===i?null:i===+i+\"\"?+i:J.test(i)?JSON.parse(i):i)}catch(e){}Q.set(e,t,n)}else n=void 0;return n}S.extend({hasData:function(e){return Q.hasData(e)||Y.hasData(e)},data:function(e,t,n){return Q.access(e,t,n)},removeData:function(e,t){Q.remove(e,t)},_data:function(e,t,n){return Y.access(e,t,n)},_removeData:function(e,t){Y.remove(e,t)}}),S.fn.extend({data:function(n,e){var t,r,i,o=this[0],a=o&&o.attributes;if(void 0===n){if(this.length&&(i=Q.get(o),1===o.nodeType&&!Y.get(o,\"hasDataAttrs\"))){t=a.length;while(t--)a[t]&&0===(r=a[t].name).indexOf(\"data-\")&&(r=X(r.slice(5)),Z(o,r,i[r]));Y.set(o,\"hasDataAttrs\",!0)}return i}return\"object\"==typeof n?this.each(function(){Q.set(this,n)}):$(this,function(e){var t;if(o&&void 0===e)return void 0!==(t=Q.get(o,n))?t:void 0!==(t=Z(o,n))?t:void 0;this.each(function(){Q.set(this,n,e)})},null,e,1<arguments.length,null,!0)},removeData:function(e){return this.each(function(){Q.remove(this,e)})}}),S.extend({queue:function(e,t,n){var r;if(e)return t=(t||\"fx\")+\"queue\",r=Y.get(e,t),n&&(!r||Array.isArray(n)?r=Y.access(e,t,S.makeArray(n)):r.push(n)),r||[]},dequeue:function(e,t){t=t||\"fx\";var n=S.queue(e,t),r=n.length,i=n.shift(),o=S._queueHooks(e,t);\"inprogress\"===i&&(i=n.shift(),r--),i&&(\"fx\"===t&&n.unshift(\"inprogress\"),delete o.stop,i.call(e,function(){S.dequeue(e,t)},o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+\"queueHooks\";return Y.get(e,n)||Y.access(e,n,{empty:S.Callbacks(\"once memory\").add(function(){Y.remove(e,[t+\"queue\",n])})})}}),S.fn.extend({queue:function(t,n){var e=2;return\"string\"!=typeof t&&(n=t,t=\"fx\",e--),arguments.length<e?S.queue(this[0],t):void 0===n?this:this.each(function(){var e=S.queue(this,t,n);S._queueHooks(this,t),\"fx\"===t&&\"inprogress\"!==e[0]&&S.dequeue(this,t)})},dequeue:function(e){return this.each(function(){S.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||\"fx\",[])},promise:function(e,t){var n,r=1,i=S.Deferred(),o=this,a=this.length,s=function(){--r||i.resolveWith(o,[o])};\"string\"!=typeof e&&(t=e,e=void 0),e=e||\"fx\";while(a--)(n=Y.get(o[a],e+\"queueHooks\"))&&n.empty&&(r++,n.empty.add(s));return s(),i.promise(t)}});var ee=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,te=new RegExp(\"^(?:([+-])=|)(\"+ee+\")([a-z%]*)$\",\"i\"),ne=[\"Top\",\"Right\",\"Bottom\",\"Left\"],re=E.documentElement,ie=function(e){return S.contains(e.ownerDocument,e)},oe={composed:!0};re.getRootNode&&(ie=function(e){return S.contains(e.ownerDocument,e)||e.getRootNode(oe)===e.ownerDocument});var ae=function(e,t){return\"none\"===(e=t||e).style.display||\"\"===e.style.display&&ie(e)&&\"none\"===S.css(e,\"display\")};function se(e,t,n,r){var i,o,a=20,s=r?function(){return r.cur()}:function(){return S.css(e,t,\"\")},u=s(),l=n&&n[3]||(S.cssNumber[t]?\"\":\"px\"),c=e.nodeType&&(S.cssNumber[t]||\"px\"!==l&&+u)&&te.exec(S.css(e,t));if(c&&c[3]!==l){u/=2,l=l||c[3],c=+u||1;while(a--)S.style(e,t,c+l),(1-o)*(1-(o=s()/u||.5))<=0&&(a=0),c/=o;c*=2,S.style(e,t,c+l),n=n||[]}return n&&(c=+c||+u||0,i=n[1]?c+(n[1]+1)*n[2]:+n[2],r&&(r.unit=l,r.start=c,r.end=i)),i}var ue={};function le(e,t){for(var n,r,i,o,a,s,u,l=[],c=0,f=e.length;c<f;c++)(r=e[c]).style&&(n=r.style.display,t?(\"none\"===n&&(l[c]=Y.get(r,\"display\")||null,l[c]||(r.style.display=\"\")),\"\"===r.style.display&&ae(r)&&(l[c]=(u=a=o=void 0,a=(i=r).ownerDocument,s=i.nodeName,(u=ue[s])||(o=a.body.appendChild(a.createElement(s)),u=S.css(o,\"display\"),o.parentNode.removeChild(o),\"none\"===u&&(u=\"block\"),ue[s]=u)))):\"none\"!==n&&(l[c]=\"none\",Y.set(r,\"display\",n)));for(c=0;c<f;c++)null!=l[c]&&(e[c].style.display=l[c]);return e}S.fn.extend({show:function(){return le(this,!0)},hide:function(){return le(this)},toggle:function(e){return\"boolean\"==typeof e?e?this.show():this.hide():this.each(function(){ae(this)?S(this).show():S(this).hide()})}});var ce,fe,pe=/^(?:checkbox|radio)$/i,de=/<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i,he=/^$|^module$|\\/(?:java|ecma)script/i;ce=E.createDocumentFragment().appendChild(E.createElement(\"div\")),(fe=E.createElement(\"input\")).setAttribute(\"type\",\"radio\"),fe.setAttribute(\"checked\",\"checked\"),fe.setAttribute(\"name\",\"t\"),ce.appendChild(fe),y.checkClone=ce.cloneNode(!0).cloneNode(!0).lastChild.checked,ce.innerHTML=\"<textarea>x</textarea>\",y.noCloneChecked=!!ce.cloneNode(!0).lastChild.defaultValue,ce.innerHTML=\"<option></option>\",y.option=!!ce.lastChild;var ge={thead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};function ve(e,t){var n;return n=\"undefined\"!=typeof e.getElementsByTagName?e.getElementsByTagName(t||\"*\"):\"undefined\"!=typeof e.querySelectorAll?e.querySelectorAll(t||\"*\"):[],void 0===t||t&&A(e,t)?S.merge([e],n):n}function ye(e,t){for(var n=0,r=e.length;n<r;n++)Y.set(e[n],\"globalEval\",!t||Y.get(t[n],\"globalEval\"))}ge.tbody=ge.tfoot=ge.colgroup=ge.caption=ge.thead,ge.th=ge.td,y.option||(ge.optgroup=ge.option=[1,\"<select multiple='multiple'>\",\"</select>\"]);var me=/<|&#?\\w+;/;function xe(e,t,n,r,i){for(var o,a,s,u,l,c,f=t.createDocumentFragment(),p=[],d=0,h=e.length;d<h;d++)if((o=e[d])||0===o)if(\"object\"===w(o))S.merge(p,o.nodeType?[o]:o);else if(me.test(o)){a=a||f.appendChild(t.createElement(\"div\")),s=(de.exec(o)||[\"\",\"\"])[1].toLowerCase(),u=ge[s]||ge._default,a.innerHTML=u[1]+S.htmlPrefilter(o)+u[2],c=u[0];while(c--)a=a.lastChild;S.merge(p,a.childNodes),(a=f.firstChild).textContent=\"\"}else p.push(t.createTextNode(o));f.textContent=\"\",d=0;while(o=p[d++])if(r&&-1<S.inArray(o,r))i&&i.push(o);else if(l=ie(o),a=ve(f.appendChild(o),\"script\"),l&&ye(a),n){c=0;while(o=a[c++])he.test(o.type||\"\")&&n.push(o)}return f}var be=/^([^.]*)(?:\\.(.+)|)/;function we(){return!0}function Te(){return!1}function Ce(e,t){return e===function(){try{return E.activeElement}catch(e){}}()==(\"focus\"===t)}function Ee(e,t,n,r,i,o){var a,s;if(\"object\"==typeof t){for(s in\"string\"!=typeof n&&(r=r||n,n=void 0),t)Ee(e,s,n,r,t[s],o);return e}if(null==r&&null==i?(i=n,r=n=void 0):null==i&&(\"string\"==typeof n?(i=r,r=void 0):(i=r,r=n,n=void 0)),!1===i)i=Te;else if(!i)return e;return 1===o&&(a=i,(i=function(e){return S().off(e),a.apply(this,arguments)}).guid=a.guid||(a.guid=S.guid++)),e.each(function(){S.event.add(this,t,i,r,n)})}function Se(e,i,o){o?(Y.set(e,i,!1),S.event.add(e,i,{namespace:!1,handler:function(e){var t,n,r=Y.get(this,i);if(1&e.isTrigger&&this[i]){if(r.length)(S.event.special[i]||{}).delegateType&&e.stopPropagation();else if(r=s.call(arguments),Y.set(this,i,r),t=o(this,i),this[i](),r!==(n=Y.get(this,i))||t?Y.set(this,i,!1):n={},r!==n)return e.stopImmediatePropagation(),e.preventDefault(),n&&n.value}else r.length&&(Y.set(this,i,{value:S.event.trigger(S.extend(r[0],S.Event.prototype),r.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===Y.get(e,i)&&S.event.add(e,i,we)}S.event={global:{},add:function(t,e,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=Y.get(t);if(V(t)){n.handler&&(n=(o=n).handler,i=o.selector),i&&S.find.matchesSelector(re,i),n.guid||(n.guid=S.guid++),(u=v.events)||(u=v.events=Object.create(null)),(a=v.handle)||(a=v.handle=function(e){return\"undefined\"!=typeof S&&S.event.triggered!==e.type?S.event.dispatch.apply(t,arguments):void 0}),l=(e=(e||\"\").match(P)||[\"\"]).length;while(l--)d=g=(s=be.exec(e[l])||[])[1],h=(s[2]||\"\").split(\".\").sort(),d&&(f=S.event.special[d]||{},d=(i?f.delegateType:f.bindType)||d,f=S.event.special[d]||{},c=S.extend({type:d,origType:g,data:r,handler:n,guid:n.guid,selector:i,needsContext:i&&S.expr.match.needsContext.test(i),namespace:h.join(\".\")},o),(p=u[d])||((p=u[d]=[]).delegateCount=0,f.setup&&!1!==f.setup.call(t,r,h,a)||t.addEventListener&&t.addEventListener(d,a)),f.add&&(f.add.call(t,c),c.handler.guid||(c.handler.guid=n.guid)),i?p.splice(p.delegateCount++,0,c):p.push(c),S.event.global[d]=!0)}},remove:function(e,t,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=Y.hasData(e)&&Y.get(e);if(v&&(u=v.events)){l=(t=(t||\"\").match(P)||[\"\"]).length;while(l--)if(d=g=(s=be.exec(t[l])||[])[1],h=(s[2]||\"\").split(\".\").sort(),d){f=S.event.special[d]||{},p=u[d=(r?f.delegateType:f.bindType)||d]||[],s=s[2]&&new RegExp(\"(^|\\\\.)\"+h.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),a=o=p.length;while(o--)c=p[o],!i&&g!==c.origType||n&&n.guid!==c.guid||s&&!s.test(c.namespace)||r&&r!==c.selector&&(\"**\"!==r||!c.selector)||(p.splice(o,1),c.selector&&p.delegateCount--,f.remove&&f.remove.call(e,c));a&&!p.length&&(f.teardown&&!1!==f.teardown.call(e,h,v.handle)||S.removeEvent(e,d,v.handle),delete u[d])}else for(d in u)S.event.remove(e,d+t[l],n,r,!0);S.isEmptyObject(u)&&Y.remove(e,\"handle events\")}},dispatch:function(e){var t,n,r,i,o,a,s=new Array(arguments.length),u=S.event.fix(e),l=(Y.get(this,\"events\")||Object.create(null))[u.type]||[],c=S.event.special[u.type]||{};for(s[0]=u,t=1;t<arguments.length;t++)s[t]=arguments[t];if(u.delegateTarget=this,!c.preDispatch||!1!==c.preDispatch.call(this,u)){a=S.event.handlers.call(this,u,l),t=0;while((i=a[t++])&&!u.isPropagationStopped()){u.currentTarget=i.elem,n=0;while((o=i.handlers[n++])&&!u.isImmediatePropagationStopped())u.rnamespace&&!1!==o.namespace&&!u.rnamespace.test(o.namespace)||(u.handleObj=o,u.data=o.data,void 0!==(r=((S.event.special[o.origType]||{}).handle||o.handler).apply(i.elem,s))&&!1===(u.result=r)&&(u.preventDefault(),u.stopPropagation()))}return c.postDispatch&&c.postDispatch.call(this,u),u.result}},handlers:function(e,t){var n,r,i,o,a,s=[],u=t.delegateCount,l=e.target;if(u&&l.nodeType&&!(\"click\"===e.type&&1<=e.button))for(;l!==this;l=l.parentNode||this)if(1===l.nodeType&&(\"click\"!==e.type||!0!==l.disabled)){for(o=[],a={},n=0;n<u;n++)void 0===a[i=(r=t[n]).selector+\" \"]&&(a[i]=r.needsContext?-1<S(i,this).index(l):S.find(i,this,null,[l]).length),a[i]&&o.push(r);o.length&&s.push({elem:l,handlers:o})}return l=this,u<t.length&&s.push({elem:l,handlers:t.slice(u)}),s},addProp:function(t,e){Object.defineProperty(S.Event.prototype,t,{enumerable:!0,configurable:!0,get:m(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(e){return e[S.expando]?e:new S.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){var t=this||e;return pe.test(t.type)&&t.click&&A(t,\"input\")&&Se(t,\"click\",we),!1},trigger:function(e){var t=this||e;return pe.test(t.type)&&t.click&&A(t,\"input\")&&Se(t,\"click\"),!0},_default:function(e){var t=e.target;return pe.test(t.type)&&t.click&&A(t,\"input\")&&Y.get(t,\"click\")||A(t,\"a\")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},S.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},S.Event=function(e,t){if(!(this instanceof S.Event))return new S.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?we:Te,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&S.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[S.expando]=!0},S.Event.prototype={constructor:S.Event,isDefaultPrevented:Te,isPropagationStopped:Te,isImmediatePropagationStopped:Te,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=we,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=we,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=we,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},S.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,\"char\":!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:!0},S.event.addProp),S.each({focus:\"focusin\",blur:\"focusout\"},function(e,t){S.event.special[e]={setup:function(){return Se(this,e,Ce),!1},trigger:function(){return Se(this,e),!0},_default:function(){return!0},delegateType:t}}),S.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\",pointerenter:\"pointerover\",pointerleave:\"pointerout\"},function(e,i){S.event.special[e]={delegateType:i,bindType:i,handle:function(e){var t,n=e.relatedTarget,r=e.handleObj;return n&&(n===this||S.contains(this,n))||(e.type=r.origType,t=r.handler.apply(this,arguments),e.type=i),t}}}),S.fn.extend({on:function(e,t,n,r){return Ee(this,e,t,n,r)},one:function(e,t,n,r){return Ee(this,e,t,n,r,1)},off:function(e,t,n){var r,i;if(e&&e.preventDefault&&e.handleObj)return r=e.handleObj,S(e.delegateTarget).off(r.namespace?r.origType+\".\"+r.namespace:r.origType,r.selector,r.handler),this;if(\"object\"==typeof e){for(i in e)this.off(i,t,e[i]);return this}return!1!==t&&\"function\"!=typeof t||(n=t,t=void 0),!1===n&&(n=Te),this.each(function(){S.event.remove(this,e,n,t)})}});var ke=/<script|<style|<link/i,Ae=/checked\\s*(?:[^=]|=\\s*.checked.)/i,Ne=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;function je(e,t){return A(e,\"table\")&&A(11!==t.nodeType?t:t.firstChild,\"tr\")&&S(e).children(\"tbody\")[0]||e}function De(e){return e.type=(null!==e.getAttribute(\"type\"))+\"/\"+e.type,e}function qe(e){return\"true/\"===(e.type||\"\").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute(\"type\"),e}function Le(e,t){var n,r,i,o,a,s;if(1===t.nodeType){if(Y.hasData(e)&&(s=Y.get(e).events))for(i in Y.remove(t,\"handle events\"),s)for(n=0,r=s[i].length;n<r;n++)S.event.add(t,i,s[i][n]);Q.hasData(e)&&(o=Q.access(e),a=S.extend({},o),Q.set(t,a))}}function He(n,r,i,o){r=g(r);var e,t,a,s,u,l,c=0,f=n.length,p=f-1,d=r[0],h=m(d);if(h||1<f&&\"string\"==typeof d&&!y.checkClone&&Ae.test(d))return n.each(function(e){var t=n.eq(e);h&&(r[0]=d.call(this,e,t.html())),He(t,r,i,o)});if(f&&(t=(e=xe(r,n[0].ownerDocument,!1,n,o)).firstChild,1===e.childNodes.length&&(e=t),t||o)){for(s=(a=S.map(ve(e,\"script\"),De)).length;c<f;c++)u=e,c!==p&&(u=S.clone(u,!0,!0),s&&S.merge(a,ve(u,\"script\"))),i.call(n[c],u,c);if(s)for(l=a[a.length-1].ownerDocument,S.map(a,qe),c=0;c<s;c++)u=a[c],he.test(u.type||\"\")&&!Y.access(u,\"globalEval\")&&S.contains(l,u)&&(u.src&&\"module\"!==(u.type||\"\").toLowerCase()?S._evalUrl&&!u.noModule&&S._evalUrl(u.src,{nonce:u.nonce||u.getAttribute(\"nonce\")},l):b(u.textContent.replace(Ne,\"\"),u,l))}return n}function Oe(e,t,n){for(var r,i=t?S.filter(t,e):e,o=0;null!=(r=i[o]);o++)n||1!==r.nodeType||S.cleanData(ve(r)),r.parentNode&&(n&&ie(r)&&ye(ve(r,\"script\")),r.parentNode.removeChild(r));return e}S.extend({htmlPrefilter:function(e){return e},clone:function(e,t,n){var r,i,o,a,s,u,l,c=e.cloneNode(!0),f=ie(e);if(!(y.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||S.isXMLDoc(e)))for(a=ve(c),r=0,i=(o=ve(e)).length;r<i;r++)s=o[r],u=a[r],void 0,\"input\"===(l=u.nodeName.toLowerCase())&&pe.test(s.type)?u.checked=s.checked:\"input\"!==l&&\"textarea\"!==l||(u.defaultValue=s.defaultValue);if(t)if(n)for(o=o||ve(e),a=a||ve(c),r=0,i=o.length;r<i;r++)Le(o[r],a[r]);else Le(e,c);return 0<(a=ve(c,\"script\")).length&&ye(a,!f&&ve(e,\"script\")),c},cleanData:function(e){for(var t,n,r,i=S.event.special,o=0;void 0!==(n=e[o]);o++)if(V(n)){if(t=n[Y.expando]){if(t.events)for(r in t.events)i[r]?S.event.remove(n,r):S.removeEvent(n,r,t.handle);n[Y.expando]=void 0}n[Q.expando]&&(n[Q.expando]=void 0)}}}),S.fn.extend({detach:function(e){return Oe(this,e,!0)},remove:function(e){return Oe(this,e)},text:function(e){return $(this,function(e){return void 0===e?S.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return He(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||je(this,e).appendChild(e)})},prepend:function(){return He(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=je(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return He(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return He(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(S.cleanData(ve(e,!1)),e.textContent=\"\");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return S.clone(this,e,t)})},html:function(e){return $(this,function(e){var t=this[0]||{},n=0,r=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if(\"string\"==typeof e&&!ke.test(e)&&!ge[(de.exec(e)||[\"\",\"\"])[1].toLowerCase()]){e=S.htmlPrefilter(e);try{for(;n<r;n++)1===(t=this[n]||{}).nodeType&&(S.cleanData(ve(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var n=[];return He(this,arguments,function(e){var t=this.parentNode;S.inArray(this,n)<0&&(S.cleanData(ve(this)),t&&t.replaceChild(e,this))},n)}}),S.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(e,a){S.fn[e]=function(e){for(var t,n=[],r=S(e),i=r.length-1,o=0;o<=i;o++)t=o===i?this:this.clone(!0),S(r[o])[a](t),u.apply(n,t.get());return this.pushStack(n)}});var Pe=new RegExp(\"^(\"+ee+\")(?!px)[a-z%]+$\",\"i\"),Re=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=C),t.getComputedStyle(e)},Me=function(e,t,n){var r,i,o={};for(i in t)o[i]=e.style[i],e.style[i]=t[i];for(i in r=n.call(e),t)e.style[i]=o[i];return r},Ie=new RegExp(ne.join(\"|\"),\"i\");function We(e,t,n){var r,i,o,a,s=e.style;return(n=n||Re(e))&&(\"\"!==(a=n.getPropertyValue(t)||n[t])||ie(e)||(a=S.style(e,t)),!y.pixelBoxStyles()&&Pe.test(a)&&Ie.test(t)&&(r=s.width,i=s.minWidth,o=s.maxWidth,s.minWidth=s.maxWidth=s.width=a,a=n.width,s.width=r,s.minWidth=i,s.maxWidth=o)),void 0!==a?a+\"\":a}function Fe(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}!function(){function e(){if(l){u.style.cssText=\"position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0\",l.style.cssText=\"position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%\",re.appendChild(u).appendChild(l);var e=C.getComputedStyle(l);n=\"1%\"!==e.top,s=12===t(e.marginLeft),l.style.right=\"60%\",o=36===t(e.right),r=36===t(e.width),l.style.position=\"absolute\",i=12===t(l.offsetWidth/3),re.removeChild(u),l=null}}function t(e){return Math.round(parseFloat(e))}var n,r,i,o,a,s,u=E.createElement(\"div\"),l=E.createElement(\"div\");l.style&&(l.style.backgroundClip=\"content-box\",l.cloneNode(!0).style.backgroundClip=\"\",y.clearCloneStyle=\"content-box\"===l.style.backgroundClip,S.extend(y,{boxSizingReliable:function(){return e(),r},pixelBoxStyles:function(){return e(),o},pixelPosition:function(){return e(),n},reliableMarginLeft:function(){return e(),s},scrollboxSize:function(){return e(),i},reliableTrDimensions:function(){var e,t,n,r;return null==a&&(e=E.createElement(\"table\"),t=E.createElement(\"tr\"),n=E.createElement(\"div\"),e.style.cssText=\"position:absolute;left:-11111px;border-collapse:separate\",t.style.cssText=\"border:1px solid\",t.style.height=\"1px\",n.style.height=\"9px\",n.style.display=\"block\",re.appendChild(e).appendChild(t).appendChild(n),r=C.getComputedStyle(t),a=parseInt(r.height,10)+parseInt(r.borderTopWidth,10)+parseInt(r.borderBottomWidth,10)===t.offsetHeight,re.removeChild(e)),a}}))}();var Be=[\"Webkit\",\"Moz\",\"ms\"],$e=E.createElement(\"div\").style,_e={};function ze(e){var t=S.cssProps[e]||_e[e];return t||(e in $e?e:_e[e]=function(e){var t=e[0].toUpperCase()+e.slice(1),n=Be.length;while(n--)if((e=Be[n]+t)in $e)return e}(e)||e)}var Ue=/^(none|table(?!-c[ea]).+)/,Xe=/^--/,Ve={position:\"absolute\",visibility:\"hidden\",display:\"block\"},Ge={letterSpacing:\"0\",fontWeight:\"400\"};function Ye(e,t,n){var r=te.exec(t);return r?Math.max(0,r[2]-(n||0))+(r[3]||\"px\"):t}function Qe(e,t,n,r,i,o){var a=\"width\"===t?1:0,s=0,u=0;if(n===(r?\"border\":\"content\"))return 0;for(;a<4;a+=2)\"margin\"===n&&(u+=S.css(e,n+ne[a],!0,i)),r?(\"content\"===n&&(u-=S.css(e,\"padding\"+ne[a],!0,i)),\"margin\"!==n&&(u-=S.css(e,\"border\"+ne[a]+\"Width\",!0,i))):(u+=S.css(e,\"padding\"+ne[a],!0,i),\"padding\"!==n?u+=S.css(e,\"border\"+ne[a]+\"Width\",!0,i):s+=S.css(e,\"border\"+ne[a]+\"Width\",!0,i));return!r&&0<=o&&(u+=Math.max(0,Math.ceil(e[\"offset\"+t[0].toUpperCase()+t.slice(1)]-o-u-s-.5))||0),u}function Je(e,t,n){var r=Re(e),i=(!y.boxSizingReliable()||n)&&\"border-box\"===S.css(e,\"boxSizing\",!1,r),o=i,a=We(e,t,r),s=\"offset\"+t[0].toUpperCase()+t.slice(1);if(Pe.test(a)){if(!n)return a;a=\"auto\"}return(!y.boxSizingReliable()&&i||!y.reliableTrDimensions()&&A(e,\"tr\")||\"auto\"===a||!parseFloat(a)&&\"inline\"===S.css(e,\"display\",!1,r))&&e.getClientRects().length&&(i=\"border-box\"===S.css(e,\"boxSizing\",!1,r),(o=s in e)&&(a=e[s])),(a=parseFloat(a)||0)+Qe(e,t,n||(i?\"border\":\"content\"),o,r,a)+\"px\"}function Ke(e,t,n,r,i){return new Ke.prototype.init(e,t,n,r,i)}S.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=We(e,\"opacity\");return\"\"===n?\"1\":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,n,r){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var i,o,a,s=X(t),u=Xe.test(t),l=e.style;if(u||(t=ze(s)),a=S.cssHooks[t]||S.cssHooks[s],void 0===n)return a&&\"get\"in a&&void 0!==(i=a.get(e,!1,r))?i:l[t];\"string\"===(o=typeof n)&&(i=te.exec(n))&&i[1]&&(n=se(e,t,i),o=\"number\"),null!=n&&n==n&&(\"number\"!==o||u||(n+=i&&i[3]||(S.cssNumber[s]?\"\":\"px\")),y.clearCloneStyle||\"\"!==n||0!==t.indexOf(\"background\")||(l[t]=\"inherit\"),a&&\"set\"in a&&void 0===(n=a.set(e,n,r))||(u?l.setProperty(t,n):l[t]=n))}},css:function(e,t,n,r){var i,o,a,s=X(t);return Xe.test(t)||(t=ze(s)),(a=S.cssHooks[t]||S.cssHooks[s])&&\"get\"in a&&(i=a.get(e,!0,n)),void 0===i&&(i=We(e,t,r)),\"normal\"===i&&t in Ge&&(i=Ge[t]),\"\"===n||n?(o=parseFloat(i),!0===n||isFinite(o)?o||0:i):i}}),S.each([\"height\",\"width\"],function(e,u){S.cssHooks[u]={get:function(e,t,n){if(t)return!Ue.test(S.css(e,\"display\"))||e.getClientRects().length&&e.getBoundingClientRect().width?Je(e,u,n):Me(e,Ve,function(){return Je(e,u,n)})},set:function(e,t,n){var r,i=Re(e),o=!y.scrollboxSize()&&\"absolute\"===i.position,a=(o||n)&&\"border-box\"===S.css(e,\"boxSizing\",!1,i),s=n?Qe(e,u,n,a,i):0;return a&&o&&(s-=Math.ceil(e[\"offset\"+u[0].toUpperCase()+u.slice(1)]-parseFloat(i[u])-Qe(e,u,\"border\",!1,i)-.5)),s&&(r=te.exec(t))&&\"px\"!==(r[3]||\"px\")&&(e.style[u]=t,t=S.css(e,u)),Ye(0,t,s)}}}),S.cssHooks.marginLeft=Fe(y.reliableMarginLeft,function(e,t){if(t)return(parseFloat(We(e,\"marginLeft\"))||e.getBoundingClientRect().left-Me(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+\"px\"}),S.each({margin:\"\",padding:\"\",border:\"Width\"},function(i,o){S.cssHooks[i+o]={expand:function(e){for(var t=0,n={},r=\"string\"==typeof e?e.split(\" \"):[e];t<4;t++)n[i+ne[t]+o]=r[t]||r[t-2]||r[0];return n}},\"margin\"!==i&&(S.cssHooks[i+o].set=Ye)}),S.fn.extend({css:function(e,t){return $(this,function(e,t,n){var r,i,o={},a=0;if(Array.isArray(t)){for(r=Re(e),i=t.length;a<i;a++)o[t[a]]=S.css(e,t[a],!1,r);return o}return void 0!==n?S.style(e,t,n):S.css(e,t)},e,t,1<arguments.length)}}),((S.Tween=Ke).prototype={constructor:Ke,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||S.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(S.cssNumber[n]?\"\":\"px\")},cur:function(){var e=Ke.propHooks[this.prop];return e&&e.get?e.get(this):Ke.propHooks._default.get(this)},run:function(e){var t,n=Ke.propHooks[this.prop];return this.options.duration?this.pos=t=S.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):Ke.propHooks._default.set(this),this}}).init.prototype=Ke.prototype,(Ke.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=S.css(e.elem,e.prop,\"\"))&&\"auto\"!==t?t:0},set:function(e){S.fx.step[e.prop]?S.fx.step[e.prop](e):1!==e.elem.nodeType||!S.cssHooks[e.prop]&&null==e.elem.style[ze(e.prop)]?e.elem[e.prop]=e.now:S.style(e.elem,e.prop,e.now+e.unit)}}}).scrollTop=Ke.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},S.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:\"swing\"},S.fx=Ke.prototype.init,S.fx.step={};var Ze,et,tt,nt,rt=/^(?:toggle|show|hide)$/,it=/queueHooks$/;function ot(){et&&(!1===E.hidden&&C.requestAnimationFrame?C.requestAnimationFrame(ot):C.setTimeout(ot,S.fx.interval),S.fx.tick())}function at(){return C.setTimeout(function(){Ze=void 0}),Ze=Date.now()}function st(e,t){var n,r=0,i={height:e};for(t=t?1:0;r<4;r+=2-t)i[\"margin\"+(n=ne[r])]=i[\"padding\"+n]=e;return t&&(i.opacity=i.width=e),i}function ut(e,t,n){for(var r,i=(lt.tweeners[t]||[]).concat(lt.tweeners[\"*\"]),o=0,a=i.length;o<a;o++)if(r=i[o].call(n,t,e))return r}function lt(o,e,t){var n,a,r=0,i=lt.prefilters.length,s=S.Deferred().always(function(){delete u.elem}),u=function(){if(a)return!1;for(var e=Ze||at(),t=Math.max(0,l.startTime+l.duration-e),n=1-(t/l.duration||0),r=0,i=l.tweens.length;r<i;r++)l.tweens[r].run(n);return s.notifyWith(o,[l,n,t]),n<1&&i?t:(i||s.notifyWith(o,[l,1,0]),s.resolveWith(o,[l]),!1)},l=s.promise({elem:o,props:S.extend({},e),opts:S.extend(!0,{specialEasing:{},easing:S.easing._default},t),originalProperties:e,originalOptions:t,startTime:Ze||at(),duration:t.duration,tweens:[],createTween:function(e,t){var n=S.Tween(o,l.opts,e,t,l.opts.specialEasing[e]||l.opts.easing);return l.tweens.push(n),n},stop:function(e){var t=0,n=e?l.tweens.length:0;if(a)return this;for(a=!0;t<n;t++)l.tweens[t].run(1);return e?(s.notifyWith(o,[l,1,0]),s.resolveWith(o,[l,e])):s.rejectWith(o,[l,e]),this}}),c=l.props;for(!function(e,t){var n,r,i,o,a;for(n in e)if(i=t[r=X(n)],o=e[n],Array.isArray(o)&&(i=o[1],o=e[n]=o[0]),n!==r&&(e[r]=o,delete e[n]),(a=S.cssHooks[r])&&\"expand\"in a)for(n in o=a.expand(o),delete e[r],o)n in e||(e[n]=o[n],t[n]=i);else t[r]=i}(c,l.opts.specialEasing);r<i;r++)if(n=lt.prefilters[r].call(l,o,c,l.opts))return m(n.stop)&&(S._queueHooks(l.elem,l.opts.queue).stop=n.stop.bind(n)),n;return S.map(c,ut,l),m(l.opts.start)&&l.opts.start.call(o,l),l.progress(l.opts.progress).done(l.opts.done,l.opts.complete).fail(l.opts.fail).always(l.opts.always),S.fx.timer(S.extend(u,{elem:o,anim:l,queue:l.opts.queue})),l}S.Animation=S.extend(lt,{tweeners:{\"*\":[function(e,t){var n=this.createTween(e,t);return se(n.elem,e,te.exec(t),n),n}]},tweener:function(e,t){m(e)?(t=e,e=[\"*\"]):e=e.match(P);for(var n,r=0,i=e.length;r<i;r++)n=e[r],lt.tweeners[n]=lt.tweeners[n]||[],lt.tweeners[n].unshift(t)},prefilters:[function(e,t,n){var r,i,o,a,s,u,l,c,f=\"width\"in t||\"height\"in t,p=this,d={},h=e.style,g=e.nodeType&&ae(e),v=Y.get(e,\"fxshow\");for(r in n.queue||(null==(a=S._queueHooks(e,\"fx\")).unqueued&&(a.unqueued=0,s=a.empty.fire,a.empty.fire=function(){a.unqueued||s()}),a.unqueued++,p.always(function(){p.always(function(){a.unqueued--,S.queue(e,\"fx\").length||a.empty.fire()})})),t)if(i=t[r],rt.test(i)){if(delete t[r],o=o||\"toggle\"===i,i===(g?\"hide\":\"show\")){if(\"show\"!==i||!v||void 0===v[r])continue;g=!0}d[r]=v&&v[r]||S.style(e,r)}if((u=!S.isEmptyObject(t))||!S.isEmptyObject(d))for(r in f&&1===e.nodeType&&(n.overflow=[h.overflow,h.overflowX,h.overflowY],null==(l=v&&v.display)&&(l=Y.get(e,\"display\")),\"none\"===(c=S.css(e,\"display\"))&&(l?c=l:(le([e],!0),l=e.style.display||l,c=S.css(e,\"display\"),le([e]))),(\"inline\"===c||\"inline-block\"===c&&null!=l)&&\"none\"===S.css(e,\"float\")&&(u||(p.done(function(){h.display=l}),null==l&&(c=h.display,l=\"none\"===c?\"\":c)),h.display=\"inline-block\")),n.overflow&&(h.overflow=\"hidden\",p.always(function(){h.overflow=n.overflow[0],h.overflowX=n.overflow[1],h.overflowY=n.overflow[2]})),u=!1,d)u||(v?\"hidden\"in v&&(g=v.hidden):v=Y.access(e,\"fxshow\",{display:l}),o&&(v.hidden=!g),g&&le([e],!0),p.done(function(){for(r in g||le([e]),Y.remove(e,\"fxshow\"),d)S.style(e,r,d[r])})),u=ut(g?v[r]:0,r,p),r in v||(v[r]=u.start,g&&(u.end=u.start,u.start=0))}],prefilter:function(e,t){t?lt.prefilters.unshift(e):lt.prefilters.push(e)}}),S.speed=function(e,t,n){var r=e&&\"object\"==typeof e?S.extend({},e):{complete:n||!n&&t||m(e)&&e,duration:e,easing:n&&t||t&&!m(t)&&t};return S.fx.off?r.duration=0:\"number\"!=typeof r.duration&&(r.duration in S.fx.speeds?r.duration=S.fx.speeds[r.duration]:r.duration=S.fx.speeds._default),null!=r.queue&&!0!==r.queue||(r.queue=\"fx\"),r.old=r.complete,r.complete=function(){m(r.old)&&r.old.call(this),r.queue&&S.dequeue(this,r.queue)},r},S.fn.extend({fadeTo:function(e,t,n,r){return this.filter(ae).css(\"opacity\",0).show().end().animate({opacity:t},e,n,r)},animate:function(t,e,n,r){var i=S.isEmptyObject(t),o=S.speed(e,n,r),a=function(){var e=lt(this,S.extend({},t),o);(i||Y.get(this,\"finish\"))&&e.stop(!0)};return a.finish=a,i||!1===o.queue?this.each(a):this.queue(o.queue,a)},stop:function(i,e,o){var a=function(e){var t=e.stop;delete e.stop,t(o)};return\"string\"!=typeof i&&(o=e,e=i,i=void 0),e&&this.queue(i||\"fx\",[]),this.each(function(){var e=!0,t=null!=i&&i+\"queueHooks\",n=S.timers,r=Y.get(this);if(t)r[t]&&r[t].stop&&a(r[t]);else for(t in r)r[t]&&r[t].stop&&it.test(t)&&a(r[t]);for(t=n.length;t--;)n[t].elem!==this||null!=i&&n[t].queue!==i||(n[t].anim.stop(o),e=!1,n.splice(t,1));!e&&o||S.dequeue(this,i)})},finish:function(a){return!1!==a&&(a=a||\"fx\"),this.each(function(){var e,t=Y.get(this),n=t[a+\"queue\"],r=t[a+\"queueHooks\"],i=S.timers,o=n?n.length:0;for(t.finish=!0,S.queue(this,a,[]),r&&r.stop&&r.stop.call(this,!0),e=i.length;e--;)i[e].elem===this&&i[e].queue===a&&(i[e].anim.stop(!0),i.splice(e,1));for(e=0;e<o;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete t.finish})}}),S.each([\"toggle\",\"show\",\"hide\"],function(e,r){var i=S.fn[r];S.fn[r]=function(e,t,n){return null==e||\"boolean\"==typeof e?i.apply(this,arguments):this.animate(st(r,!0),e,t,n)}}),S.each({slideDown:st(\"show\"),slideUp:st(\"hide\"),slideToggle:st(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(e,r){S.fn[e]=function(e,t,n){return this.animate(r,e,t,n)}}),S.timers=[],S.fx.tick=function(){var e,t=0,n=S.timers;for(Ze=Date.now();t<n.length;t++)(e=n[t])()||n[t]!==e||n.splice(t--,1);n.length||S.fx.stop(),Ze=void 0},S.fx.timer=function(e){S.timers.push(e),S.fx.start()},S.fx.interval=13,S.fx.start=function(){et||(et=!0,ot())},S.fx.stop=function(){et=null},S.fx.speeds={slow:600,fast:200,_default:400},S.fn.delay=function(r,e){return r=S.fx&&S.fx.speeds[r]||r,e=e||\"fx\",this.queue(e,function(e,t){var n=C.setTimeout(e,r);t.stop=function(){C.clearTimeout(n)}})},tt=E.createElement(\"input\"),nt=E.createElement(\"select\").appendChild(E.createElement(\"option\")),tt.type=\"checkbox\",y.checkOn=\"\"!==tt.value,y.optSelected=nt.selected,(tt=E.createElement(\"input\")).value=\"t\",tt.type=\"radio\",y.radioValue=\"t\"===tt.value;var ct,ft=S.expr.attrHandle;S.fn.extend({attr:function(e,t){return $(this,S.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){S.removeAttr(this,e)})}}),S.extend({attr:function(e,t,n){var r,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return\"undefined\"==typeof e.getAttribute?S.prop(e,t,n):(1===o&&S.isXMLDoc(e)||(i=S.attrHooks[t.toLowerCase()]||(S.expr.match.bool.test(t)?ct:void 0)),void 0!==n?null===n?void S.removeAttr(e,t):i&&\"set\"in i&&void 0!==(r=i.set(e,n,t))?r:(e.setAttribute(t,n+\"\"),n):i&&\"get\"in i&&null!==(r=i.get(e,t))?r:null==(r=S.find.attr(e,t))?void 0:r)},attrHooks:{type:{set:function(e,t){if(!y.radioValue&&\"radio\"===t&&A(e,\"input\")){var n=e.value;return e.setAttribute(\"type\",t),n&&(e.value=n),t}}}},removeAttr:function(e,t){var n,r=0,i=t&&t.match(P);if(i&&1===e.nodeType)while(n=i[r++])e.removeAttribute(n)}}),ct={set:function(e,t,n){return!1===t?S.removeAttr(e,n):e.setAttribute(n,n),n}},S.each(S.expr.match.bool.source.match(/\\w+/g),function(e,t){var a=ft[t]||S.find.attr;ft[t]=function(e,t,n){var r,i,o=t.toLowerCase();return n||(i=ft[o],ft[o]=r,r=null!=a(e,t,n)?o:null,ft[o]=i),r}});var pt=/^(?:input|select|textarea|button)$/i,dt=/^(?:a|area)$/i;function ht(e){return(e.match(P)||[]).join(\" \")}function gt(e){return e.getAttribute&&e.getAttribute(\"class\")||\"\"}function vt(e){return Array.isArray(e)?e:\"string\"==typeof e&&e.match(P)||[]}S.fn.extend({prop:function(e,t){return $(this,S.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each(function(){delete this[S.propFix[e]||e]})}}),S.extend({prop:function(e,t,n){var r,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&S.isXMLDoc(e)||(t=S.propFix[t]||t,i=S.propHooks[t]),void 0!==n?i&&\"set\"in i&&void 0!==(r=i.set(e,n,t))?r:e[t]=n:i&&\"get\"in i&&null!==(r=i.get(e,t))?r:e[t]},propHooks:{tabIndex:{get:function(e){var t=S.find.attr(e,\"tabindex\");return t?parseInt(t,10):pt.test(e.nodeName)||dt.test(e.nodeName)&&e.href?0:-1}}},propFix:{\"for\":\"htmlFor\",\"class\":\"className\"}}),y.optSelected||(S.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),S.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){S.propFix[this.toLowerCase()]=this}),S.fn.extend({addClass:function(t){var e,n,r,i,o,a,s,u=0;if(m(t))return this.each(function(e){S(this).addClass(t.call(this,e,gt(this)))});if((e=vt(t)).length)while(n=this[u++])if(i=gt(n),r=1===n.nodeType&&\" \"+ht(i)+\" \"){a=0;while(o=e[a++])r.indexOf(\" \"+o+\" \")<0&&(r+=o+\" \");i!==(s=ht(r))&&n.setAttribute(\"class\",s)}return this},removeClass:function(t){var e,n,r,i,o,a,s,u=0;if(m(t))return this.each(function(e){S(this).removeClass(t.call(this,e,gt(this)))});if(!arguments.length)return this.attr(\"class\",\"\");if((e=vt(t)).length)while(n=this[u++])if(i=gt(n),r=1===n.nodeType&&\" \"+ht(i)+\" \"){a=0;while(o=e[a++])while(-1<r.indexOf(\" \"+o+\" \"))r=r.replace(\" \"+o+\" \",\" \");i!==(s=ht(r))&&n.setAttribute(\"class\",s)}return this},toggleClass:function(i,t){var o=typeof i,a=\"string\"===o||Array.isArray(i);return\"boolean\"==typeof t&&a?t?this.addClass(i):this.removeClass(i):m(i)?this.each(function(e){S(this).toggleClass(i.call(this,e,gt(this),t),t)}):this.each(function(){var e,t,n,r;if(a){t=0,n=S(this),r=vt(i);while(e=r[t++])n.hasClass(e)?n.removeClass(e):n.addClass(e)}else void 0!==i&&\"boolean\"!==o||((e=gt(this))&&Y.set(this,\"__className__\",e),this.setAttribute&&this.setAttribute(\"class\",e||!1===i?\"\":Y.get(this,\"__className__\")||\"\"))})},hasClass:function(e){var t,n,r=0;t=\" \"+e+\" \";while(n=this[r++])if(1===n.nodeType&&-1<(\" \"+ht(gt(n))+\" \").indexOf(t))return!0;return!1}});var yt=/\\r/g;S.fn.extend({val:function(n){var r,e,i,t=this[0];return arguments.length?(i=m(n),this.each(function(e){var t;1===this.nodeType&&(null==(t=i?n.call(this,e,S(this).val()):n)?t=\"\":\"number\"==typeof t?t+=\"\":Array.isArray(t)&&(t=S.map(t,function(e){return null==e?\"\":e+\"\"})),(r=S.valHooks[this.type]||S.valHooks[this.nodeName.toLowerCase()])&&\"set\"in r&&void 0!==r.set(this,t,\"value\")||(this.value=t))})):t?(r=S.valHooks[t.type]||S.valHooks[t.nodeName.toLowerCase()])&&\"get\"in r&&void 0!==(e=r.get(t,\"value\"))?e:\"string\"==typeof(e=t.value)?e.replace(yt,\"\"):null==e?\"\":e:void 0}}),S.extend({valHooks:{option:{get:function(e){var t=S.find.attr(e,\"value\");return null!=t?t:ht(S.text(e))}},select:{get:function(e){var t,n,r,i=e.options,o=e.selectedIndex,a=\"select-one\"===e.type,s=a?null:[],u=a?o+1:i.length;for(r=o<0?u:a?o:0;r<u;r++)if(((n=i[r]).selected||r===o)&&!n.disabled&&(!n.parentNode.disabled||!A(n.parentNode,\"optgroup\"))){if(t=S(n).val(),a)return t;s.push(t)}return s},set:function(e,t){var n,r,i=e.options,o=S.makeArray(t),a=i.length;while(a--)((r=i[a]).selected=-1<S.inArray(S.valHooks.option.get(r),o))&&(n=!0);return n||(e.selectedIndex=-1),o}}}}),S.each([\"radio\",\"checkbox\"],function(){S.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<S.inArray(S(e).val(),t)}},y.checkOn||(S.valHooks[this].get=function(e){return null===e.getAttribute(\"value\")?\"on\":e.value})}),y.focusin=\"onfocusin\"in C;var mt=/^(?:focusinfocus|focusoutblur)$/,xt=function(e){e.stopPropagation()};S.extend(S.event,{trigger:function(e,t,n,r){var i,o,a,s,u,l,c,f,p=[n||E],d=v.call(e,\"type\")?e.type:e,h=v.call(e,\"namespace\")?e.namespace.split(\".\"):[];if(o=f=a=n=n||E,3!==n.nodeType&&8!==n.nodeType&&!mt.test(d+S.event.triggered)&&(-1<d.indexOf(\".\")&&(d=(h=d.split(\".\")).shift(),h.sort()),u=d.indexOf(\":\")<0&&\"on\"+d,(e=e[S.expando]?e:new S.Event(d,\"object\"==typeof e&&e)).isTrigger=r?2:3,e.namespace=h.join(\".\"),e.rnamespace=e.namespace?new RegExp(\"(^|\\\\.)\"+h.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,e.result=void 0,e.target||(e.target=n),t=null==t?[e]:S.makeArray(t,[e]),c=S.event.special[d]||{},r||!c.trigger||!1!==c.trigger.apply(n,t))){if(!r&&!c.noBubble&&!x(n)){for(s=c.delegateType||d,mt.test(s+d)||(o=o.parentNode);o;o=o.parentNode)p.push(o),a=o;a===(n.ownerDocument||E)&&p.push(a.defaultView||a.parentWindow||C)}i=0;while((o=p[i++])&&!e.isPropagationStopped())f=o,e.type=1<i?s:c.bindType||d,(l=(Y.get(o,\"events\")||Object.create(null))[e.type]&&Y.get(o,\"handle\"))&&l.apply(o,t),(l=u&&o[u])&&l.apply&&V(o)&&(e.result=l.apply(o,t),!1===e.result&&e.preventDefault());return e.type=d,r||e.isDefaultPrevented()||c._default&&!1!==c._default.apply(p.pop(),t)||!V(n)||u&&m(n[d])&&!x(n)&&((a=n[u])&&(n[u]=null),S.event.triggered=d,e.isPropagationStopped()&&f.addEventListener(d,xt),n[d](),e.isPropagationStopped()&&f.removeEventListener(d,xt),S.event.triggered=void 0,a&&(n[u]=a)),e.result}},simulate:function(e,t,n){var r=S.extend(new S.Event,n,{type:e,isSimulated:!0});S.event.trigger(r,null,t)}}),S.fn.extend({trigger:function(e,t){return this.each(function(){S.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];if(n)return S.event.trigger(e,t,n,!0)}}),y.focusin||S.each({focus:\"focusin\",blur:\"focusout\"},function(n,r){var i=function(e){S.event.simulate(r,e.target,S.event.fix(e))};S.event.special[r]={setup:function(){var e=this.ownerDocument||this.document||this,t=Y.access(e,r);t||e.addEventListener(n,i,!0),Y.access(e,r,(t||0)+1)},teardown:function(){var e=this.ownerDocument||this.document||this,t=Y.access(e,r)-1;t?Y.access(e,r,t):(e.removeEventListener(n,i,!0),Y.remove(e,r))}}});var bt=C.location,wt={guid:Date.now()},Tt=/\\?/;S.parseXML=function(e){var t,n;if(!e||\"string\"!=typeof e)return null;try{t=(new C.DOMParser).parseFromString(e,\"text/xml\")}catch(e){}return n=t&&t.getElementsByTagName(\"parsererror\")[0],t&&!n||S.error(\"Invalid XML: \"+(n?S.map(n.childNodes,function(e){return e.textContent}).join(\"\\n\"):e)),t};var Ct=/\\[\\]$/,Et=/\\r?\\n/g,St=/^(?:submit|button|image|reset|file)$/i,kt=/^(?:input|select|textarea|keygen)/i;function At(n,e,r,i){var t;if(Array.isArray(e))S.each(e,function(e,t){r||Ct.test(n)?i(n,t):At(n+\"[\"+(\"object\"==typeof t&&null!=t?e:\"\")+\"]\",t,r,i)});else if(r||\"object\"!==w(e))i(n,e);else for(t in e)At(n+\"[\"+t+\"]\",e[t],r,i)}S.param=function(e,t){var n,r=[],i=function(e,t){var n=m(t)?t():t;r[r.length]=encodeURIComponent(e)+\"=\"+encodeURIComponent(null==n?\"\":n)};if(null==e)return\"\";if(Array.isArray(e)||e.jquery&&!S.isPlainObject(e))S.each(e,function(){i(this.name,this.value)});else for(n in e)At(n,e[n],t,i);return r.join(\"&\")},S.fn.extend({serialize:function(){return S.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=S.prop(this,\"elements\");return e?S.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!S(this).is(\":disabled\")&&kt.test(this.nodeName)&&!St.test(e)&&(this.checked||!pe.test(e))}).map(function(e,t){var n=S(this).val();return null==n?null:Array.isArray(n)?S.map(n,function(e){return{name:t.name,value:e.replace(Et,\"\\r\\n\")}}):{name:t.name,value:n.replace(Et,\"\\r\\n\")}}).get()}});var Nt=/%20/g,jt=/#.*$/,Dt=/([?&])_=[^&]*/,qt=/^(.*?):[ \\t]*([^\\r\\n]*)$/gm,Lt=/^(?:GET|HEAD)$/,Ht=/^\\/\\//,Ot={},Pt={},Rt=\"*/\".concat(\"*\"),Mt=E.createElement(\"a\");function It(o){return function(e,t){\"string\"!=typeof e&&(t=e,e=\"*\");var n,r=0,i=e.toLowerCase().match(P)||[];if(m(t))while(n=i[r++])\"+\"===n[0]?(n=n.slice(1)||\"*\",(o[n]=o[n]||[]).unshift(t)):(o[n]=o[n]||[]).push(t)}}function Wt(t,i,o,a){var s={},u=t===Pt;function l(e){var r;return s[e]=!0,S.each(t[e]||[],function(e,t){var n=t(i,o,a);return\"string\"!=typeof n||u||s[n]?u?!(r=n):void 0:(i.dataTypes.unshift(n),l(n),!1)}),r}return l(i.dataTypes[0])||!s[\"*\"]&&l(\"*\")}function Ft(e,t){var n,r,i=S.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((i[n]?e:r||(r={}))[n]=t[n]);return r&&S.extend(!0,e,r),e}Mt.href=bt.href,S.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:bt.href,type:\"GET\",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(bt.protocol),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":Rt,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/\\bxml\\b/,html:/\\bhtml/,json:/\\bjson\\b/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},converters:{\"* text\":String,\"text html\":!0,\"text json\":JSON.parse,\"text xml\":S.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Ft(Ft(e,S.ajaxSettings),t):Ft(S.ajaxSettings,e)},ajaxPrefilter:It(Ot),ajaxTransport:It(Pt),ajax:function(e,t){\"object\"==typeof e&&(t=e,e=void 0),t=t||{};var c,f,p,n,d,r,h,g,i,o,v=S.ajaxSetup({},t),y=v.context||v,m=v.context&&(y.nodeType||y.jquery)?S(y):S.event,x=S.Deferred(),b=S.Callbacks(\"once memory\"),w=v.statusCode||{},a={},s={},u=\"canceled\",T={readyState:0,getResponseHeader:function(e){var t;if(h){if(!n){n={};while(t=qt.exec(p))n[t[1].toLowerCase()+\" \"]=(n[t[1].toLowerCase()+\" \"]||[]).concat(t[2])}t=n[e.toLowerCase()+\" \"]}return null==t?null:t.join(\", \")},getAllResponseHeaders:function(){return h?p:null},setRequestHeader:function(e,t){return null==h&&(e=s[e.toLowerCase()]=s[e.toLowerCase()]||e,a[e]=t),this},overrideMimeType:function(e){return null==h&&(v.mimeType=e),this},statusCode:function(e){var t;if(e)if(h)T.always(e[T.status]);else for(t in e)w[t]=[w[t],e[t]];return this},abort:function(e){var t=e||u;return c&&c.abort(t),l(0,t),this}};if(x.promise(T),v.url=((e||v.url||bt.href)+\"\").replace(Ht,bt.protocol+\"//\"),v.type=t.method||t.type||v.method||v.type,v.dataTypes=(v.dataType||\"*\").toLowerCase().match(P)||[\"\"],null==v.crossDomain){r=E.createElement(\"a\");try{r.href=v.url,r.href=r.href,v.crossDomain=Mt.protocol+\"//\"+Mt.host!=r.protocol+\"//\"+r.host}catch(e){v.crossDomain=!0}}if(v.data&&v.processData&&\"string\"!=typeof v.data&&(v.data=S.param(v.data,v.traditional)),Wt(Ot,v,t,T),h)return T;for(i in(g=S.event&&v.global)&&0==S.active++&&S.event.trigger(\"ajaxStart\"),v.type=v.type.toUpperCase(),v.hasContent=!Lt.test(v.type),f=v.url.replace(jt,\"\"),v.hasContent?v.data&&v.processData&&0===(v.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&(v.data=v.data.replace(Nt,\"+\")):(o=v.url.slice(f.length),v.data&&(v.processData||\"string\"==typeof v.data)&&(f+=(Tt.test(f)?\"&\":\"?\")+v.data,delete v.data),!1===v.cache&&(f=f.replace(Dt,\"$1\"),o=(Tt.test(f)?\"&\":\"?\")+\"_=\"+wt.guid+++o),v.url=f+o),v.ifModified&&(S.lastModified[f]&&T.setRequestHeader(\"If-Modified-Since\",S.lastModified[f]),S.etag[f]&&T.setRequestHeader(\"If-None-Match\",S.etag[f])),(v.data&&v.hasContent&&!1!==v.contentType||t.contentType)&&T.setRequestHeader(\"Content-Type\",v.contentType),T.setRequestHeader(\"Accept\",v.dataTypes[0]&&v.accepts[v.dataTypes[0]]?v.accepts[v.dataTypes[0]]+(\"*\"!==v.dataTypes[0]?\", \"+Rt+\"; q=0.01\":\"\"):v.accepts[\"*\"]),v.headers)T.setRequestHeader(i,v.headers[i]);if(v.beforeSend&&(!1===v.beforeSend.call(y,T,v)||h))return T.abort();if(u=\"abort\",b.add(v.complete),T.done(v.success),T.fail(v.error),c=Wt(Pt,v,t,T)){if(T.readyState=1,g&&m.trigger(\"ajaxSend\",[T,v]),h)return T;v.async&&0<v.timeout&&(d=C.setTimeout(function(){T.abort(\"timeout\")},v.timeout));try{h=!1,c.send(a,l)}catch(e){if(h)throw e;l(-1,e)}}else l(-1,\"No Transport\");function l(e,t,n,r){var i,o,a,s,u,l=t;h||(h=!0,d&&C.clearTimeout(d),c=void 0,p=r||\"\",T.readyState=0<e?4:0,i=200<=e&&e<300||304===e,n&&(s=function(e,t,n){var r,i,o,a,s=e.contents,u=e.dataTypes;while(\"*\"===u[0])u.shift(),void 0===r&&(r=e.mimeType||t.getResponseHeader(\"Content-Type\"));if(r)for(i in s)if(s[i]&&s[i].test(r)){u.unshift(i);break}if(u[0]in n)o=u[0];else{for(i in n){if(!u[0]||e.converters[i+\" \"+u[0]]){o=i;break}a||(a=i)}o=o||a}if(o)return o!==u[0]&&u.unshift(o),n[o]}(v,T,n)),!i&&-1<S.inArray(\"script\",v.dataTypes)&&S.inArray(\"json\",v.dataTypes)<0&&(v.converters[\"text script\"]=function(){}),s=function(e,t,n,r){var i,o,a,s,u,l={},c=e.dataTypes.slice();if(c[1])for(a in e.converters)l[a.toLowerCase()]=e.converters[a];o=c.shift();while(o)if(e.responseFields[o]&&(n[e.responseFields[o]]=t),!u&&r&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),u=o,o=c.shift())if(\"*\"===o)o=u;else if(\"*\"!==u&&u!==o){if(!(a=l[u+\" \"+o]||l[\"* \"+o]))for(i in l)if((s=i.split(\" \"))[1]===o&&(a=l[u+\" \"+s[0]]||l[\"* \"+s[0]])){!0===a?a=l[i]:!0!==l[i]&&(o=s[0],c.unshift(s[1]));break}if(!0!==a)if(a&&e[\"throws\"])t=a(t);else try{t=a(t)}catch(e){return{state:\"parsererror\",error:a?e:\"No conversion from \"+u+\" to \"+o}}}return{state:\"success\",data:t}}(v,s,T,i),i?(v.ifModified&&((u=T.getResponseHeader(\"Last-Modified\"))&&(S.lastModified[f]=u),(u=T.getResponseHeader(\"etag\"))&&(S.etag[f]=u)),204===e||\"HEAD\"===v.type?l=\"nocontent\":304===e?l=\"notmodified\":(l=s.state,o=s.data,i=!(a=s.error))):(a=l,!e&&l||(l=\"error\",e<0&&(e=0))),T.status=e,T.statusText=(t||l)+\"\",i?x.resolveWith(y,[o,l,T]):x.rejectWith(y,[T,l,a]),T.statusCode(w),w=void 0,g&&m.trigger(i?\"ajaxSuccess\":\"ajaxError\",[T,v,i?o:a]),b.fireWith(y,[T,l]),g&&(m.trigger(\"ajaxComplete\",[T,v]),--S.active||S.event.trigger(\"ajaxStop\")))}return T},getJSON:function(e,t,n){return S.get(e,t,n,\"json\")},getScript:function(e,t){return S.get(e,void 0,t,\"script\")}}),S.each([\"get\",\"post\"],function(e,i){S[i]=function(e,t,n,r){return m(t)&&(r=r||n,n=t,t=void 0),S.ajax(S.extend({url:e,type:i,dataType:r,data:t,success:n},S.isPlainObject(e)&&e))}}),S.ajaxPrefilter(function(e){var t;for(t in e.headers)\"content-type\"===t.toLowerCase()&&(e.contentType=e.headers[t]||\"\")}),S._evalUrl=function(e,t,n){return S.ajax({url:e,type:\"GET\",dataType:\"script\",cache:!0,async:!1,global:!1,converters:{\"text script\":function(){}},dataFilter:function(e){S.globalEval(e,t,n)}})},S.fn.extend({wrapAll:function(e){var t;return this[0]&&(m(e)&&(e=e.call(this[0])),t=S(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){var e=this;while(e.firstElementChild)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(n){return m(n)?this.each(function(e){S(this).wrapInner(n.call(this,e))}):this.each(function(){var e=S(this),t=e.contents();t.length?t.wrapAll(n):e.append(n)})},wrap:function(t){var n=m(t);return this.each(function(e){S(this).wrapAll(n?t.call(this,e):t)})},unwrap:function(e){return this.parent(e).not(\"body\").each(function(){S(this).replaceWith(this.childNodes)}),this}}),S.expr.pseudos.hidden=function(e){return!S.expr.pseudos.visible(e)},S.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},S.ajaxSettings.xhr=function(){try{return new C.XMLHttpRequest}catch(e){}};var Bt={0:200,1223:204},$t=S.ajaxSettings.xhr();y.cors=!!$t&&\"withCredentials\"in $t,y.ajax=$t=!!$t,S.ajaxTransport(function(i){var o,a;if(y.cors||$t&&!i.crossDomain)return{send:function(e,t){var n,r=i.xhr();if(r.open(i.type,i.url,i.async,i.username,i.password),i.xhrFields)for(n in i.xhrFields)r[n]=i.xhrFields[n];for(n in i.mimeType&&r.overrideMimeType&&r.overrideMimeType(i.mimeType),i.crossDomain||e[\"X-Requested-With\"]||(e[\"X-Requested-With\"]=\"XMLHttpRequest\"),e)r.setRequestHeader(n,e[n]);o=function(e){return function(){o&&(o=a=r.onload=r.onerror=r.onabort=r.ontimeout=r.onreadystatechange=null,\"abort\"===e?r.abort():\"error\"===e?\"number\"!=typeof r.status?t(0,\"error\"):t(r.status,r.statusText):t(Bt[r.status]||r.status,r.statusText,\"text\"!==(r.responseType||\"text\")||\"string\"!=typeof r.responseText?{binary:r.response}:{text:r.responseText},r.getAllResponseHeaders()))}},r.onload=o(),a=r.onerror=r.ontimeout=o(\"error\"),void 0!==r.onabort?r.onabort=a:r.onreadystatechange=function(){4===r.readyState&&C.setTimeout(function(){o&&a()})},o=o(\"abort\");try{r.send(i.hasContent&&i.data||null)}catch(e){if(o)throw e}},abort:function(){o&&o()}}}),S.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),S.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/\\b(?:java|ecma)script\\b/},converters:{\"text script\":function(e){return S.globalEval(e),e}}}),S.ajaxPrefilter(\"script\",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type=\"GET\")}),S.ajaxTransport(\"script\",function(n){var r,i;if(n.crossDomain||n.scriptAttrs)return{send:function(e,t){r=S(\"<script>\").attr(n.scriptAttrs||{}).prop({charset:n.scriptCharset,src:n.url}).on(\"load error\",i=function(e){r.remove(),i=null,e&&t(\"error\"===e.type?404:200,e.type)}),E.head.appendChild(r[0])},abort:function(){i&&i()}}});var _t,zt=[],Ut=/(=)\\?(?=&|$)|\\?\\?/;S.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var e=zt.pop()||S.expando+\"_\"+wt.guid++;return this[e]=!0,e}}),S.ajaxPrefilter(\"json jsonp\",function(e,t,n){var r,i,o,a=!1!==e.jsonp&&(Ut.test(e.url)?\"url\":\"string\"==typeof e.data&&0===(e.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Ut.test(e.data)&&\"data\");if(a||\"jsonp\"===e.dataTypes[0])return r=e.jsonpCallback=m(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,a?e[a]=e[a].replace(Ut,\"$1\"+r):!1!==e.jsonp&&(e.url+=(Tt.test(e.url)?\"&\":\"?\")+e.jsonp+\"=\"+r),e.converters[\"script json\"]=function(){return o||S.error(r+\" was not called\"),o[0]},e.dataTypes[0]=\"json\",i=C[r],C[r]=function(){o=arguments},n.always(function(){void 0===i?S(C).removeProp(r):C[r]=i,e[r]&&(e.jsonpCallback=t.jsonpCallback,zt.push(r)),o&&m(i)&&i(o[0]),o=i=void 0}),\"script\"}),y.createHTMLDocument=((_t=E.implementation.createHTMLDocument(\"\").body).innerHTML=\"<form></form><form></form>\",2===_t.childNodes.length),S.parseHTML=function(e,t,n){return\"string\"!=typeof e?[]:(\"boolean\"==typeof t&&(n=t,t=!1),t||(y.createHTMLDocument?((r=(t=E.implementation.createHTMLDocument(\"\")).createElement(\"base\")).href=E.location.href,t.head.appendChild(r)):t=E),o=!n&&[],(i=N.exec(e))?[t.createElement(i[1])]:(i=xe([e],t,o),o&&o.length&&S(o).remove(),S.merge([],i.childNodes)));var r,i,o},S.fn.load=function(e,t,n){var r,i,o,a=this,s=e.indexOf(\" \");return-1<s&&(r=ht(e.slice(s)),e=e.slice(0,s)),m(t)?(n=t,t=void 0):t&&\"object\"==typeof t&&(i=\"POST\"),0<a.length&&S.ajax({url:e,type:i||\"GET\",dataType:\"html\",data:t}).done(function(e){o=arguments,a.html(r?S(\"<div>\").append(S.parseHTML(e)).find(r):e)}).always(n&&function(e,t){a.each(function(){n.apply(this,o||[e.responseText,t,e])})}),this},S.expr.pseudos.animated=function(t){return S.grep(S.timers,function(e){return t===e.elem}).length},S.offset={setOffset:function(e,t,n){var r,i,o,a,s,u,l=S.css(e,\"position\"),c=S(e),f={};\"static\"===l&&(e.style.position=\"relative\"),s=c.offset(),o=S.css(e,\"top\"),u=S.css(e,\"left\"),(\"absolute\"===l||\"fixed\"===l)&&-1<(o+u).indexOf(\"auto\")?(a=(r=c.position()).top,i=r.left):(a=parseFloat(o)||0,i=parseFloat(u)||0),m(t)&&(t=t.call(e,n,S.extend({},s))),null!=t.top&&(f.top=t.top-s.top+a),null!=t.left&&(f.left=t.left-s.left+i),\"using\"in t?t.using.call(e,f):c.css(f)}},S.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){S.offset.setOffset(this,t,e)});var e,n,r=this[0];return r?r.getClientRects().length?(e=r.getBoundingClientRect(),n=r.ownerDocument.defaultView,{top:e.top+n.pageYOffset,left:e.left+n.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,n,r=this[0],i={top:0,left:0};if(\"fixed\"===S.css(r,\"position\"))t=r.getBoundingClientRect();else{t=this.offset(),n=r.ownerDocument,e=r.offsetParent||n.documentElement;while(e&&(e===n.body||e===n.documentElement)&&\"static\"===S.css(e,\"position\"))e=e.parentNode;e&&e!==r&&1===e.nodeType&&((i=S(e).offset()).top+=S.css(e,\"borderTopWidth\",!0),i.left+=S.css(e,\"borderLeftWidth\",!0))}return{top:t.top-i.top-S.css(r,\"marginTop\",!0),left:t.left-i.left-S.css(r,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var e=this.offsetParent;while(e&&\"static\"===S.css(e,\"position\"))e=e.offsetParent;return e||re})}}),S.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(t,i){var o=\"pageYOffset\"===i;S.fn[t]=function(e){return $(this,function(e,t,n){var r;if(x(e)?r=e:9===e.nodeType&&(r=e.defaultView),void 0===n)return r?r[i]:e[t];r?r.scrollTo(o?r.pageXOffset:n,o?n:r.pageYOffset):e[t]=n},t,e,arguments.length)}}),S.each([\"top\",\"left\"],function(e,n){S.cssHooks[n]=Fe(y.pixelPosition,function(e,t){if(t)return t=We(e,n),Pe.test(t)?S(e).position()[n]+\"px\":t})}),S.each({Height:\"height\",Width:\"width\"},function(a,s){S.each({padding:\"inner\"+a,content:s,\"\":\"outer\"+a},function(r,o){S.fn[o]=function(e,t){var n=arguments.length&&(r||\"boolean\"!=typeof e),i=r||(!0===e||!0===t?\"margin\":\"border\");return $(this,function(e,t,n){var r;return x(e)?0===o.indexOf(\"outer\")?e[\"inner\"+a]:e.document.documentElement[\"client\"+a]:9===e.nodeType?(r=e.documentElement,Math.max(e.body[\"scroll\"+a],r[\"scroll\"+a],e.body[\"offset\"+a],r[\"offset\"+a],r[\"client\"+a])):void 0===n?S.css(e,t,i):S.style(e,t,n,i)},s,n?e:void 0,n)}})}),S.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(e,t){S.fn[t]=function(e){return this.on(t,e)}}),S.fn.extend({bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,\"**\"):this.off(t,e||\"**\",n)},hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),S.each(\"blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu\".split(\" \"),function(e,n){S.fn[n]=function(e,t){return 0<arguments.length?this.on(n,null,e,t):this.trigger(n)}});var Xt=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;S.proxy=function(e,t){var n,r,i;if(\"string\"==typeof t&&(n=e[t],t=e,e=n),m(e))return r=s.call(arguments,2),(i=function(){return e.apply(t||this,r.concat(s.call(arguments)))}).guid=e.guid=e.guid||S.guid++,i},S.holdReady=function(e){e?S.readyWait++:S.ready(!0)},S.isArray=Array.isArray,S.parseJSON=JSON.parse,S.nodeName=A,S.isFunction=m,S.isWindow=x,S.camelCase=X,S.type=w,S.now=Date.now,S.isNumeric=function(e){var t=S.type(e);return(\"number\"===t||\"string\"===t)&&!isNaN(e-parseFloat(e))},S.trim=function(e){return null==e?\"\":(e+\"\").replace(Xt,\"\")},\"function\"==typeof define&&define.amd&&define(\"jquery\",[],function(){return S});var Vt=C.jQuery,Gt=C.$;return S.noConflict=function(e){return C.$===S&&(C.$=Gt),e&&C.jQuery===S&&(C.jQuery=Vt),S},\"undefined\"==typeof e&&(C.jQuery=C.$=S),S});\r\n/*!\r\n * Chart.js v3.7.0\r\n * https://www.chartjs.org\r\n * (c) 2021 Chart.js Contributors\r\n * Released under the MIT License\r\n */\r\n(function (global, factory) {\r\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\ntypeof define === 'function' && define.amd ? define(factory) :\r\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Chart = factory());\r\n})(this, (function () { 'use strict';\r\n\r\nfunction fontString(pixelSize, fontStyle, fontFamily) {\r\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\r\n}\r\nconst requestAnimFrame = (function() {\r\n  if (typeof window === 'undefined') {\r\n    return function(callback) {\r\n      return callback();\r\n    };\r\n  }\r\n  return window.requestAnimationFrame;\r\n}());\r\nfunction throttled(fn, thisArg, updateFn) {\r\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\r\n  let ticking = false;\r\n  let args = [];\r\n  return function(...rest) {\r\n    args = updateArgs(rest);\r\n    if (!ticking) {\r\n      ticking = true;\r\n      requestAnimFrame.call(window, () => {\r\n        ticking = false;\r\n        fn.apply(thisArg, args);\r\n      });\r\n    }\r\n  };\r\n}\r\nfunction debounce(fn, delay) {\r\n  let timeout;\r\n  return function(...args) {\r\n    if (delay) {\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(fn, delay, args);\r\n    } else {\r\n      fn.apply(this, args);\r\n    }\r\n    return delay;\r\n  };\r\n}\r\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\r\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\r\nconst _textX = (align, left, right, rtl) => {\r\n  const check = rtl ? 'left' : 'right';\r\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\r\n};\r\n\r\nclass Animator {\r\n  constructor() {\r\n    this._request = null;\r\n    this._charts = new Map();\r\n    this._running = false;\r\n    this._lastDate = undefined;\r\n  }\r\n  _notify(chart, anims, date, type) {\r\n    const callbacks = anims.listeners[type];\r\n    const numSteps = anims.duration;\r\n    callbacks.forEach(fn => fn({\r\n      chart,\r\n      initial: anims.initial,\r\n      numSteps,\r\n      currentStep: Math.min(date - anims.start, numSteps)\r\n    }));\r\n  }\r\n  _refresh() {\r\n    if (this._request) {\r\n      return;\r\n    }\r\n    this._running = true;\r\n    this._request = requestAnimFrame.call(window, () => {\r\n      this._update();\r\n      this._request = null;\r\n      if (this._running) {\r\n        this._refresh();\r\n      }\r\n    });\r\n  }\r\n  _update(date = Date.now()) {\r\n    let remaining = 0;\r\n    this._charts.forEach((anims, chart) => {\r\n      if (!anims.running || !anims.items.length) {\r\n        return;\r\n      }\r\n      const items = anims.items;\r\n      let i = items.length - 1;\r\n      let draw = false;\r\n      let item;\r\n      for (; i >= 0; --i) {\r\n        item = items[i];\r\n        if (item._active) {\r\n          if (item._total > anims.duration) {\r\n            anims.duration = item._total;\r\n          }\r\n          item.tick(date);\r\n          draw = true;\r\n        } else {\r\n          items[i] = items[items.length - 1];\r\n          items.pop();\r\n        }\r\n      }\r\n      if (draw) {\r\n        chart.draw();\r\n        this._notify(chart, anims, date, 'progress');\r\n      }\r\n      if (!items.length) {\r\n        anims.running = false;\r\n        this._notify(chart, anims, date, 'complete');\r\n        anims.initial = false;\r\n      }\r\n      remaining += items.length;\r\n    });\r\n    this._lastDate = date;\r\n    if (remaining === 0) {\r\n      this._running = false;\r\n    }\r\n  }\r\n  _getAnims(chart) {\r\n    const charts = this._charts;\r\n    let anims = charts.get(chart);\r\n    if (!anims) {\r\n      anims = {\r\n        running: false,\r\n        initial: true,\r\n        items: [],\r\n        listeners: {\r\n          complete: [],\r\n          progress: []\r\n        }\r\n      };\r\n      charts.set(chart, anims);\r\n    }\r\n    return anims;\r\n  }\r\n  listen(chart, event, cb) {\r\n    this._getAnims(chart).listeners[event].push(cb);\r\n  }\r\n  add(chart, items) {\r\n    if (!items || !items.length) {\r\n      return;\r\n    }\r\n    this._getAnims(chart).items.push(...items);\r\n  }\r\n  has(chart) {\r\n    return this._getAnims(chart).items.length > 0;\r\n  }\r\n  start(chart) {\r\n    const anims = this._charts.get(chart);\r\n    if (!anims) {\r\n      return;\r\n    }\r\n    anims.running = true;\r\n    anims.start = Date.now();\r\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\r\n    this._refresh();\r\n  }\r\n  running(chart) {\r\n    if (!this._running) {\r\n      return false;\r\n    }\r\n    const anims = this._charts.get(chart);\r\n    if (!anims || !anims.running || !anims.items.length) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  stop(chart) {\r\n    const anims = this._charts.get(chart);\r\n    if (!anims || !anims.items.length) {\r\n      return;\r\n    }\r\n    const items = anims.items;\r\n    let i = items.length - 1;\r\n    for (; i >= 0; --i) {\r\n      items[i].cancel();\r\n    }\r\n    anims.items = [];\r\n    this._notify(chart, anims, Date.now(), 'complete');\r\n  }\r\n  remove(chart) {\r\n    return this._charts.delete(chart);\r\n  }\r\n}\r\nvar animator = new Animator();\r\n\r\n/*!\r\n * @kurkle/color v0.1.9\r\n * https://github.com/kurkle/color#readme\r\n * (c) 2020 Jukka Kurkela\r\n * Released under the MIT License\r\n */\r\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\r\nconst hex = '0123456789ABCDEF';\r\nconst h1 = (b) => hex[b & 0xF];\r\nconst h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\r\nconst eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\r\nfunction isShort(v) {\r\n\treturn eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\r\n}\r\nfunction hexParse(str) {\r\n\tvar len = str.length;\r\n\tvar ret;\r\n\tif (str[0] === '#') {\r\n\t\tif (len === 4 || len === 5) {\r\n\t\t\tret = {\r\n\t\t\t\tr: 255 & map$1[str[1]] * 17,\r\n\t\t\t\tg: 255 & map$1[str[2]] * 17,\r\n\t\t\t\tb: 255 & map$1[str[3]] * 17,\r\n\t\t\t\ta: len === 5 ? map$1[str[4]] * 17 : 255\r\n\t\t\t};\r\n\t\t} else if (len === 7 || len === 9) {\r\n\t\t\tret = {\r\n\t\t\t\tr: map$1[str[1]] << 4 | map$1[str[2]],\r\n\t\t\t\tg: map$1[str[3]] << 4 | map$1[str[4]],\r\n\t\t\t\tb: map$1[str[5]] << 4 | map$1[str[6]],\r\n\t\t\t\ta: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\treturn ret;\r\n}\r\nfunction hexString(v) {\r\n\tvar f = isShort(v) ? h1 : h2;\r\n\treturn v\r\n\t\t? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\r\n\t\t: v;\r\n}\r\nfunction round(v) {\r\n\treturn v + 0.5 | 0;\r\n}\r\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\r\nfunction p2b(v) {\r\n\treturn lim(round(v * 2.55), 0, 255);\r\n}\r\nfunction n2b(v) {\r\n\treturn lim(round(v * 255), 0, 255);\r\n}\r\nfunction b2n(v) {\r\n\treturn lim(round(v / 2.55) / 100, 0, 1);\r\n}\r\nfunction n2p(v) {\r\n\treturn lim(round(v * 100), 0, 100);\r\n}\r\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\r\nfunction rgbParse(str) {\r\n\tconst m = RGB_RE.exec(str);\r\n\tlet a = 255;\r\n\tlet r, g, b;\r\n\tif (!m) {\r\n\t\treturn;\r\n\t}\r\n\tif (m[7] !== r) {\r\n\t\tconst v = +m[7];\r\n\t\ta = 255 & (m[8] ? p2b(v) : v * 255);\r\n\t}\r\n\tr = +m[1];\r\n\tg = +m[3];\r\n\tb = +m[5];\r\n\tr = 255 & (m[2] ? p2b(r) : r);\r\n\tg = 255 & (m[4] ? p2b(g) : g);\r\n\tb = 255 & (m[6] ? p2b(b) : b);\r\n\treturn {\r\n\t\tr: r,\r\n\t\tg: g,\r\n\t\tb: b,\r\n\t\ta: a\r\n\t};\r\n}\r\nfunction rgbString(v) {\r\n\treturn v && (\r\n\t\tv.a < 255\r\n\t\t\t? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\r\n\t\t\t: `rgb(${v.r}, ${v.g}, ${v.b})`\r\n\t);\r\n}\r\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\r\nfunction hsl2rgbn(h, s, l) {\r\n\tconst a = s * Math.min(l, 1 - l);\r\n\tconst f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\r\n\treturn [f(0), f(8), f(4)];\r\n}\r\nfunction hsv2rgbn(h, s, v) {\r\n\tconst f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\r\n\treturn [f(5), f(3), f(1)];\r\n}\r\nfunction hwb2rgbn(h, w, b) {\r\n\tconst rgb = hsl2rgbn(h, 1, 0.5);\r\n\tlet i;\r\n\tif (w + b > 1) {\r\n\t\ti = 1 / (w + b);\r\n\t\tw *= i;\r\n\t\tb *= i;\r\n\t}\r\n\tfor (i = 0; i < 3; i++) {\r\n\t\trgb[i] *= 1 - w - b;\r\n\t\trgb[i] += w;\r\n\t}\r\n\treturn rgb;\r\n}\r\nfunction rgb2hsl(v) {\r\n\tconst range = 255;\r\n\tconst r = v.r / range;\r\n\tconst g = v.g / range;\r\n\tconst b = v.b / range;\r\n\tconst max = Math.max(r, g, b);\r\n\tconst min = Math.min(r, g, b);\r\n\tconst l = (max + min) / 2;\r\n\tlet h, s, d;\r\n\tif (max !== min) {\r\n\t\td = max - min;\r\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\t\th = max === r\r\n\t\t\t? ((g - b) / d) + (g < b ? 6 : 0)\r\n\t\t\t: max === g\r\n\t\t\t\t? (b - r) / d + 2\r\n\t\t\t\t: (r - g) / d + 4;\r\n\t\th = h * 60 + 0.5;\r\n\t}\r\n\treturn [h | 0, s || 0, l];\r\n}\r\nfunction calln(f, a, b, c) {\r\n\treturn (\r\n\t\tArray.isArray(a)\r\n\t\t\t? f(a[0], a[1], a[2])\r\n\t\t\t: f(a, b, c)\r\n\t).map(n2b);\r\n}\r\nfunction hsl2rgb(h, s, l) {\r\n\treturn calln(hsl2rgbn, h, s, l);\r\n}\r\nfunction hwb2rgb(h, w, b) {\r\n\treturn calln(hwb2rgbn, h, w, b);\r\n}\r\nfunction hsv2rgb(h, s, v) {\r\n\treturn calln(hsv2rgbn, h, s, v);\r\n}\r\nfunction hue(h) {\r\n\treturn (h % 360 + 360) % 360;\r\n}\r\nfunction hueParse(str) {\r\n\tconst m = HUE_RE.exec(str);\r\n\tlet a = 255;\r\n\tlet v;\r\n\tif (!m) {\r\n\t\treturn;\r\n\t}\r\n\tif (m[5] !== v) {\r\n\t\ta = m[6] ? p2b(+m[5]) : n2b(+m[5]);\r\n\t}\r\n\tconst h = hue(+m[2]);\r\n\tconst p1 = +m[3] / 100;\r\n\tconst p2 = +m[4] / 100;\r\n\tif (m[1] === 'hwb') {\r\n\t\tv = hwb2rgb(h, p1, p2);\r\n\t} else if (m[1] === 'hsv') {\r\n\t\tv = hsv2rgb(h, p1, p2);\r\n\t} else {\r\n\t\tv = hsl2rgb(h, p1, p2);\r\n\t}\r\n\treturn {\r\n\t\tr: v[0],\r\n\t\tg: v[1],\r\n\t\tb: v[2],\r\n\t\ta: a\r\n\t};\r\n}\r\nfunction rotate(v, deg) {\r\n\tvar h = rgb2hsl(v);\r\n\th[0] = hue(h[0] + deg);\r\n\th = hsl2rgb(h);\r\n\tv.r = h[0];\r\n\tv.g = h[1];\r\n\tv.b = h[2];\r\n}\r\nfunction hslString(v) {\r\n\tif (!v) {\r\n\t\treturn;\r\n\t}\r\n\tconst a = rgb2hsl(v);\r\n\tconst h = a[0];\r\n\tconst s = n2p(a[1]);\r\n\tconst l = n2p(a[2]);\r\n\treturn v.a < 255\r\n\t\t? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\r\n\t\t: `hsl(${h}, ${s}%, ${l}%)`;\r\n}\r\nconst map$1$1 = {\r\n\tx: 'dark',\r\n\tZ: 'light',\r\n\tY: 're',\r\n\tX: 'blu',\r\n\tW: 'gr',\r\n\tV: 'medium',\r\n\tU: 'slate',\r\n\tA: 'ee',\r\n\tT: 'ol',\r\n\tS: 'or',\r\n\tB: 'ra',\r\n\tC: 'lateg',\r\n\tD: 'ights',\r\n\tR: 'in',\r\n\tQ: 'turquois',\r\n\tE: 'hi',\r\n\tP: 'ro',\r\n\tO: 'al',\r\n\tN: 'le',\r\n\tM: 'de',\r\n\tL: 'yello',\r\n\tF: 'en',\r\n\tK: 'ch',\r\n\tG: 'arks',\r\n\tH: 'ea',\r\n\tI: 'ightg',\r\n\tJ: 'wh'\r\n};\r\nconst names = {\r\n\tOiceXe: 'f0f8ff',\r\n\tantiquewEte: 'faebd7',\r\n\taqua: 'ffff',\r\n\taquamarRe: '7fffd4',\r\n\tazuY: 'f0ffff',\r\n\tbeige: 'f5f5dc',\r\n\tbisque: 'ffe4c4',\r\n\tblack: '0',\r\n\tblanKedOmond: 'ffebcd',\r\n\tXe: 'ff',\r\n\tXeviTet: '8a2be2',\r\n\tbPwn: 'a52a2a',\r\n\tburlywood: 'deb887',\r\n\tcaMtXe: '5f9ea0',\r\n\tKartYuse: '7fff00',\r\n\tKocTate: 'd2691e',\r\n\tcSO: 'ff7f50',\r\n\tcSnflowerXe: '6495ed',\r\n\tcSnsilk: 'fff8dc',\r\n\tcrimson: 'dc143c',\r\n\tcyan: 'ffff',\r\n\txXe: '8b',\r\n\txcyan: '8b8b',\r\n\txgTMnPd: 'b8860b',\r\n\txWay: 'a9a9a9',\r\n\txgYF: '6400',\r\n\txgYy: 'a9a9a9',\r\n\txkhaki: 'bdb76b',\r\n\txmagFta: '8b008b',\r\n\txTivegYF: '556b2f',\r\n\txSange: 'ff8c00',\r\n\txScEd: '9932cc',\r\n\txYd: '8b0000',\r\n\txsOmon: 'e9967a',\r\n\txsHgYF: '8fbc8f',\r\n\txUXe: '483d8b',\r\n\txUWay: '2f4f4f',\r\n\txUgYy: '2f4f4f',\r\n\txQe: 'ced1',\r\n\txviTet: '9400d3',\r\n\tdAppRk: 'ff1493',\r\n\tdApskyXe: 'bfff',\r\n\tdimWay: '696969',\r\n\tdimgYy: '696969',\r\n\tdodgerXe: '1e90ff',\r\n\tfiYbrick: 'b22222',\r\n\tflSOwEte: 'fffaf0',\r\n\tfoYstWAn: '228b22',\r\n\tfuKsia: 'ff00ff',\r\n\tgaRsbSo: 'dcdcdc',\r\n\tghostwEte: 'f8f8ff',\r\n\tgTd: 'ffd700',\r\n\tgTMnPd: 'daa520',\r\n\tWay: '808080',\r\n\tgYF: '8000',\r\n\tgYFLw: 'adff2f',\r\n\tgYy: '808080',\r\n\thoneyMw: 'f0fff0',\r\n\thotpRk: 'ff69b4',\r\n\tRdianYd: 'cd5c5c',\r\n\tRdigo: '4b0082',\r\n\tivSy: 'fffff0',\r\n\tkhaki: 'f0e68c',\r\n\tlavFMr: 'e6e6fa',\r\n\tlavFMrXsh: 'fff0f5',\r\n\tlawngYF: '7cfc00',\r\n\tNmoncEffon: 'fffacd',\r\n\tZXe: 'add8e6',\r\n\tZcSO: 'f08080',\r\n\tZcyan: 'e0ffff',\r\n\tZgTMnPdLw: 'fafad2',\r\n\tZWay: 'd3d3d3',\r\n\tZgYF: '90ee90',\r\n\tZgYy: 'd3d3d3',\r\n\tZpRk: 'ffb6c1',\r\n\tZsOmon: 'ffa07a',\r\n\tZsHgYF: '20b2aa',\r\n\tZskyXe: '87cefa',\r\n\tZUWay: '778899',\r\n\tZUgYy: '778899',\r\n\tZstAlXe: 'b0c4de',\r\n\tZLw: 'ffffe0',\r\n\tlime: 'ff00',\r\n\tlimegYF: '32cd32',\r\n\tlRF: 'faf0e6',\r\n\tmagFta: 'ff00ff',\r\n\tmaPon: '800000',\r\n\tVaquamarRe: '66cdaa',\r\n\tVXe: 'cd',\r\n\tVScEd: 'ba55d3',\r\n\tVpurpN: '9370db',\r\n\tVsHgYF: '3cb371',\r\n\tVUXe: '7b68ee',\r\n\tVsprRggYF: 'fa9a',\r\n\tVQe: '48d1cc',\r\n\tVviTetYd: 'c71585',\r\n\tmidnightXe: '191970',\r\n\tmRtcYam: 'f5fffa',\r\n\tmistyPse: 'ffe4e1',\r\n\tmoccasR: 'ffe4b5',\r\n\tnavajowEte: 'ffdead',\r\n\tnavy: '80',\r\n\tTdlace: 'fdf5e6',\r\n\tTive: '808000',\r\n\tTivedBb: '6b8e23',\r\n\tSange: 'ffa500',\r\n\tSangeYd: 'ff4500',\r\n\tScEd: 'da70d6',\r\n\tpOegTMnPd: 'eee8aa',\r\n\tpOegYF: '98fb98',\r\n\tpOeQe: 'afeeee',\r\n\tpOeviTetYd: 'db7093',\r\n\tpapayawEp: 'ffefd5',\r\n\tpHKpuff: 'ffdab9',\r\n\tperu: 'cd853f',\r\n\tpRk: 'ffc0cb',\r\n\tplum: 'dda0dd',\r\n\tpowMrXe: 'b0e0e6',\r\n\tpurpN: '800080',\r\n\tYbeccapurpN: '663399',\r\n\tYd: 'ff0000',\r\n\tPsybrown: 'bc8f8f',\r\n\tPyOXe: '4169e1',\r\n\tsaddNbPwn: '8b4513',\r\n\tsOmon: 'fa8072',\r\n\tsandybPwn: 'f4a460',\r\n\tsHgYF: '2e8b57',\r\n\tsHshell: 'fff5ee',\r\n\tsiFna: 'a0522d',\r\n\tsilver: 'c0c0c0',\r\n\tskyXe: '87ceeb',\r\n\tUXe: '6a5acd',\r\n\tUWay: '708090',\r\n\tUgYy: '708090',\r\n\tsnow: 'fffafa',\r\n\tsprRggYF: 'ff7f',\r\n\tstAlXe: '4682b4',\r\n\ttan: 'd2b48c',\r\n\tteO: '8080',\r\n\ttEstN: 'd8bfd8',\r\n\ttomato: 'ff6347',\r\n\tQe: '40e0d0',\r\n\tviTet: 'ee82ee',\r\n\tJHt: 'f5deb3',\r\n\twEte: 'ffffff',\r\n\twEtesmoke: 'f5f5f5',\r\n\tLw: 'ffff00',\r\n\tLwgYF: '9acd32'\r\n};\r\nfunction unpack() {\r\n\tconst unpacked = {};\r\n\tconst keys = Object.keys(names);\r\n\tconst tkeys = Object.keys(map$1$1);\r\n\tlet i, j, k, ok, nk;\r\n\tfor (i = 0; i < keys.length; i++) {\r\n\t\tok = nk = keys[i];\r\n\t\tfor (j = 0; j < tkeys.length; j++) {\r\n\t\t\tk = tkeys[j];\r\n\t\t\tnk = nk.replace(k, map$1$1[k]);\r\n\t\t}\r\n\t\tk = parseInt(names[ok], 16);\r\n\t\tunpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\r\n\t}\r\n\treturn unpacked;\r\n}\r\nlet names$1;\r\nfunction nameParse(str) {\r\n\tif (!names$1) {\r\n\t\tnames$1 = unpack();\r\n\t\tnames$1.transparent = [0, 0, 0, 0];\r\n\t}\r\n\tconst a = names$1[str.toLowerCase()];\r\n\treturn a && {\r\n\t\tr: a[0],\r\n\t\tg: a[1],\r\n\t\tb: a[2],\r\n\t\ta: a.length === 4 ? a[3] : 255\r\n\t};\r\n}\r\nfunction modHSL(v, i, ratio) {\r\n\tif (v) {\r\n\t\tlet tmp = rgb2hsl(v);\r\n\t\ttmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\r\n\t\ttmp = hsl2rgb(tmp);\r\n\t\tv.r = tmp[0];\r\n\t\tv.g = tmp[1];\r\n\t\tv.b = tmp[2];\r\n\t}\r\n}\r\nfunction clone$1(v, proto) {\r\n\treturn v ? Object.assign(proto || {}, v) : v;\r\n}\r\nfunction fromObject(input) {\r\n\tvar v = {r: 0, g: 0, b: 0, a: 255};\r\n\tif (Array.isArray(input)) {\r\n\t\tif (input.length >= 3) {\r\n\t\t\tv = {r: input[0], g: input[1], b: input[2], a: 255};\r\n\t\t\tif (input.length > 3) {\r\n\t\t\t\tv.a = n2b(input[3]);\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\tv = clone$1(input, {r: 0, g: 0, b: 0, a: 1});\r\n\t\tv.a = n2b(v.a);\r\n\t}\r\n\treturn v;\r\n}\r\nfunction functionParse(str) {\r\n\tif (str.charAt(0) === 'r') {\r\n\t\treturn rgbParse(str);\r\n\t}\r\n\treturn hueParse(str);\r\n}\r\nclass Color {\r\n\tconstructor(input) {\r\n\t\tif (input instanceof Color) {\r\n\t\t\treturn input;\r\n\t\t}\r\n\t\tconst type = typeof input;\r\n\t\tlet v;\r\n\t\tif (type === 'object') {\r\n\t\t\tv = fromObject(input);\r\n\t\t} else if (type === 'string') {\r\n\t\t\tv = hexParse(input) || nameParse(input) || functionParse(input);\r\n\t\t}\r\n\t\tthis._rgb = v;\r\n\t\tthis._valid = !!v;\r\n\t}\r\n\tget valid() {\r\n\t\treturn this._valid;\r\n\t}\r\n\tget rgb() {\r\n\t\tvar v = clone$1(this._rgb);\r\n\t\tif (v) {\r\n\t\t\tv.a = b2n(v.a);\r\n\t\t}\r\n\t\treturn v;\r\n\t}\r\n\tset rgb(obj) {\r\n\t\tthis._rgb = fromObject(obj);\r\n\t}\r\n\trgbString() {\r\n\t\treturn this._valid ? rgbString(this._rgb) : this._rgb;\r\n\t}\r\n\thexString() {\r\n\t\treturn this._valid ? hexString(this._rgb) : this._rgb;\r\n\t}\r\n\thslString() {\r\n\t\treturn this._valid ? hslString(this._rgb) : this._rgb;\r\n\t}\r\n\tmix(color, weight) {\r\n\t\tconst me = this;\r\n\t\tif (color) {\r\n\t\t\tconst c1 = me.rgb;\r\n\t\t\tconst c2 = color.rgb;\r\n\t\t\tlet w2;\r\n\t\t\tconst p = weight === w2 ? 0.5 : weight;\r\n\t\t\tconst w = 2 * p - 1;\r\n\t\t\tconst a = c1.a - c2.a;\r\n\t\t\tconst w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n\t\t\tw2 = 1 - w1;\r\n\t\t\tc1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\r\n\t\t\tc1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\r\n\t\t\tc1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\r\n\t\t\tc1.a = p * c1.a + (1 - p) * c2.a;\r\n\t\t\tme.rgb = c1;\r\n\t\t}\r\n\t\treturn me;\r\n\t}\r\n\tclone() {\r\n\t\treturn new Color(this.rgb);\r\n\t}\r\n\talpha(a) {\r\n\t\tthis._rgb.a = n2b(a);\r\n\t\treturn this;\r\n\t}\r\n\tclearer(ratio) {\r\n\t\tconst rgb = this._rgb;\r\n\t\trgb.a *= 1 - ratio;\r\n\t\treturn this;\r\n\t}\r\n\tgreyscale() {\r\n\t\tconst rgb = this._rgb;\r\n\t\tconst val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\r\n\t\trgb.r = rgb.g = rgb.b = val;\r\n\t\treturn this;\r\n\t}\r\n\topaquer(ratio) {\r\n\t\tconst rgb = this._rgb;\r\n\t\trgb.a *= 1 + ratio;\r\n\t\treturn this;\r\n\t}\r\n\tnegate() {\r\n\t\tconst v = this._rgb;\r\n\t\tv.r = 255 - v.r;\r\n\t\tv.g = 255 - v.g;\r\n\t\tv.b = 255 - v.b;\r\n\t\treturn this;\r\n\t}\r\n\tlighten(ratio) {\r\n\t\tmodHSL(this._rgb, 2, ratio);\r\n\t\treturn this;\r\n\t}\r\n\tdarken(ratio) {\r\n\t\tmodHSL(this._rgb, 2, -ratio);\r\n\t\treturn this;\r\n\t}\r\n\tsaturate(ratio) {\r\n\t\tmodHSL(this._rgb, 1, ratio);\r\n\t\treturn this;\r\n\t}\r\n\tdesaturate(ratio) {\r\n\t\tmodHSL(this._rgb, 1, -ratio);\r\n\t\treturn this;\r\n\t}\r\n\trotate(deg) {\r\n\t\trotate(this._rgb, deg);\r\n\t\treturn this;\r\n\t}\r\n}\r\nfunction index_esm(input) {\r\n\treturn new Color(input);\r\n}\r\n\r\nconst isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\r\nfunction color(value) {\r\n  return isPatternOrGradient(value) ? value : index_esm(value);\r\n}\r\nfunction getHoverColor(value) {\r\n  return isPatternOrGradient(value)\r\n    ? value\r\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\r\n}\r\n\r\nfunction noop() {}\r\nconst uid = (function() {\r\n  let id = 0;\r\n  return function() {\r\n    return id++;\r\n  };\r\n}());\r\nfunction isNullOrUndef(value) {\r\n  return value === null || typeof value === 'undefined';\r\n}\r\nfunction isArray(value) {\r\n  if (Array.isArray && Array.isArray(value)) {\r\n    return true;\r\n  }\r\n  const type = Object.prototype.toString.call(value);\r\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nfunction isObject(value) {\r\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\r\n}\r\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\r\nfunction finiteOrDefault(value, defaultValue) {\r\n  return isNumberFinite(value) ? value : defaultValue;\r\n}\r\nfunction valueOrDefault(value, defaultValue) {\r\n  return typeof value === 'undefined' ? defaultValue : value;\r\n}\r\nconst toPercentage = (value, dimension) =>\r\n  typeof value === 'string' && value.endsWith('%') ?\r\n    parseFloat(value) / 100\r\n    : value / dimension;\r\nconst toDimension = (value, dimension) =>\r\n  typeof value === 'string' && value.endsWith('%') ?\r\n    parseFloat(value) / 100 * dimension\r\n    : +value;\r\nfunction callback(fn, args, thisArg) {\r\n  if (fn && typeof fn.call === 'function') {\r\n    return fn.apply(thisArg, args);\r\n  }\r\n}\r\nfunction each(loopable, fn, thisArg, reverse) {\r\n  let i, len, keys;\r\n  if (isArray(loopable)) {\r\n    len = loopable.length;\r\n    if (reverse) {\r\n      for (i = len - 1; i >= 0; i--) {\r\n        fn.call(thisArg, loopable[i], i);\r\n      }\r\n    } else {\r\n      for (i = 0; i < len; i++) {\r\n        fn.call(thisArg, loopable[i], i);\r\n      }\r\n    }\r\n  } else if (isObject(loopable)) {\r\n    keys = Object.keys(loopable);\r\n    len = keys.length;\r\n    for (i = 0; i < len; i++) {\r\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\r\n    }\r\n  }\r\n}\r\nfunction _elementsEqual(a0, a1) {\r\n  let i, ilen, v0, v1;\r\n  if (!a0 || !a1 || a0.length !== a1.length) {\r\n    return false;\r\n  }\r\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\r\n    v0 = a0[i];\r\n    v1 = a1[i];\r\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\nfunction clone(source) {\r\n  if (isArray(source)) {\r\n    return source.map(clone);\r\n  }\r\n  if (isObject(source)) {\r\n    const target = Object.create(null);\r\n    const keys = Object.keys(source);\r\n    const klen = keys.length;\r\n    let k = 0;\r\n    for (; k < klen; ++k) {\r\n      target[keys[k]] = clone(source[keys[k]]);\r\n    }\r\n    return target;\r\n  }\r\n  return source;\r\n}\r\nfunction isValidKey(key) {\r\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\r\n}\r\nfunction _merger(key, target, source, options) {\r\n  if (!isValidKey(key)) {\r\n    return;\r\n  }\r\n  const tval = target[key];\r\n  const sval = source[key];\r\n  if (isObject(tval) && isObject(sval)) {\r\n    merge(tval, sval, options);\r\n  } else {\r\n    target[key] = clone(sval);\r\n  }\r\n}\r\nfunction merge(target, source, options) {\r\n  const sources = isArray(source) ? source : [source];\r\n  const ilen = sources.length;\r\n  if (!isObject(target)) {\r\n    return target;\r\n  }\r\n  options = options || {};\r\n  const merger = options.merger || _merger;\r\n  for (let i = 0; i < ilen; ++i) {\r\n    source = sources[i];\r\n    if (!isObject(source)) {\r\n      continue;\r\n    }\r\n    const keys = Object.keys(source);\r\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\r\n      merger(keys[k], target, source, options);\r\n    }\r\n  }\r\n  return target;\r\n}\r\nfunction mergeIf(target, source) {\r\n  return merge(target, source, {merger: _mergerIf});\r\n}\r\nfunction _mergerIf(key, target, source) {\r\n  if (!isValidKey(key)) {\r\n    return;\r\n  }\r\n  const tval = target[key];\r\n  const sval = source[key];\r\n  if (isObject(tval) && isObject(sval)) {\r\n    mergeIf(tval, sval);\r\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\r\n    target[key] = clone(sval);\r\n  }\r\n}\r\nfunction _deprecated(scope, value, previous, current) {\r\n  if (value !== undefined) {\r\n    console.warn(scope + ': \"' + previous +\r\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\r\n  }\r\n}\r\nconst emptyString = '';\r\nconst dot = '.';\r\nfunction indexOfDotOrLength(key, start) {\r\n  const idx = key.indexOf(dot, start);\r\n  return idx === -1 ? key.length : idx;\r\n}\r\nfunction resolveObjectKey(obj, key) {\r\n  if (key === emptyString) {\r\n    return obj;\r\n  }\r\n  let pos = 0;\r\n  let idx = indexOfDotOrLength(key, pos);\r\n  while (obj && idx > pos) {\r\n    obj = obj[key.substr(pos, idx - pos)];\r\n    pos = idx + 1;\r\n    idx = indexOfDotOrLength(key, pos);\r\n  }\r\n  return obj;\r\n}\r\nfunction _capitalize(str) {\r\n  return str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\nconst defined = (value) => typeof value !== 'undefined';\r\nconst isFunction = (value) => typeof value === 'function';\r\nconst setsEqual = (a, b) => {\r\n  if (a.size !== b.size) {\r\n    return false;\r\n  }\r\n  for (const item of a) {\r\n    if (!b.has(item)) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\nfunction _isClickEvent(e) {\r\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\r\n}\r\n\r\nconst overrides = Object.create(null);\r\nconst descriptors = Object.create(null);\r\nfunction getScope$1(node, key) {\r\n  if (!key) {\r\n    return node;\r\n  }\r\n  const keys = key.split('.');\r\n  for (let i = 0, n = keys.length; i < n; ++i) {\r\n    const k = keys[i];\r\n    node = node[k] || (node[k] = Object.create(null));\r\n  }\r\n  return node;\r\n}\r\nfunction set(root, scope, values) {\r\n  if (typeof scope === 'string') {\r\n    return merge(getScope$1(root, scope), values);\r\n  }\r\n  return merge(getScope$1(root, ''), scope);\r\n}\r\nclass Defaults {\r\n  constructor(_descriptors) {\r\n    this.animation = undefined;\r\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\r\n    this.borderColor = 'rgba(0,0,0,0.1)';\r\n    this.color = '#666';\r\n    this.datasets = {};\r\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\r\n    this.elements = {};\r\n    this.events = [\r\n      'mousemove',\r\n      'mouseout',\r\n      'click',\r\n      'touchstart',\r\n      'touchmove'\r\n    ];\r\n    this.font = {\r\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\r\n      size: 12,\r\n      style: 'normal',\r\n      lineHeight: 1.2,\r\n      weight: null\r\n    };\r\n    this.hover = {};\r\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\r\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\r\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\r\n    this.indexAxis = 'x';\r\n    this.interaction = {\r\n      mode: 'nearest',\r\n      intersect: true\r\n    };\r\n    this.maintainAspectRatio = true;\r\n    this.onHover = null;\r\n    this.onClick = null;\r\n    this.parsing = true;\r\n    this.plugins = {};\r\n    this.responsive = true;\r\n    this.scale = undefined;\r\n    this.scales = {};\r\n    this.showLine = true;\r\n    this.drawActiveElementsOnTop = true;\r\n    this.describe(_descriptors);\r\n  }\r\n  set(scope, values) {\r\n    return set(this, scope, values);\r\n  }\r\n  get(scope) {\r\n    return getScope$1(this, scope);\r\n  }\r\n  describe(scope, values) {\r\n    return set(descriptors, scope, values);\r\n  }\r\n  override(scope, values) {\r\n    return set(overrides, scope, values);\r\n  }\r\n  route(scope, name, targetScope, targetName) {\r\n    const scopeObject = getScope$1(this, scope);\r\n    const targetScopeObject = getScope$1(this, targetScope);\r\n    const privateName = '_' + name;\r\n    Object.defineProperties(scopeObject, {\r\n      [privateName]: {\r\n        value: scopeObject[name],\r\n        writable: true\r\n      },\r\n      [name]: {\r\n        enumerable: true,\r\n        get() {\r\n          const local = this[privateName];\r\n          const target = targetScopeObject[targetName];\r\n          if (isObject(local)) {\r\n            return Object.assign({}, target, local);\r\n          }\r\n          return valueOrDefault(local, target);\r\n        },\r\n        set(value) {\r\n          this[privateName] = value;\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\nvar defaults = new Defaults({\r\n  _scriptable: (name) => !name.startsWith('on'),\r\n  _indexable: (name) => name !== 'events',\r\n  hover: {\r\n    _fallback: 'interaction'\r\n  },\r\n  interaction: {\r\n    _scriptable: false,\r\n    _indexable: false,\r\n  }\r\n});\r\n\r\nconst PI = Math.PI;\r\nconst TAU = 2 * PI;\r\nconst PITAU = TAU + PI;\r\nconst INFINITY = Number.POSITIVE_INFINITY;\r\nconst RAD_PER_DEG = PI / 180;\r\nconst HALF_PI = PI / 2;\r\nconst QUARTER_PI = PI / 4;\r\nconst TWO_THIRDS_PI = PI * 2 / 3;\r\nconst log10 = Math.log10;\r\nconst sign = Math.sign;\r\nfunction niceNum(range) {\r\n  const roundedRange = Math.round(range);\r\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\r\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\r\n  const fraction = range / niceRange;\r\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\r\n  return niceFraction * niceRange;\r\n}\r\nfunction _factorize(value) {\r\n  const result = [];\r\n  const sqrt = Math.sqrt(value);\r\n  let i;\r\n  for (i = 1; i < sqrt; i++) {\r\n    if (value % i === 0) {\r\n      result.push(i);\r\n      result.push(value / i);\r\n    }\r\n  }\r\n  if (sqrt === (sqrt | 0)) {\r\n    result.push(sqrt);\r\n  }\r\n  result.sort((a, b) => a - b).pop();\r\n  return result;\r\n}\r\nfunction isNumber(n) {\r\n  return !isNaN(parseFloat(n)) && isFinite(n);\r\n}\r\nfunction almostEquals(x, y, epsilon) {\r\n  return Math.abs(x - y) < epsilon;\r\n}\r\nfunction almostWhole(x, epsilon) {\r\n  const rounded = Math.round(x);\r\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\r\n}\r\nfunction _setMinAndMaxByKey(array, target, property) {\r\n  let i, ilen, value;\r\n  for (i = 0, ilen = array.length; i < ilen; i++) {\r\n    value = array[i][property];\r\n    if (!isNaN(value)) {\r\n      target.min = Math.min(target.min, value);\r\n      target.max = Math.max(target.max, value);\r\n    }\r\n  }\r\n}\r\nfunction toRadians(degrees) {\r\n  return degrees * (PI / 180);\r\n}\r\nfunction toDegrees(radians) {\r\n  return radians * (180 / PI);\r\n}\r\nfunction _decimalPlaces(x) {\r\n  if (!isNumberFinite(x)) {\r\n    return;\r\n  }\r\n  let e = 1;\r\n  let p = 0;\r\n  while (Math.round(x * e) / e !== x) {\r\n    e *= 10;\r\n    p++;\r\n  }\r\n  return p;\r\n}\r\nfunction getAngleFromPoint(centrePoint, anglePoint) {\r\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\r\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\r\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\r\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\r\n  if (angle < (-0.5 * PI)) {\r\n    angle += TAU;\r\n  }\r\n  return {\r\n    angle,\r\n    distance: radialDistanceFromCenter\r\n  };\r\n}\r\nfunction distanceBetweenPoints(pt1, pt2) {\r\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\r\n}\r\nfunction _angleDiff(a, b) {\r\n  return (a - b + PITAU) % TAU - PI;\r\n}\r\nfunction _normalizeAngle(a) {\r\n  return (a % TAU + TAU) % TAU;\r\n}\r\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\r\n  const a = _normalizeAngle(angle);\r\n  const s = _normalizeAngle(start);\r\n  const e = _normalizeAngle(end);\r\n  const angleToStart = _normalizeAngle(s - a);\r\n  const angleToEnd = _normalizeAngle(e - a);\r\n  const startToAngle = _normalizeAngle(a - s);\r\n  const endToAngle = _normalizeAngle(a - e);\r\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\r\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\r\n}\r\nfunction _limitValue(value, min, max) {\r\n  return Math.max(min, Math.min(max, value));\r\n}\r\nfunction _int16Range(value) {\r\n  return _limitValue(value, -32768, 32767);\r\n}\r\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\r\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\r\n}\r\n\r\nfunction toFontString(font) {\r\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\r\n    return null;\r\n  }\r\n  return (font.style ? font.style + ' ' : '')\r\n\t\t+ (font.weight ? font.weight + ' ' : '')\r\n\t\t+ font.size + 'px '\r\n\t\t+ font.family;\r\n}\r\nfunction _measureText(ctx, data, gc, longest, string) {\r\n  let textWidth = data[string];\r\n  if (!textWidth) {\r\n    textWidth = data[string] = ctx.measureText(string).width;\r\n    gc.push(string);\r\n  }\r\n  if (textWidth > longest) {\r\n    longest = textWidth;\r\n  }\r\n  return longest;\r\n}\r\nfunction _longestText(ctx, font, arrayOfThings, cache) {\r\n  cache = cache || {};\r\n  let data = cache.data = cache.data || {};\r\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\r\n  if (cache.font !== font) {\r\n    data = cache.data = {};\r\n    gc = cache.garbageCollect = [];\r\n    cache.font = font;\r\n  }\r\n  ctx.save();\r\n  ctx.font = font;\r\n  let longest = 0;\r\n  const ilen = arrayOfThings.length;\r\n  let i, j, jlen, thing, nestedThing;\r\n  for (i = 0; i < ilen; i++) {\r\n    thing = arrayOfThings[i];\r\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\r\n      longest = _measureText(ctx, data, gc, longest, thing);\r\n    } else if (isArray(thing)) {\r\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\r\n        nestedThing = thing[j];\r\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\r\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  ctx.restore();\r\n  const gcLen = gc.length / 2;\r\n  if (gcLen > arrayOfThings.length) {\r\n    for (i = 0; i < gcLen; i++) {\r\n      delete data[gc[i]];\r\n    }\r\n    gc.splice(0, gcLen);\r\n  }\r\n  return longest;\r\n}\r\nfunction _alignPixel(chart, pixel, width) {\r\n  const devicePixelRatio = chart.currentDevicePixelRatio;\r\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\r\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\r\n}\r\nfunction clearCanvas(canvas, ctx) {\r\n  ctx = ctx || canvas.getContext('2d');\r\n  ctx.save();\r\n  ctx.resetTransform();\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  ctx.restore();\r\n}\r\nfunction drawPoint(ctx, options, x, y) {\r\n  let type, xOffset, yOffset, size, cornerRadius;\r\n  const style = options.pointStyle;\r\n  const rotation = options.rotation;\r\n  const radius = options.radius;\r\n  let rad = (rotation || 0) * RAD_PER_DEG;\r\n  if (style && typeof style === 'object') {\r\n    type = style.toString();\r\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\r\n      ctx.save();\r\n      ctx.translate(x, y);\r\n      ctx.rotate(rad);\r\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\r\n      ctx.restore();\r\n      return;\r\n    }\r\n  }\r\n  if (isNaN(radius) || radius <= 0) {\r\n    return;\r\n  }\r\n  ctx.beginPath();\r\n  switch (style) {\r\n  default:\r\n    ctx.arc(x, y, radius, 0, TAU);\r\n    ctx.closePath();\r\n    break;\r\n  case 'triangle':\r\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\r\n    rad += TWO_THIRDS_PI;\r\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\r\n    rad += TWO_THIRDS_PI;\r\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\r\n    ctx.closePath();\r\n    break;\r\n  case 'rectRounded':\r\n    cornerRadius = radius * 0.516;\r\n    size = radius - cornerRadius;\r\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\r\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\r\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\r\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\r\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\r\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\r\n    ctx.closePath();\r\n    break;\r\n  case 'rect':\r\n    if (!rotation) {\r\n      size = Math.SQRT1_2 * radius;\r\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\r\n      break;\r\n    }\r\n    rad += QUARTER_PI;\r\n  case 'rectRot':\r\n    xOffset = Math.cos(rad) * radius;\r\n    yOffset = Math.sin(rad) * radius;\r\n    ctx.moveTo(x - xOffset, y - yOffset);\r\n    ctx.lineTo(x + yOffset, y - xOffset);\r\n    ctx.lineTo(x + xOffset, y + yOffset);\r\n    ctx.lineTo(x - yOffset, y + xOffset);\r\n    ctx.closePath();\r\n    break;\r\n  case 'crossRot':\r\n    rad += QUARTER_PI;\r\n  case 'cross':\r\n    xOffset = Math.cos(rad) * radius;\r\n    yOffset = Math.sin(rad) * radius;\r\n    ctx.moveTo(x - xOffset, y - yOffset);\r\n    ctx.lineTo(x + xOffset, y + yOffset);\r\n    ctx.moveTo(x + yOffset, y - xOffset);\r\n    ctx.lineTo(x - yOffset, y + xOffset);\r\n    break;\r\n  case 'star':\r\n    xOffset = Math.cos(rad) * radius;\r\n    yOffset = Math.sin(rad) * radius;\r\n    ctx.moveTo(x - xOffset, y - yOffset);\r\n    ctx.lineTo(x + xOffset, y + yOffset);\r\n    ctx.moveTo(x + yOffset, y - xOffset);\r\n    ctx.lineTo(x - yOffset, y + xOffset);\r\n    rad += QUARTER_PI;\r\n    xOffset = Math.cos(rad) * radius;\r\n    yOffset = Math.sin(rad) * radius;\r\n    ctx.moveTo(x - xOffset, y - yOffset);\r\n    ctx.lineTo(x + xOffset, y + yOffset);\r\n    ctx.moveTo(x + yOffset, y - xOffset);\r\n    ctx.lineTo(x - yOffset, y + xOffset);\r\n    break;\r\n  case 'line':\r\n    xOffset = Math.cos(rad) * radius;\r\n    yOffset = Math.sin(rad) * radius;\r\n    ctx.moveTo(x - xOffset, y - yOffset);\r\n    ctx.lineTo(x + xOffset, y + yOffset);\r\n    break;\r\n  case 'dash':\r\n    ctx.moveTo(x, y);\r\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\r\n    break;\r\n  }\r\n  ctx.fill();\r\n  if (options.borderWidth > 0) {\r\n    ctx.stroke();\r\n  }\r\n}\r\nfunction _isPointInArea(point, area, margin) {\r\n  margin = margin || 0.5;\r\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\r\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\r\n}\r\nfunction clipArea(ctx, area) {\r\n  ctx.save();\r\n  ctx.beginPath();\r\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\r\n  ctx.clip();\r\n}\r\nfunction unclipArea(ctx) {\r\n  ctx.restore();\r\n}\r\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\r\n  if (!previous) {\r\n    return ctx.lineTo(target.x, target.y);\r\n  }\r\n  if (mode === 'middle') {\r\n    const midpoint = (previous.x + target.x) / 2.0;\r\n    ctx.lineTo(midpoint, previous.y);\r\n    ctx.lineTo(midpoint, target.y);\r\n  } else if (mode === 'after' !== !!flip) {\r\n    ctx.lineTo(previous.x, target.y);\r\n  } else {\r\n    ctx.lineTo(target.x, previous.y);\r\n  }\r\n  ctx.lineTo(target.x, target.y);\r\n}\r\nfunction _bezierCurveTo(ctx, previous, target, flip) {\r\n  if (!previous) {\r\n    return ctx.lineTo(target.x, target.y);\r\n  }\r\n  ctx.bezierCurveTo(\r\n    flip ? previous.cp1x : previous.cp2x,\r\n    flip ? previous.cp1y : previous.cp2y,\r\n    flip ? target.cp2x : target.cp1x,\r\n    flip ? target.cp2y : target.cp1y,\r\n    target.x,\r\n    target.y);\r\n}\r\nfunction renderText(ctx, text, x, y, font, opts = {}) {\r\n  const lines = isArray(text) ? text : [text];\r\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\r\n  let i, line;\r\n  ctx.save();\r\n  ctx.font = font.string;\r\n  setRenderOpts(ctx, opts);\r\n  for (i = 0; i < lines.length; ++i) {\r\n    line = lines[i];\r\n    if (stroke) {\r\n      if (opts.strokeColor) {\r\n        ctx.strokeStyle = opts.strokeColor;\r\n      }\r\n      if (!isNullOrUndef(opts.strokeWidth)) {\r\n        ctx.lineWidth = opts.strokeWidth;\r\n      }\r\n      ctx.strokeText(line, x, y, opts.maxWidth);\r\n    }\r\n    ctx.fillText(line, x, y, opts.maxWidth);\r\n    decorateText(ctx, x, y, line, opts);\r\n    y += font.lineHeight;\r\n  }\r\n  ctx.restore();\r\n}\r\nfunction setRenderOpts(ctx, opts) {\r\n  if (opts.translation) {\r\n    ctx.translate(opts.translation[0], opts.translation[1]);\r\n  }\r\n  if (!isNullOrUndef(opts.rotation)) {\r\n    ctx.rotate(opts.rotation);\r\n  }\r\n  if (opts.color) {\r\n    ctx.fillStyle = opts.color;\r\n  }\r\n  if (opts.textAlign) {\r\n    ctx.textAlign = opts.textAlign;\r\n  }\r\n  if (opts.textBaseline) {\r\n    ctx.textBaseline = opts.textBaseline;\r\n  }\r\n}\r\nfunction decorateText(ctx, x, y, line, opts) {\r\n  if (opts.strikethrough || opts.underline) {\r\n    const metrics = ctx.measureText(line);\r\n    const left = x - metrics.actualBoundingBoxLeft;\r\n    const right = x + metrics.actualBoundingBoxRight;\r\n    const top = y - metrics.actualBoundingBoxAscent;\r\n    const bottom = y + metrics.actualBoundingBoxDescent;\r\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\r\n    ctx.strokeStyle = ctx.fillStyle;\r\n    ctx.beginPath();\r\n    ctx.lineWidth = opts.decorationWidth || 2;\r\n    ctx.moveTo(left, yDecoration);\r\n    ctx.lineTo(right, yDecoration);\r\n    ctx.stroke();\r\n  }\r\n}\r\nfunction addRoundedRectPath(ctx, rect) {\r\n  const {x, y, w, h, radius} = rect;\r\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\r\n  ctx.lineTo(x, y + h - radius.bottomLeft);\r\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\r\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\r\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\r\n  ctx.lineTo(x + w, y + radius.topRight);\r\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\r\n  ctx.lineTo(x + radius.topLeft, y);\r\n}\r\n\r\nfunction _lookup(table, value, cmp) {\r\n  cmp = cmp || ((index) => table[index] < value);\r\n  let hi = table.length - 1;\r\n  let lo = 0;\r\n  let mid;\r\n  while (hi - lo > 1) {\r\n    mid = (lo + hi) >> 1;\r\n    if (cmp(mid)) {\r\n      lo = mid;\r\n    } else {\r\n      hi = mid;\r\n    }\r\n  }\r\n  return {lo, hi};\r\n}\r\nconst _lookupByKey = (table, key, value) =>\r\n  _lookup(table, value, index => table[index][key] < value);\r\nconst _rlookupByKey = (table, key, value) =>\r\n  _lookup(table, value, index => table[index][key] >= value);\r\nfunction _filterBetween(values, min, max) {\r\n  let start = 0;\r\n  let end = values.length;\r\n  while (start < end && values[start] < min) {\r\n    start++;\r\n  }\r\n  while (end > start && values[end - 1] > max) {\r\n    end--;\r\n  }\r\n  return start > 0 || end < values.length\r\n    ? values.slice(start, end)\r\n    : values;\r\n}\r\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\r\nfunction listenArrayEvents(array, listener) {\r\n  if (array._chartjs) {\r\n    array._chartjs.listeners.push(listener);\r\n    return;\r\n  }\r\n  Object.defineProperty(array, '_chartjs', {\r\n    configurable: true,\r\n    enumerable: false,\r\n    value: {\r\n      listeners: [listener]\r\n    }\r\n  });\r\n  arrayEvents.forEach((key) => {\r\n    const method = '_onData' + _capitalize(key);\r\n    const base = array[key];\r\n    Object.defineProperty(array, key, {\r\n      configurable: true,\r\n      enumerable: false,\r\n      value(...args) {\r\n        const res = base.apply(this, args);\r\n        array._chartjs.listeners.forEach((object) => {\r\n          if (typeof object[method] === 'function') {\r\n            object[method](...args);\r\n          }\r\n        });\r\n        return res;\r\n      }\r\n    });\r\n  });\r\n}\r\nfunction unlistenArrayEvents(array, listener) {\r\n  const stub = array._chartjs;\r\n  if (!stub) {\r\n    return;\r\n  }\r\n  const listeners = stub.listeners;\r\n  const index = listeners.indexOf(listener);\r\n  if (index !== -1) {\r\n    listeners.splice(index, 1);\r\n  }\r\n  if (listeners.length > 0) {\r\n    return;\r\n  }\r\n  arrayEvents.forEach((key) => {\r\n    delete array[key];\r\n  });\r\n  delete array._chartjs;\r\n}\r\nfunction _arrayUnique(items) {\r\n  const set = new Set();\r\n  let i, ilen;\r\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n    set.add(items[i]);\r\n  }\r\n  if (set.size === ilen) {\r\n    return items;\r\n  }\r\n  return Array.from(set);\r\n}\r\n\r\nfunction _isDomSupported() {\r\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\r\n}\r\nfunction _getParentNode(domNode) {\r\n  let parent = domNode.parentNode;\r\n  if (parent && parent.toString() === '[object ShadowRoot]') {\r\n    parent = parent.host;\r\n  }\r\n  return parent;\r\n}\r\nfunction parseMaxStyle(styleValue, node, parentProperty) {\r\n  let valueInPixels;\r\n  if (typeof styleValue === 'string') {\r\n    valueInPixels = parseInt(styleValue, 10);\r\n    if (styleValue.indexOf('%') !== -1) {\r\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\r\n    }\r\n  } else {\r\n    valueInPixels = styleValue;\r\n  }\r\n  return valueInPixels;\r\n}\r\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\r\nfunction getStyle(el, property) {\r\n  return getComputedStyle(el).getPropertyValue(property);\r\n}\r\nconst positions = ['top', 'right', 'bottom', 'left'];\r\nfunction getPositionedStyle(styles, style, suffix) {\r\n  const result = {};\r\n  suffix = suffix ? '-' + suffix : '';\r\n  for (let i = 0; i < 4; i++) {\r\n    const pos = positions[i];\r\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\r\n  }\r\n  result.width = result.left + result.right;\r\n  result.height = result.top + result.bottom;\r\n  return result;\r\n}\r\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\r\nfunction getCanvasPosition(evt, canvas) {\r\n  const e = evt.native || evt;\r\n  const touches = e.touches;\r\n  const source = touches && touches.length ? touches[0] : e;\r\n  const {offsetX, offsetY} = source;\r\n  let box = false;\r\n  let x, y;\r\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\r\n    x = offsetX;\r\n    y = offsetY;\r\n  } else {\r\n    const rect = canvas.getBoundingClientRect();\r\n    x = source.clientX - rect.left;\r\n    y = source.clientY - rect.top;\r\n    box = true;\r\n  }\r\n  return {x, y, box};\r\n}\r\nfunction getRelativePosition$1(evt, chart) {\r\n  const {canvas, currentDevicePixelRatio} = chart;\r\n  const style = getComputedStyle(canvas);\r\n  const borderBox = style.boxSizing === 'border-box';\r\n  const paddings = getPositionedStyle(style, 'padding');\r\n  const borders = getPositionedStyle(style, 'border', 'width');\r\n  const {x, y, box} = getCanvasPosition(evt, canvas);\r\n  const xOffset = paddings.left + (box && borders.left);\r\n  const yOffset = paddings.top + (box && borders.top);\r\n  let {width, height} = chart;\r\n  if (borderBox) {\r\n    width -= paddings.width + borders.width;\r\n    height -= paddings.height + borders.height;\r\n  }\r\n  return {\r\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\r\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\r\n  };\r\n}\r\nfunction getContainerSize(canvas, width, height) {\r\n  let maxWidth, maxHeight;\r\n  if (width === undefined || height === undefined) {\r\n    const container = _getParentNode(canvas);\r\n    if (!container) {\r\n      width = canvas.clientWidth;\r\n      height = canvas.clientHeight;\r\n    } else {\r\n      const rect = container.getBoundingClientRect();\r\n      const containerStyle = getComputedStyle(container);\r\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\r\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\r\n      width = rect.width - containerPadding.width - containerBorder.width;\r\n      height = rect.height - containerPadding.height - containerBorder.height;\r\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\r\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\r\n    }\r\n  }\r\n  return {\r\n    width,\r\n    height,\r\n    maxWidth: maxWidth || INFINITY,\r\n    maxHeight: maxHeight || INFINITY\r\n  };\r\n}\r\nconst round1 = v => Math.round(v * 10) / 10;\r\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\r\n  const style = getComputedStyle(canvas);\r\n  const margins = getPositionedStyle(style, 'margin');\r\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\r\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\r\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\r\n  let {width, height} = containerSize;\r\n  if (style.boxSizing === 'content-box') {\r\n    const borders = getPositionedStyle(style, 'border', 'width');\r\n    const paddings = getPositionedStyle(style, 'padding');\r\n    width -= paddings.width + borders.width;\r\n    height -= paddings.height + borders.height;\r\n  }\r\n  width = Math.max(0, width - margins.width);\r\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\r\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\r\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\r\n  if (width && !height) {\r\n    height = round1(width / 2);\r\n  }\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\nfunction retinaScale(chart, forceRatio, forceStyle) {\r\n  const pixelRatio = forceRatio || 1;\r\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\r\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\r\n  chart.height = deviceHeight / pixelRatio;\r\n  chart.width = deviceWidth / pixelRatio;\r\n  const canvas = chart.canvas;\r\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\r\n    canvas.style.height = `${chart.height}px`;\r\n    canvas.style.width = `${chart.width}px`;\r\n  }\r\n  if (chart.currentDevicePixelRatio !== pixelRatio\r\n      || canvas.height !== deviceHeight\r\n      || canvas.width !== deviceWidth) {\r\n    chart.currentDevicePixelRatio = pixelRatio;\r\n    canvas.height = deviceHeight;\r\n    canvas.width = deviceWidth;\r\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nconst supportsEventListenerOptions = (function() {\r\n  let passiveSupported = false;\r\n  try {\r\n    const options = {\r\n      get passive() {\r\n        passiveSupported = true;\r\n        return false;\r\n      }\r\n    };\r\n    window.addEventListener('test', null, options);\r\n    window.removeEventListener('test', null, options);\r\n  } catch (e) {\r\n  }\r\n  return passiveSupported;\r\n}());\r\nfunction readUsedSize(element, property) {\r\n  const value = getStyle(element, property);\r\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\r\n  return matches ? +matches[1] : undefined;\r\n}\r\n\r\nfunction getRelativePosition(e, chart) {\r\n  if ('native' in e) {\r\n    return {\r\n      x: e.x,\r\n      y: e.y\r\n    };\r\n  }\r\n  return getRelativePosition$1(e, chart);\r\n}\r\nfunction evaluateAllVisibleItems(chart, handler) {\r\n  const metasets = chart.getSortedVisibleDatasetMetas();\r\n  let index, data, element;\r\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    ({index, data} = metasets[i]);\r\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\r\n      element = data[j];\r\n      if (!element.skip) {\r\n        handler(element, index, j);\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction binarySearch(metaset, axis, value, intersect) {\r\n  const {controller, data, _sorted} = metaset;\r\n  const iScale = controller._cachedMeta.iScale;\r\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\r\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\r\n    if (!intersect) {\r\n      return lookupMethod(data, axis, value);\r\n    } else if (controller._sharedOptions) {\r\n      const el = data[0];\r\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\r\n      if (range) {\r\n        const start = lookupMethod(data, axis, value - range);\r\n        const end = lookupMethod(data, axis, value + range);\r\n        return {lo: start.lo, hi: end.hi};\r\n      }\r\n    }\r\n  }\r\n  return {lo: 0, hi: data.length - 1};\r\n}\r\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\r\n  const metasets = chart.getSortedVisibleDatasetMetas();\r\n  const value = position[axis];\r\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    const {index, data} = metasets[i];\r\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\r\n    for (let j = lo; j <= hi; ++j) {\r\n      const element = data[j];\r\n      if (!element.skip) {\r\n        handler(element, index, j);\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction getDistanceMetricForAxis(axis) {\r\n  const useX = axis.indexOf('x') !== -1;\r\n  const useY = axis.indexOf('y') !== -1;\r\n  return function(pt1, pt2) {\r\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\r\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\r\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\r\n  };\r\n}\r\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\r\n  const items = [];\r\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\r\n    return items;\r\n  }\r\n  const evaluationFunc = function(element, datasetIndex, index) {\r\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  };\r\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\r\n  return items;\r\n}\r\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\r\n  let items = [];\r\n  function evaluationFunc(element, datasetIndex, index) {\r\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\r\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\r\n    if (_angleBetween(angle, startAngle, endAngle)) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  }\r\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\r\n  return items;\r\n}\r\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition) {\r\n  let items = [];\r\n  const distanceMetric = getDistanceMetricForAxis(axis);\r\n  let minDistance = Number.POSITIVE_INFINITY;\r\n  function evaluationFunc(element, datasetIndex, index) {\r\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\r\n    if (intersect && !inRange) {\r\n      return;\r\n    }\r\n    const center = element.getCenterPoint(useFinalPosition);\r\n    const pointInArea = _isPointInArea(center, chart.chartArea, chart._minPadding);\r\n    if (!pointInArea && !inRange) {\r\n      return;\r\n    }\r\n    const distance = distanceMetric(position, center);\r\n    if (distance < minDistance) {\r\n      items = [{element, datasetIndex, index}];\r\n      minDistance = distance;\r\n    } else if (distance === minDistance) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  }\r\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\r\n  return items;\r\n}\r\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\r\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\r\n    return [];\r\n  }\r\n  return axis === 'r' && !intersect\r\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\r\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition);\r\n}\r\nfunction getAxisItems(chart, e, options, useFinalPosition) {\r\n  const position = getRelativePosition(e, chart);\r\n  const items = [];\r\n  const axis = options.axis;\r\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\r\n  let intersectsItem = false;\r\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\r\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\r\n      intersectsItem = true;\r\n    }\r\n  });\r\n  if (options.intersect && !intersectsItem) {\r\n    return [];\r\n  }\r\n  return items;\r\n}\r\nvar Interaction = {\r\n  modes: {\r\n    index(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'x';\r\n      const items = options.intersect\r\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\r\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\r\n      const elements = [];\r\n      if (!items.length) {\r\n        return [];\r\n      }\r\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\r\n        const index = items[0].index;\r\n        const element = meta.data[index];\r\n        if (element && !element.skip) {\r\n          elements.push({element, datasetIndex: meta.index, index});\r\n        }\r\n      });\r\n      return elements;\r\n    },\r\n    dataset(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      let items = options.intersect\r\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\r\n        getNearestItems(chart, position, axis, false, useFinalPosition);\r\n      if (items.length > 0) {\r\n        const datasetIndex = items[0].datasetIndex;\r\n        const data = chart.getDatasetMeta(datasetIndex).data;\r\n        items = [];\r\n        for (let i = 0; i < data.length; ++i) {\r\n          items.push({element: data[i], datasetIndex, index: i});\r\n        }\r\n      }\r\n      return items;\r\n    },\r\n    point(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      return getIntersectItems(chart, position, axis, useFinalPosition);\r\n    },\r\n    nearest(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\r\n    },\r\n    x(chart, e, options, useFinalPosition) {\r\n      return getAxisItems(chart, e, {axis: 'x', intersect: options.intersect}, useFinalPosition);\r\n    },\r\n    y(chart, e, options, useFinalPosition) {\r\n      return getAxisItems(chart, e, {axis: 'y', intersect: options.intersect}, useFinalPosition);\r\n    }\r\n  }\r\n};\r\n\r\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\r\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\r\nfunction toLineHeight(value, size) {\r\n  const matches = ('' + value).match(LINE_HEIGHT);\r\n  if (!matches || matches[1] === 'normal') {\r\n    return size * 1.2;\r\n  }\r\n  value = +matches[2];\r\n  switch (matches[3]) {\r\n  case 'px':\r\n    return value;\r\n  case '%':\r\n    value /= 100;\r\n    break;\r\n  }\r\n  return size * value;\r\n}\r\nconst numberOrZero = v => +v || 0;\r\nfunction _readValueToProps(value, props) {\r\n  const ret = {};\r\n  const objProps = isObject(props);\r\n  const keys = objProps ? Object.keys(props) : props;\r\n  const read = isObject(value)\r\n    ? objProps\r\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\r\n      : prop => value[prop]\r\n    : () => value;\r\n  for (const prop of keys) {\r\n    ret[prop] = numberOrZero(read(prop));\r\n  }\r\n  return ret;\r\n}\r\nfunction toTRBL(value) {\r\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\r\n}\r\nfunction toTRBLCorners(value) {\r\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\r\n}\r\nfunction toPadding(value) {\r\n  const obj = toTRBL(value);\r\n  obj.width = obj.left + obj.right;\r\n  obj.height = obj.top + obj.bottom;\r\n  return obj;\r\n}\r\nfunction toFont(options, fallback) {\r\n  options = options || {};\r\n  fallback = fallback || defaults.font;\r\n  let size = valueOrDefault(options.size, fallback.size);\r\n  if (typeof size === 'string') {\r\n    size = parseInt(size, 10);\r\n  }\r\n  let style = valueOrDefault(options.style, fallback.style);\r\n  if (style && !('' + style).match(FONT_STYLE)) {\r\n    console.warn('Invalid font style specified: \"' + style + '\"');\r\n    style = '';\r\n  }\r\n  const font = {\r\n    family: valueOrDefault(options.family, fallback.family),\r\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\r\n    size,\r\n    style,\r\n    weight: valueOrDefault(options.weight, fallback.weight),\r\n    string: ''\r\n  };\r\n  font.string = toFontString(font);\r\n  return font;\r\n}\r\nfunction resolve(inputs, context, index, info) {\r\n  let cacheable = true;\r\n  let i, ilen, value;\r\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\r\n    value = inputs[i];\r\n    if (value === undefined) {\r\n      continue;\r\n    }\r\n    if (context !== undefined && typeof value === 'function') {\r\n      value = value(context);\r\n      cacheable = false;\r\n    }\r\n    if (index !== undefined && isArray(value)) {\r\n      value = value[index % value.length];\r\n      cacheable = false;\r\n    }\r\n    if (value !== undefined) {\r\n      if (info && !cacheable) {\r\n        info.cacheable = false;\r\n      }\r\n      return value;\r\n    }\r\n  }\r\n}\r\nfunction _addGrace(minmax, grace, beginAtZero) {\r\n  const {min, max} = minmax;\r\n  const change = toDimension(grace, (max - min) / 2);\r\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\r\n  return {\r\n    min: keepZero(min, -Math.abs(change)),\r\n    max: keepZero(max, change)\r\n  };\r\n}\r\nfunction createContext(parentContext, context) {\r\n  return Object.assign(Object.create(parentContext), context);\r\n}\r\n\r\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\r\nfunction filterByPosition(array, position) {\r\n  return array.filter(v => v.pos === position);\r\n}\r\nfunction filterDynamicPositionByAxis(array, axis) {\r\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\r\n}\r\nfunction sortByWeight(array, reverse) {\r\n  return array.sort((a, b) => {\r\n    const v0 = reverse ? b : a;\r\n    const v1 = reverse ? a : b;\r\n    return v0.weight === v1.weight ?\r\n      v0.index - v1.index :\r\n      v0.weight - v1.weight;\r\n  });\r\n}\r\nfunction wrapBoxes(boxes) {\r\n  const layoutBoxes = [];\r\n  let i, ilen, box, pos, stack, stackWeight;\r\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\r\n    box = boxes[i];\r\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\r\n    layoutBoxes.push({\r\n      index: i,\r\n      box,\r\n      pos,\r\n      horizontal: box.isHorizontal(),\r\n      weight: box.weight,\r\n      stack: stack && (pos + stack),\r\n      stackWeight\r\n    });\r\n  }\r\n  return layoutBoxes;\r\n}\r\nfunction buildStacks(layouts) {\r\n  const stacks = {};\r\n  for (const wrap of layouts) {\r\n    const {stack, pos, stackWeight} = wrap;\r\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\r\n      continue;\r\n    }\r\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\r\n    _stack.count++;\r\n    _stack.weight += stackWeight;\r\n  }\r\n  return stacks;\r\n}\r\nfunction setLayoutDims(layouts, params) {\r\n  const stacks = buildStacks(layouts);\r\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\r\n  let i, ilen, layout;\r\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\r\n    layout = layouts[i];\r\n    const {fullSize} = layout.box;\r\n    const stack = stacks[layout.stack];\r\n    const factor = stack && layout.stackWeight / stack.weight;\r\n    if (layout.horizontal) {\r\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\r\n      layout.height = hBoxMaxHeight;\r\n    } else {\r\n      layout.width = vBoxMaxWidth;\r\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\r\n    }\r\n  }\r\n  return stacks;\r\n}\r\nfunction buildLayoutBoxes(boxes) {\r\n  const layoutBoxes = wrapBoxes(boxes);\r\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\r\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\r\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\r\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\r\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\r\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\r\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\r\n  return {\r\n    fullSize,\r\n    leftAndTop: left.concat(top),\r\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\r\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\r\n    vertical: left.concat(right).concat(centerVertical),\r\n    horizontal: top.concat(bottom).concat(centerHorizontal)\r\n  };\r\n}\r\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\r\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\r\n}\r\nfunction updateMaxPadding(maxPadding, boxPadding) {\r\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\r\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\r\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\r\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\r\n}\r\nfunction updateDims(chartArea, params, layout, stacks) {\r\n  const {pos, box} = layout;\r\n  const maxPadding = chartArea.maxPadding;\r\n  if (!isObject(pos)) {\r\n    if (layout.size) {\r\n      chartArea[pos] -= layout.size;\r\n    }\r\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\r\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\r\n    layout.size = stack.size / stack.count;\r\n    chartArea[pos] += layout.size;\r\n  }\r\n  if (box.getPadding) {\r\n    updateMaxPadding(maxPadding, box.getPadding());\r\n  }\r\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\r\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\r\n  const widthChanged = newWidth !== chartArea.w;\r\n  const heightChanged = newHeight !== chartArea.h;\r\n  chartArea.w = newWidth;\r\n  chartArea.h = newHeight;\r\n  return layout.horizontal\r\n    ? {same: widthChanged, other: heightChanged}\r\n    : {same: heightChanged, other: widthChanged};\r\n}\r\nfunction handleMaxPadding(chartArea) {\r\n  const maxPadding = chartArea.maxPadding;\r\n  function updatePos(pos) {\r\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\r\n    chartArea[pos] += change;\r\n    return change;\r\n  }\r\n  chartArea.y += updatePos('top');\r\n  chartArea.x += updatePos('left');\r\n  updatePos('right');\r\n  updatePos('bottom');\r\n}\r\nfunction getMargins(horizontal, chartArea) {\r\n  const maxPadding = chartArea.maxPadding;\r\n  function marginForPositions(positions) {\r\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\r\n    positions.forEach((pos) => {\r\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\r\n    });\r\n    return margin;\r\n  }\r\n  return horizontal\r\n    ? marginForPositions(['left', 'right'])\r\n    : marginForPositions(['top', 'bottom']);\r\n}\r\nfunction fitBoxes(boxes, chartArea, params, stacks) {\r\n  const refitBoxes = [];\r\n  let i, ilen, layout, box, refit, changed;\r\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\r\n    layout = boxes[i];\r\n    box = layout.box;\r\n    box.update(\r\n      layout.width || chartArea.w,\r\n      layout.height || chartArea.h,\r\n      getMargins(layout.horizontal, chartArea)\r\n    );\r\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\r\n    refit |= same && refitBoxes.length;\r\n    changed = changed || other;\r\n    if (!box.fullSize) {\r\n      refitBoxes.push(layout);\r\n    }\r\n  }\r\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\r\n}\r\nfunction setBoxDims(box, left, top, width, height) {\r\n  box.top = top;\r\n  box.left = left;\r\n  box.right = left + width;\r\n  box.bottom = top + height;\r\n  box.width = width;\r\n  box.height = height;\r\n}\r\nfunction placeBoxes(boxes, chartArea, params, stacks) {\r\n  const userPadding = params.padding;\r\n  let {x, y} = chartArea;\r\n  for (const layout of boxes) {\r\n    const box = layout.box;\r\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\r\n    const weight = (layout.stackWeight / stack.weight) || 1;\r\n    if (layout.horizontal) {\r\n      const width = chartArea.w * weight;\r\n      const height = stack.size || box.height;\r\n      if (defined(stack.start)) {\r\n        y = stack.start;\r\n      }\r\n      if (box.fullSize) {\r\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\r\n      } else {\r\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\r\n      }\r\n      stack.start = y;\r\n      stack.placed += width;\r\n      y = box.bottom;\r\n    } else {\r\n      const height = chartArea.h * weight;\r\n      const width = stack.size || box.width;\r\n      if (defined(stack.start)) {\r\n        x = stack.start;\r\n      }\r\n      if (box.fullSize) {\r\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\r\n      } else {\r\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\r\n      }\r\n      stack.start = x;\r\n      stack.placed += height;\r\n      x = box.right;\r\n    }\r\n  }\r\n  chartArea.x = x;\r\n  chartArea.y = y;\r\n}\r\ndefaults.set('layout', {\r\n  autoPadding: true,\r\n  padding: {\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    left: 0\r\n  }\r\n});\r\nvar layouts = {\r\n  addBox(chart, item) {\r\n    if (!chart.boxes) {\r\n      chart.boxes = [];\r\n    }\r\n    item.fullSize = item.fullSize || false;\r\n    item.position = item.position || 'top';\r\n    item.weight = item.weight || 0;\r\n    item._layers = item._layers || function() {\r\n      return [{\r\n        z: 0,\r\n        draw(chartArea) {\r\n          item.draw(chartArea);\r\n        }\r\n      }];\r\n    };\r\n    chart.boxes.push(item);\r\n  },\r\n  removeBox(chart, layoutItem) {\r\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\r\n    if (index !== -1) {\r\n      chart.boxes.splice(index, 1);\r\n    }\r\n  },\r\n  configure(chart, item, options) {\r\n    item.fullSize = options.fullSize;\r\n    item.position = options.position;\r\n    item.weight = options.weight;\r\n  },\r\n  update(chart, width, height, minPadding) {\r\n    if (!chart) {\r\n      return;\r\n    }\r\n    const padding = toPadding(chart.options.layout.padding);\r\n    const availableWidth = Math.max(width - padding.width, 0);\r\n    const availableHeight = Math.max(height - padding.height, 0);\r\n    const boxes = buildLayoutBoxes(chart.boxes);\r\n    const verticalBoxes = boxes.vertical;\r\n    const horizontalBoxes = boxes.horizontal;\r\n    each(chart.boxes, box => {\r\n      if (typeof box.beforeLayout === 'function') {\r\n        box.beforeLayout();\r\n      }\r\n    });\r\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\r\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\r\n    const params = Object.freeze({\r\n      outerWidth: width,\r\n      outerHeight: height,\r\n      padding,\r\n      availableWidth,\r\n      availableHeight,\r\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\r\n      hBoxMaxHeight: availableHeight / 2\r\n    });\r\n    const maxPadding = Object.assign({}, padding);\r\n    updateMaxPadding(maxPadding, toPadding(minPadding));\r\n    const chartArea = Object.assign({\r\n      maxPadding,\r\n      w: availableWidth,\r\n      h: availableHeight,\r\n      x: padding.left,\r\n      y: padding.top\r\n    }, padding);\r\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\r\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\r\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\r\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\r\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\r\n    }\r\n    handleMaxPadding(chartArea);\r\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\r\n    chartArea.x += chartArea.w;\r\n    chartArea.y += chartArea.h;\r\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\r\n    chart.chartArea = {\r\n      left: chartArea.left,\r\n      top: chartArea.top,\r\n      right: chartArea.left + chartArea.w,\r\n      bottom: chartArea.top + chartArea.h,\r\n      height: chartArea.h,\r\n      width: chartArea.w,\r\n    };\r\n    each(boxes.chartArea, (layout) => {\r\n      const box = layout.box;\r\n      Object.assign(box, chart.chartArea);\r\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\r\n    });\r\n  }\r\n};\r\n\r\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\r\n  if (!defined(fallback)) {\r\n    fallback = _resolve('_fallback', scopes);\r\n  }\r\n  const cache = {\r\n    [Symbol.toStringTag]: 'Object',\r\n    _cacheable: true,\r\n    _scopes: scopes,\r\n    _rootScopes: rootScopes,\r\n    _fallback: fallback,\r\n    _getTarget: getTarget,\r\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\r\n  };\r\n  return new Proxy(cache, {\r\n    deleteProperty(target, prop) {\r\n      delete target[prop];\r\n      delete target._keys;\r\n      delete scopes[0][prop];\r\n      return true;\r\n    },\r\n    get(target, prop) {\r\n      return _cached(target, prop,\r\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\r\n    },\r\n    getOwnPropertyDescriptor(target, prop) {\r\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\r\n    },\r\n    getPrototypeOf() {\r\n      return Reflect.getPrototypeOf(scopes[0]);\r\n    },\r\n    has(target, prop) {\r\n      return getKeysFromAllScopes(target).includes(prop);\r\n    },\r\n    ownKeys(target) {\r\n      return getKeysFromAllScopes(target);\r\n    },\r\n    set(target, prop, value) {\r\n      const storage = target._storage || (target._storage = getTarget());\r\n      target[prop] = storage[prop] = value;\r\n      delete target._keys;\r\n      return true;\r\n    }\r\n  });\r\n}\r\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\r\n  const cache = {\r\n    _cacheable: false,\r\n    _proxy: proxy,\r\n    _context: context,\r\n    _subProxy: subProxy,\r\n    _stack: new Set(),\r\n    _descriptors: _descriptors(proxy, descriptorDefaults),\r\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\r\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\r\n  };\r\n  return new Proxy(cache, {\r\n    deleteProperty(target, prop) {\r\n      delete target[prop];\r\n      delete proxy[prop];\r\n      return true;\r\n    },\r\n    get(target, prop, receiver) {\r\n      return _cached(target, prop,\r\n        () => _resolveWithContext(target, prop, receiver));\r\n    },\r\n    getOwnPropertyDescriptor(target, prop) {\r\n      return target._descriptors.allKeys\r\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\r\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\r\n    },\r\n    getPrototypeOf() {\r\n      return Reflect.getPrototypeOf(proxy);\r\n    },\r\n    has(target, prop) {\r\n      return Reflect.has(proxy, prop);\r\n    },\r\n    ownKeys() {\r\n      return Reflect.ownKeys(proxy);\r\n    },\r\n    set(target, prop, value) {\r\n      proxy[prop] = value;\r\n      delete target[prop];\r\n      return true;\r\n    }\r\n  });\r\n}\r\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\r\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\r\n  return {\r\n    allKeys: _allKeys,\r\n    scriptable: _scriptable,\r\n    indexable: _indexable,\r\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\r\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\r\n  };\r\n}\r\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\r\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\r\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\r\nfunction _cached(target, prop, resolve) {\r\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\r\n    return target[prop];\r\n  }\r\n  const value = resolve();\r\n  target[prop] = value;\r\n  return value;\r\n}\r\nfunction _resolveWithContext(target, prop, receiver) {\r\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\r\n  let value = _proxy[prop];\r\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\r\n    value = _resolveScriptable(prop, value, target, receiver);\r\n  }\r\n  if (isArray(value) && value.length) {\r\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\r\n  }\r\n  if (needsSubResolver(prop, value)) {\r\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\r\n  }\r\n  return value;\r\n}\r\nfunction _resolveScriptable(prop, value, target, receiver) {\r\n  const {_proxy, _context, _subProxy, _stack} = target;\r\n  if (_stack.has(prop)) {\r\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\r\n  }\r\n  _stack.add(prop);\r\n  value = value(_context, _subProxy || receiver);\r\n  _stack.delete(prop);\r\n  if (needsSubResolver(prop, value)) {\r\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\r\n  }\r\n  return value;\r\n}\r\nfunction _resolveArray(prop, value, target, isIndexable) {\r\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\r\n  if (defined(_context.index) && isIndexable(prop)) {\r\n    value = value[_context.index % value.length];\r\n  } else if (isObject(value[0])) {\r\n    const arr = value;\r\n    const scopes = _proxy._scopes.filter(s => s !== arr);\r\n    value = [];\r\n    for (const item of arr) {\r\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\r\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\r\n    }\r\n  }\r\n  return value;\r\n}\r\nfunction resolveFallback(fallback, prop, value) {\r\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\r\n}\r\nconst getScope = (key, parent) => key === true ? parent\r\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\r\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\r\n  for (const parent of parentScopes) {\r\n    const scope = getScope(key, parent);\r\n    if (scope) {\r\n      set.add(scope);\r\n      const fallback = resolveFallback(scope._fallback, key, value);\r\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\r\n        return fallback;\r\n      }\r\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\r\n      return null;\r\n    }\r\n  }\r\n  return false;\r\n}\r\nfunction createSubResolver(parentScopes, resolver, prop, value) {\r\n  const rootScopes = resolver._rootScopes;\r\n  const fallback = resolveFallback(resolver._fallback, prop, value);\r\n  const allScopes = [...parentScopes, ...rootScopes];\r\n  const set = new Set();\r\n  set.add(value);\r\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\r\n  if (key === null) {\r\n    return false;\r\n  }\r\n  if (defined(fallback) && fallback !== prop) {\r\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\r\n    if (key === null) {\r\n      return false;\r\n    }\r\n  }\r\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\r\n    () => subGetTarget(resolver, prop, value));\r\n}\r\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\r\n  while (key) {\r\n    key = addScopes(set, allScopes, key, fallback, item);\r\n  }\r\n  return key;\r\n}\r\nfunction subGetTarget(resolver, prop, value) {\r\n  const parent = resolver._getTarget();\r\n  if (!(prop in parent)) {\r\n    parent[prop] = {};\r\n  }\r\n  const target = parent[prop];\r\n  if (isArray(target) && isObject(value)) {\r\n    return value;\r\n  }\r\n  return target;\r\n}\r\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\r\n  let value;\r\n  for (const prefix of prefixes) {\r\n    value = _resolve(readKey(prefix, prop), scopes);\r\n    if (defined(value)) {\r\n      return needsSubResolver(prop, value)\r\n        ? createSubResolver(scopes, proxy, prop, value)\r\n        : value;\r\n    }\r\n  }\r\n}\r\nfunction _resolve(key, scopes) {\r\n  for (const scope of scopes) {\r\n    if (!scope) {\r\n      continue;\r\n    }\r\n    const value = scope[key];\r\n    if (defined(value)) {\r\n      return value;\r\n    }\r\n  }\r\n}\r\nfunction getKeysFromAllScopes(target) {\r\n  let keys = target._keys;\r\n  if (!keys) {\r\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\r\n  }\r\n  return keys;\r\n}\r\nfunction resolveKeysFromAllScopes(scopes) {\r\n  const set = new Set();\r\n  for (const scope of scopes) {\r\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\r\n      set.add(key);\r\n    }\r\n  }\r\n  return Array.from(set);\r\n}\r\n\r\nconst EPSILON = Number.EPSILON || 1e-14;\r\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\r\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\r\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\r\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\r\n  const current = middlePoint;\r\n  const next = afterPoint.skip ? middlePoint : afterPoint;\r\n  const d01 = distanceBetweenPoints(current, previous);\r\n  const d12 = distanceBetweenPoints(next, current);\r\n  let s01 = d01 / (d01 + d12);\r\n  let s12 = d12 / (d01 + d12);\r\n  s01 = isNaN(s01) ? 0 : s01;\r\n  s12 = isNaN(s12) ? 0 : s12;\r\n  const fa = t * s01;\r\n  const fb = t * s12;\r\n  return {\r\n    previous: {\r\n      x: current.x - fa * (next.x - previous.x),\r\n      y: current.y - fa * (next.y - previous.y)\r\n    },\r\n    next: {\r\n      x: current.x + fb * (next.x - previous.x),\r\n      y: current.y + fb * (next.y - previous.y)\r\n    }\r\n  };\r\n}\r\nfunction monotoneAdjust(points, deltaK, mK) {\r\n  const pointsLen = points.length;\r\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\r\n  let pointAfter = getPoint(points, 0);\r\n  for (let i = 0; i < pointsLen - 1; ++i) {\r\n    pointCurrent = pointAfter;\r\n    pointAfter = getPoint(points, i + 1);\r\n    if (!pointCurrent || !pointAfter) {\r\n      continue;\r\n    }\r\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\r\n      mK[i] = mK[i + 1] = 0;\r\n      continue;\r\n    }\r\n    alphaK = mK[i] / deltaK[i];\r\n    betaK = mK[i + 1] / deltaK[i];\r\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\r\n    if (squaredMagnitude <= 9) {\r\n      continue;\r\n    }\r\n    tauK = 3 / Math.sqrt(squaredMagnitude);\r\n    mK[i] = alphaK * tauK * deltaK[i];\r\n    mK[i + 1] = betaK * tauK * deltaK[i];\r\n  }\r\n}\r\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\r\n  const valueAxis = getValueAxis(indexAxis);\r\n  const pointsLen = points.length;\r\n  let delta, pointBefore, pointCurrent;\r\n  let pointAfter = getPoint(points, 0);\r\n  for (let i = 0; i < pointsLen; ++i) {\r\n    pointBefore = pointCurrent;\r\n    pointCurrent = pointAfter;\r\n    pointAfter = getPoint(points, i + 1);\r\n    if (!pointCurrent) {\r\n      continue;\r\n    }\r\n    const iPixel = pointCurrent[indexAxis];\r\n    const vPixel = pointCurrent[valueAxis];\r\n    if (pointBefore) {\r\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\r\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\r\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\r\n    }\r\n    if (pointAfter) {\r\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\r\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\r\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\r\n    }\r\n  }\r\n}\r\nfunction splineCurveMonotone(points, indexAxis = 'x') {\r\n  const valueAxis = getValueAxis(indexAxis);\r\n  const pointsLen = points.length;\r\n  const deltaK = Array(pointsLen).fill(0);\r\n  const mK = Array(pointsLen);\r\n  let i, pointBefore, pointCurrent;\r\n  let pointAfter = getPoint(points, 0);\r\n  for (i = 0; i < pointsLen; ++i) {\r\n    pointBefore = pointCurrent;\r\n    pointCurrent = pointAfter;\r\n    pointAfter = getPoint(points, i + 1);\r\n    if (!pointCurrent) {\r\n      continue;\r\n    }\r\n    if (pointAfter) {\r\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\r\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\r\n    }\r\n    mK[i] = !pointBefore ? deltaK[i]\r\n      : !pointAfter ? deltaK[i - 1]\r\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\r\n      : (deltaK[i - 1] + deltaK[i]) / 2;\r\n  }\r\n  monotoneAdjust(points, deltaK, mK);\r\n  monotoneCompute(points, mK, indexAxis);\r\n}\r\nfunction capControlPoint(pt, min, max) {\r\n  return Math.max(Math.min(pt, max), min);\r\n}\r\nfunction capBezierPoints(points, area) {\r\n  let i, ilen, point, inArea, inAreaPrev;\r\n  let inAreaNext = _isPointInArea(points[0], area);\r\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n    inAreaPrev = inArea;\r\n    inArea = inAreaNext;\r\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\r\n    if (!inArea) {\r\n      continue;\r\n    }\r\n    point = points[i];\r\n    if (inAreaPrev) {\r\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\r\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\r\n    }\r\n    if (inAreaNext) {\r\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\r\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\r\n    }\r\n  }\r\n}\r\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\r\n  let i, ilen, point, controlPoints;\r\n  if (options.spanGaps) {\r\n    points = points.filter((pt) => !pt.skip);\r\n  }\r\n  if (options.cubicInterpolationMode === 'monotone') {\r\n    splineCurveMonotone(points, indexAxis);\r\n  } else {\r\n    let prev = loop ? points[points.length - 1] : points[0];\r\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n      point = points[i];\r\n      controlPoints = splineCurve(\r\n        prev,\r\n        point,\r\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\r\n        options.tension\r\n      );\r\n      point.cp1x = controlPoints.previous.x;\r\n      point.cp1y = controlPoints.previous.y;\r\n      point.cp2x = controlPoints.next.x;\r\n      point.cp2y = controlPoints.next.y;\r\n      prev = point;\r\n    }\r\n  }\r\n  if (options.capBezierPoints) {\r\n    capBezierPoints(points, area);\r\n  }\r\n}\r\n\r\nconst atEdge = (t) => t === 0 || t === 1;\r\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\r\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\r\nconst effects = {\r\n  linear: t => t,\r\n  easeInQuad: t => t * t,\r\n  easeOutQuad: t => -t * (t - 2),\r\n  easeInOutQuad: t => ((t /= 0.5) < 1)\r\n    ? 0.5 * t * t\r\n    : -0.5 * ((--t) * (t - 2) - 1),\r\n  easeInCubic: t => t * t * t,\r\n  easeOutCubic: t => (t -= 1) * t * t + 1,\r\n  easeInOutCubic: t => ((t /= 0.5) < 1)\r\n    ? 0.5 * t * t * t\r\n    : 0.5 * ((t -= 2) * t * t + 2),\r\n  easeInQuart: t => t * t * t * t,\r\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\r\n  easeInOutQuart: t => ((t /= 0.5) < 1)\r\n    ? 0.5 * t * t * t * t\r\n    : -0.5 * ((t -= 2) * t * t * t - 2),\r\n  easeInQuint: t => t * t * t * t * t,\r\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\r\n  easeInOutQuint: t => ((t /= 0.5) < 1)\r\n    ? 0.5 * t * t * t * t * t\r\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\r\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\r\n  easeOutSine: t => Math.sin(t * HALF_PI),\r\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\r\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\r\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\r\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\r\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\r\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\r\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\r\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\r\n  easeInOutCirc: t => ((t /= 0.5) < 1)\r\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\r\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\r\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\r\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\r\n  easeInOutElastic(t) {\r\n    const s = 0.1125;\r\n    const p = 0.45;\r\n    return atEdge(t) ? t :\r\n      t < 0.5\r\n        ? 0.5 * elasticIn(t * 2, s, p)\r\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\r\n  },\r\n  easeInBack(t) {\r\n    const s = 1.70158;\r\n    return t * t * ((s + 1) * t - s);\r\n  },\r\n  easeOutBack(t) {\r\n    const s = 1.70158;\r\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\r\n  },\r\n  easeInOutBack(t) {\r\n    let s = 1.70158;\r\n    if ((t /= 0.5) < 1) {\r\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\r\n    }\r\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\r\n  },\r\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\r\n  easeOutBounce(t) {\r\n    const m = 7.5625;\r\n    const d = 2.75;\r\n    if (t < (1 / d)) {\r\n      return m * t * t;\r\n    }\r\n    if (t < (2 / d)) {\r\n      return m * (t -= (1.5 / d)) * t + 0.75;\r\n    }\r\n    if (t < (2.5 / d)) {\r\n      return m * (t -= (2.25 / d)) * t + 0.9375;\r\n    }\r\n    return m * (t -= (2.625 / d)) * t + 0.984375;\r\n  },\r\n  easeInOutBounce: t => (t < 0.5)\r\n    ? effects.easeInBounce(t * 2) * 0.5\r\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\r\n};\r\n\r\nfunction _pointInLine(p1, p2, t, mode) {\r\n  return {\r\n    x: p1.x + t * (p2.x - p1.x),\r\n    y: p1.y + t * (p2.y - p1.y)\r\n  };\r\n}\r\nfunction _steppedInterpolation(p1, p2, t, mode) {\r\n  return {\r\n    x: p1.x + t * (p2.x - p1.x),\r\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\r\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\r\n    : t > 0 ? p2.y : p1.y\r\n  };\r\n}\r\nfunction _bezierInterpolation(p1, p2, t, mode) {\r\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\r\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\r\n  const a = _pointInLine(p1, cp1, t);\r\n  const b = _pointInLine(cp1, cp2, t);\r\n  const c = _pointInLine(cp2, p2, t);\r\n  const d = _pointInLine(a, b, t);\r\n  const e = _pointInLine(b, c, t);\r\n  return _pointInLine(d, e, t);\r\n}\r\n\r\nconst intlCache = new Map();\r\nfunction getNumberFormat(locale, options) {\r\n  options = options || {};\r\n  const cacheKey = locale + JSON.stringify(options);\r\n  let formatter = intlCache.get(cacheKey);\r\n  if (!formatter) {\r\n    formatter = new Intl.NumberFormat(locale, options);\r\n    intlCache.set(cacheKey, formatter);\r\n  }\r\n  return formatter;\r\n}\r\nfunction formatNumber(num, locale, options) {\r\n  return getNumberFormat(locale, options).format(num);\r\n}\r\n\r\nconst getRightToLeftAdapter = function(rectX, width) {\r\n  return {\r\n    x(x) {\r\n      return rectX + rectX + width - x;\r\n    },\r\n    setWidth(w) {\r\n      width = w;\r\n    },\r\n    textAlign(align) {\r\n      if (align === 'center') {\r\n        return align;\r\n      }\r\n      return align === 'right' ? 'left' : 'right';\r\n    },\r\n    xPlus(x, value) {\r\n      return x - value;\r\n    },\r\n    leftForLtr(x, itemWidth) {\r\n      return x - itemWidth;\r\n    },\r\n  };\r\n};\r\nconst getLeftToRightAdapter = function() {\r\n  return {\r\n    x(x) {\r\n      return x;\r\n    },\r\n    setWidth(w) {\r\n    },\r\n    textAlign(align) {\r\n      return align;\r\n    },\r\n    xPlus(x, value) {\r\n      return x + value;\r\n    },\r\n    leftForLtr(x, _itemWidth) {\r\n      return x;\r\n    },\r\n  };\r\n};\r\nfunction getRtlAdapter(rtl, rectX, width) {\r\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\r\n}\r\nfunction overrideTextDirection(ctx, direction) {\r\n  let style, original;\r\n  if (direction === 'ltr' || direction === 'rtl') {\r\n    style = ctx.canvas.style;\r\n    original = [\r\n      style.getPropertyValue('direction'),\r\n      style.getPropertyPriority('direction'),\r\n    ];\r\n    style.setProperty('direction', direction, 'important');\r\n    ctx.prevTextDirection = original;\r\n  }\r\n}\r\nfunction restoreTextDirection(ctx, original) {\r\n  if (original !== undefined) {\r\n    delete ctx.prevTextDirection;\r\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\r\n  }\r\n}\r\n\r\nfunction propertyFn(property) {\r\n  if (property === 'angle') {\r\n    return {\r\n      between: _angleBetween,\r\n      compare: _angleDiff,\r\n      normalize: _normalizeAngle,\r\n    };\r\n  }\r\n  return {\r\n    between: _isBetween,\r\n    compare: (a, b) => a - b,\r\n    normalize: x => x\r\n  };\r\n}\r\nfunction normalizeSegment({start, end, count, loop, style}) {\r\n  return {\r\n    start: start % count,\r\n    end: end % count,\r\n    loop: loop && (end - start + 1) % count === 0,\r\n    style\r\n  };\r\n}\r\nfunction getSegment(segment, points, bounds) {\r\n  const {property, start: startBound, end: endBound} = bounds;\r\n  const {between, normalize} = propertyFn(property);\r\n  const count = points.length;\r\n  let {start, end, loop} = segment;\r\n  let i, ilen;\r\n  if (loop) {\r\n    start += count;\r\n    end += count;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\r\n        break;\r\n      }\r\n      start--;\r\n      end--;\r\n    }\r\n    start %= count;\r\n    end %= count;\r\n  }\r\n  if (end < start) {\r\n    end += count;\r\n  }\r\n  return {start, end, loop, style: segment.style};\r\n}\r\nfunction _boundSegment(segment, points, bounds) {\r\n  if (!bounds) {\r\n    return [segment];\r\n  }\r\n  const {property, start: startBound, end: endBound} = bounds;\r\n  const count = points.length;\r\n  const {compare, between, normalize} = propertyFn(property);\r\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\r\n  const result = [];\r\n  let inside = false;\r\n  let subStart = null;\r\n  let value, point, prevValue;\r\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\r\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\r\n  const shouldStart = () => inside || startIsBefore();\r\n  const shouldStop = () => !inside || endIsBefore();\r\n  for (let i = start, prev = start; i <= end; ++i) {\r\n    point = points[i % count];\r\n    if (point.skip) {\r\n      continue;\r\n    }\r\n    value = normalize(point[property]);\r\n    if (value === prevValue) {\r\n      continue;\r\n    }\r\n    inside = between(value, startBound, endBound);\r\n    if (subStart === null && shouldStart()) {\r\n      subStart = compare(value, startBound) === 0 ? i : prev;\r\n    }\r\n    if (subStart !== null && shouldStop()) {\r\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\r\n      subStart = null;\r\n    }\r\n    prev = i;\r\n    prevValue = value;\r\n  }\r\n  if (subStart !== null) {\r\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\r\n  }\r\n  return result;\r\n}\r\nfunction _boundSegments(line, bounds) {\r\n  const result = [];\r\n  const segments = line.segments;\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const sub = _boundSegment(segments[i], line.points, bounds);\r\n    if (sub.length) {\r\n      result.push(...sub);\r\n    }\r\n  }\r\n  return result;\r\n}\r\nfunction findStartAndEnd(points, count, loop, spanGaps) {\r\n  let start = 0;\r\n  let end = count - 1;\r\n  if (loop && !spanGaps) {\r\n    while (start < count && !points[start].skip) {\r\n      start++;\r\n    }\r\n  }\r\n  while (start < count && points[start].skip) {\r\n    start++;\r\n  }\r\n  start %= count;\r\n  if (loop) {\r\n    end += start;\r\n  }\r\n  while (end > start && points[end % count].skip) {\r\n    end--;\r\n  }\r\n  end %= count;\r\n  return {start, end};\r\n}\r\nfunction solidSegments(points, start, max, loop) {\r\n  const count = points.length;\r\n  const result = [];\r\n  let last = start;\r\n  let prev = points[start];\r\n  let end;\r\n  for (end = start + 1; end <= max; ++end) {\r\n    const cur = points[end % count];\r\n    if (cur.skip || cur.stop) {\r\n      if (!prev.skip) {\r\n        loop = false;\r\n        result.push({start: start % count, end: (end - 1) % count, loop});\r\n        start = last = cur.stop ? end : null;\r\n      }\r\n    } else {\r\n      last = end;\r\n      if (prev.skip) {\r\n        start = end;\r\n      }\r\n    }\r\n    prev = cur;\r\n  }\r\n  if (last !== null) {\r\n    result.push({start: start % count, end: last % count, loop});\r\n  }\r\n  return result;\r\n}\r\nfunction _computeSegments(line, segmentOptions) {\r\n  const points = line.points;\r\n  const spanGaps = line.options.spanGaps;\r\n  const count = points.length;\r\n  if (!count) {\r\n    return [];\r\n  }\r\n  const loop = !!line._loop;\r\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\r\n  if (spanGaps === true) {\r\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\r\n  }\r\n  const max = end < start ? end + count : end;\r\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\r\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\r\n}\r\nfunction splitByStyles(line, segments, points, segmentOptions) {\r\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\r\n    return segments;\r\n  }\r\n  return doSplitByStyles(line, segments, points, segmentOptions);\r\n}\r\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\r\n  const chartContext = line._chart.getContext();\r\n  const baseStyle = readStyle(line.options);\r\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\r\n  const count = points.length;\r\n  const result = [];\r\n  let prevStyle = baseStyle;\r\n  let start = segments[0].start;\r\n  let i = start;\r\n  function addStyle(s, e, l, st) {\r\n    const dir = spanGaps ? -1 : 1;\r\n    if (s === e) {\r\n      return;\r\n    }\r\n    s += count;\r\n    while (points[s % count].skip) {\r\n      s -= dir;\r\n    }\r\n    while (points[e % count].skip) {\r\n      e += dir;\r\n    }\r\n    if (s % count !== e % count) {\r\n      result.push({start: s % count, end: e % count, loop: l, style: st});\r\n      prevStyle = st;\r\n      start = e % count;\r\n    }\r\n  }\r\n  for (const segment of segments) {\r\n    start = spanGaps ? start : segment.start;\r\n    let prev = points[start % count];\r\n    let style;\r\n    for (i = start + 1; i <= segment.end; i++) {\r\n      const pt = points[i % count];\r\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\r\n        type: 'segment',\r\n        p0: prev,\r\n        p1: pt,\r\n        p0DataIndex: (i - 1) % count,\r\n        p1DataIndex: i % count,\r\n        datasetIndex\r\n      })));\r\n      if (styleChanged(style, prevStyle)) {\r\n        addStyle(start, i - 1, segment.loop, prevStyle);\r\n      }\r\n      prev = pt;\r\n      prevStyle = style;\r\n    }\r\n    if (start < i - 1) {\r\n      addStyle(start, i - 1, segment.loop, prevStyle);\r\n    }\r\n  }\r\n  return result;\r\n}\r\nfunction readStyle(options) {\r\n  return {\r\n    backgroundColor: options.backgroundColor,\r\n    borderCapStyle: options.borderCapStyle,\r\n    borderDash: options.borderDash,\r\n    borderDashOffset: options.borderDashOffset,\r\n    borderJoinStyle: options.borderJoinStyle,\r\n    borderWidth: options.borderWidth,\r\n    borderColor: options.borderColor\r\n  };\r\n}\r\nfunction styleChanged(style, prevStyle) {\r\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\r\n}\r\n\r\nvar helpers = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\neasingEffects: effects,\r\ncolor: color,\r\ngetHoverColor: getHoverColor,\r\nnoop: noop,\r\nuid: uid,\r\nisNullOrUndef: isNullOrUndef,\r\nisArray: isArray,\r\nisObject: isObject,\r\nisFinite: isNumberFinite,\r\nfiniteOrDefault: finiteOrDefault,\r\nvalueOrDefault: valueOrDefault,\r\ntoPercentage: toPercentage,\r\ntoDimension: toDimension,\r\ncallback: callback,\r\neach: each,\r\n_elementsEqual: _elementsEqual,\r\nclone: clone,\r\n_merger: _merger,\r\nmerge: merge,\r\nmergeIf: mergeIf,\r\n_mergerIf: _mergerIf,\r\n_deprecated: _deprecated,\r\nresolveObjectKey: resolveObjectKey,\r\n_capitalize: _capitalize,\r\ndefined: defined,\r\nisFunction: isFunction,\r\nsetsEqual: setsEqual,\r\n_isClickEvent: _isClickEvent,\r\ntoFontString: toFontString,\r\n_measureText: _measureText,\r\n_longestText: _longestText,\r\n_alignPixel: _alignPixel,\r\nclearCanvas: clearCanvas,\r\ndrawPoint: drawPoint,\r\n_isPointInArea: _isPointInArea,\r\nclipArea: clipArea,\r\nunclipArea: unclipArea,\r\n_steppedLineTo: _steppedLineTo,\r\n_bezierCurveTo: _bezierCurveTo,\r\nrenderText: renderText,\r\naddRoundedRectPath: addRoundedRectPath,\r\n_lookup: _lookup,\r\n_lookupByKey: _lookupByKey,\r\n_rlookupByKey: _rlookupByKey,\r\n_filterBetween: _filterBetween,\r\nlistenArrayEvents: listenArrayEvents,\r\nunlistenArrayEvents: unlistenArrayEvents,\r\n_arrayUnique: _arrayUnique,\r\n_createResolver: _createResolver,\r\n_attachContext: _attachContext,\r\n_descriptors: _descriptors,\r\nsplineCurve: splineCurve,\r\nsplineCurveMonotone: splineCurveMonotone,\r\n_updateBezierControlPoints: _updateBezierControlPoints,\r\n_isDomSupported: _isDomSupported,\r\n_getParentNode: _getParentNode,\r\ngetStyle: getStyle,\r\ngetRelativePosition: getRelativePosition$1,\r\ngetMaximumSize: getMaximumSize,\r\nretinaScale: retinaScale,\r\nsupportsEventListenerOptions: supportsEventListenerOptions,\r\nreadUsedSize: readUsedSize,\r\nfontString: fontString,\r\nrequestAnimFrame: requestAnimFrame,\r\nthrottled: throttled,\r\ndebounce: debounce,\r\n_toLeftRightCenter: _toLeftRightCenter,\r\n_alignStartEnd: _alignStartEnd,\r\n_textX: _textX,\r\n_pointInLine: _pointInLine,\r\n_steppedInterpolation: _steppedInterpolation,\r\n_bezierInterpolation: _bezierInterpolation,\r\nformatNumber: formatNumber,\r\ntoLineHeight: toLineHeight,\r\n_readValueToProps: _readValueToProps,\r\ntoTRBL: toTRBL,\r\ntoTRBLCorners: toTRBLCorners,\r\ntoPadding: toPadding,\r\ntoFont: toFont,\r\nresolve: resolve,\r\n_addGrace: _addGrace,\r\ncreateContext: createContext,\r\nPI: PI,\r\nTAU: TAU,\r\nPITAU: PITAU,\r\nINFINITY: INFINITY,\r\nRAD_PER_DEG: RAD_PER_DEG,\r\nHALF_PI: HALF_PI,\r\nQUARTER_PI: QUARTER_PI,\r\nTWO_THIRDS_PI: TWO_THIRDS_PI,\r\nlog10: log10,\r\nsign: sign,\r\nniceNum: niceNum,\r\n_factorize: _factorize,\r\nisNumber: isNumber,\r\nalmostEquals: almostEquals,\r\nalmostWhole: almostWhole,\r\n_setMinAndMaxByKey: _setMinAndMaxByKey,\r\ntoRadians: toRadians,\r\ntoDegrees: toDegrees,\r\n_decimalPlaces: _decimalPlaces,\r\ngetAngleFromPoint: getAngleFromPoint,\r\ndistanceBetweenPoints: distanceBetweenPoints,\r\n_angleDiff: _angleDiff,\r\n_normalizeAngle: _normalizeAngle,\r\n_angleBetween: _angleBetween,\r\n_limitValue: _limitValue,\r\n_int16Range: _int16Range,\r\n_isBetween: _isBetween,\r\ngetRtlAdapter: getRtlAdapter,\r\noverrideTextDirection: overrideTextDirection,\r\nrestoreTextDirection: restoreTextDirection,\r\n_boundSegment: _boundSegment,\r\n_boundSegments: _boundSegments,\r\n_computeSegments: _computeSegments\r\n});\r\n\r\nclass BasePlatform {\r\n  acquireContext(canvas, aspectRatio) {}\r\n  releaseContext(context) {\r\n    return false;\r\n  }\r\n  addEventListener(chart, type, listener) {}\r\n  removeEventListener(chart, type, listener) {}\r\n  getDevicePixelRatio() {\r\n    return 1;\r\n  }\r\n  getMaximumSize(element, width, height, aspectRatio) {\r\n    width = Math.max(0, width || element.width);\r\n    height = height || element.height;\r\n    return {\r\n      width,\r\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\r\n    };\r\n  }\r\n  isAttached(canvas) {\r\n    return true;\r\n  }\r\n  updateConfig(config) {\r\n  }\r\n}\r\n\r\nclass BasicPlatform extends BasePlatform {\r\n  acquireContext(item) {\r\n    return item && item.getContext && item.getContext('2d') || null;\r\n  }\r\n  updateConfig(config) {\r\n    config.options.animation = false;\r\n  }\r\n}\r\n\r\nconst EXPANDO_KEY = '$chartjs';\r\nconst EVENT_TYPES = {\r\n  touchstart: 'mousedown',\r\n  touchmove: 'mousemove',\r\n  touchend: 'mouseup',\r\n  pointerenter: 'mouseenter',\r\n  pointerdown: 'mousedown',\r\n  pointermove: 'mousemove',\r\n  pointerup: 'mouseup',\r\n  pointerleave: 'mouseout',\r\n  pointerout: 'mouseout'\r\n};\r\nconst isNullOrEmpty = value => value === null || value === '';\r\nfunction initCanvas(canvas, aspectRatio) {\r\n  const style = canvas.style;\r\n  const renderHeight = canvas.getAttribute('height');\r\n  const renderWidth = canvas.getAttribute('width');\r\n  canvas[EXPANDO_KEY] = {\r\n    initial: {\r\n      height: renderHeight,\r\n      width: renderWidth,\r\n      style: {\r\n        display: style.display,\r\n        height: style.height,\r\n        width: style.width\r\n      }\r\n    }\r\n  };\r\n  style.display = style.display || 'block';\r\n  style.boxSizing = style.boxSizing || 'border-box';\r\n  if (isNullOrEmpty(renderWidth)) {\r\n    const displayWidth = readUsedSize(canvas, 'width');\r\n    if (displayWidth !== undefined) {\r\n      canvas.width = displayWidth;\r\n    }\r\n  }\r\n  if (isNullOrEmpty(renderHeight)) {\r\n    if (canvas.style.height === '') {\r\n      canvas.height = canvas.width / (aspectRatio || 2);\r\n    } else {\r\n      const displayHeight = readUsedSize(canvas, 'height');\r\n      if (displayHeight !== undefined) {\r\n        canvas.height = displayHeight;\r\n      }\r\n    }\r\n  }\r\n  return canvas;\r\n}\r\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\r\nfunction addListener(node, type, listener) {\r\n  node.addEventListener(type, listener, eventListenerOptions);\r\n}\r\nfunction removeListener(chart, type, listener) {\r\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\r\n}\r\nfunction fromNativeEvent(event, chart) {\r\n  const type = EVENT_TYPES[event.type] || event.type;\r\n  const {x, y} = getRelativePosition$1(event, chart);\r\n  return {\r\n    type,\r\n    chart,\r\n    native: event,\r\n    x: x !== undefined ? x : null,\r\n    y: y !== undefined ? y : null,\r\n  };\r\n}\r\nfunction nodeListContains(nodeList, canvas) {\r\n  for (const node of nodeList) {\r\n    if (node === canvas || node.contains(canvas)) {\r\n      return true;\r\n    }\r\n  }\r\n}\r\nfunction createAttachObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const observer = new MutationObserver(entries => {\r\n    let trigger = false;\r\n    for (const entry of entries) {\r\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\r\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\r\n    }\r\n    if (trigger) {\r\n      listener();\r\n    }\r\n  });\r\n  observer.observe(document, {childList: true, subtree: true});\r\n  return observer;\r\n}\r\nfunction createDetachObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const observer = new MutationObserver(entries => {\r\n    let trigger = false;\r\n    for (const entry of entries) {\r\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\r\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\r\n    }\r\n    if (trigger) {\r\n      listener();\r\n    }\r\n  });\r\n  observer.observe(document, {childList: true, subtree: true});\r\n  return observer;\r\n}\r\nconst drpListeningCharts = new Map();\r\nlet oldDevicePixelRatio = 0;\r\nfunction onWindowResize() {\r\n  const dpr = window.devicePixelRatio;\r\n  if (dpr === oldDevicePixelRatio) {\r\n    return;\r\n  }\r\n  oldDevicePixelRatio = dpr;\r\n  drpListeningCharts.forEach((resize, chart) => {\r\n    if (chart.currentDevicePixelRatio !== dpr) {\r\n      resize();\r\n    }\r\n  });\r\n}\r\nfunction listenDevicePixelRatioChanges(chart, resize) {\r\n  if (!drpListeningCharts.size) {\r\n    window.addEventListener('resize', onWindowResize);\r\n  }\r\n  drpListeningCharts.set(chart, resize);\r\n}\r\nfunction unlistenDevicePixelRatioChanges(chart) {\r\n  drpListeningCharts.delete(chart);\r\n  if (!drpListeningCharts.size) {\r\n    window.removeEventListener('resize', onWindowResize);\r\n  }\r\n}\r\nfunction createResizeObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const container = canvas && _getParentNode(canvas);\r\n  if (!container) {\r\n    return;\r\n  }\r\n  const resize = throttled((width, height) => {\r\n    const w = container.clientWidth;\r\n    listener(width, height);\r\n    if (w < container.clientWidth) {\r\n      listener();\r\n    }\r\n  }, window);\r\n  const observer = new ResizeObserver(entries => {\r\n    const entry = entries[0];\r\n    const width = entry.contentRect.width;\r\n    const height = entry.contentRect.height;\r\n    if (width === 0 && height === 0) {\r\n      return;\r\n    }\r\n    resize(width, height);\r\n  });\r\n  observer.observe(container);\r\n  listenDevicePixelRatioChanges(chart, resize);\r\n  return observer;\r\n}\r\nfunction releaseObserver(chart, type, observer) {\r\n  if (observer) {\r\n    observer.disconnect();\r\n  }\r\n  if (type === 'resize') {\r\n    unlistenDevicePixelRatioChanges(chart);\r\n  }\r\n}\r\nfunction createProxyAndListen(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const proxy = throttled((event) => {\r\n    if (chart.ctx !== null) {\r\n      listener(fromNativeEvent(event, chart));\r\n    }\r\n  }, chart, (args) => {\r\n    const event = args[0];\r\n    return [event, event.offsetX, event.offsetY];\r\n  });\r\n  addListener(canvas, type, proxy);\r\n  return proxy;\r\n}\r\nclass DomPlatform extends BasePlatform {\r\n  acquireContext(canvas, aspectRatio) {\r\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\r\n    if (context && context.canvas === canvas) {\r\n      initCanvas(canvas, aspectRatio);\r\n      return context;\r\n    }\r\n    return null;\r\n  }\r\n  releaseContext(context) {\r\n    const canvas = context.canvas;\r\n    if (!canvas[EXPANDO_KEY]) {\r\n      return false;\r\n    }\r\n    const initial = canvas[EXPANDO_KEY].initial;\r\n    ['height', 'width'].forEach((prop) => {\r\n      const value = initial[prop];\r\n      if (isNullOrUndef(value)) {\r\n        canvas.removeAttribute(prop);\r\n      } else {\r\n        canvas.setAttribute(prop, value);\r\n      }\r\n    });\r\n    const style = initial.style || {};\r\n    Object.keys(style).forEach((key) => {\r\n      canvas.style[key] = style[key];\r\n    });\r\n    canvas.width = canvas.width;\r\n    delete canvas[EXPANDO_KEY];\r\n    return true;\r\n  }\r\n  addEventListener(chart, type, listener) {\r\n    this.removeEventListener(chart, type);\r\n    const proxies = chart.$proxies || (chart.$proxies = {});\r\n    const handlers = {\r\n      attach: createAttachObserver,\r\n      detach: createDetachObserver,\r\n      resize: createResizeObserver\r\n    };\r\n    const handler = handlers[type] || createProxyAndListen;\r\n    proxies[type] = handler(chart, type, listener);\r\n  }\r\n  removeEventListener(chart, type) {\r\n    const proxies = chart.$proxies || (chart.$proxies = {});\r\n    const proxy = proxies[type];\r\n    if (!proxy) {\r\n      return;\r\n    }\r\n    const handlers = {\r\n      attach: releaseObserver,\r\n      detach: releaseObserver,\r\n      resize: releaseObserver\r\n    };\r\n    const handler = handlers[type] || removeListener;\r\n    handler(chart, type, proxy);\r\n    proxies[type] = undefined;\r\n  }\r\n  getDevicePixelRatio() {\r\n    return window.devicePixelRatio;\r\n  }\r\n  getMaximumSize(canvas, width, height, aspectRatio) {\r\n    return getMaximumSize(canvas, width, height, aspectRatio);\r\n  }\r\n  isAttached(canvas) {\r\n    const container = _getParentNode(canvas);\r\n    return !!(container && container.isConnected);\r\n  }\r\n}\r\n\r\nfunction _detectPlatform(canvas) {\r\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\r\n    return BasicPlatform;\r\n  }\r\n  return DomPlatform;\r\n}\r\n\r\nvar platforms = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\n_detectPlatform: _detectPlatform,\r\nBasePlatform: BasePlatform,\r\nBasicPlatform: BasicPlatform,\r\nDomPlatform: DomPlatform\r\n});\r\n\r\nconst transparent = 'transparent';\r\nconst interpolators = {\r\n  boolean(from, to, factor) {\r\n    return factor > 0.5 ? to : from;\r\n  },\r\n  color(from, to, factor) {\r\n    const c0 = color(from || transparent);\r\n    const c1 = c0.valid && color(to || transparent);\r\n    return c1 && c1.valid\r\n      ? c1.mix(c0, factor).hexString()\r\n      : to;\r\n  },\r\n  number(from, to, factor) {\r\n    return from + (to - from) * factor;\r\n  }\r\n};\r\nclass Animation {\r\n  constructor(cfg, target, prop, to) {\r\n    const currentValue = target[prop];\r\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\r\n    const from = resolve([cfg.from, currentValue, to]);\r\n    this._active = true;\r\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\r\n    this._easing = effects[cfg.easing] || effects.linear;\r\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\r\n    this._duration = this._total = Math.floor(cfg.duration);\r\n    this._loop = !!cfg.loop;\r\n    this._target = target;\r\n    this._prop = prop;\r\n    this._from = from;\r\n    this._to = to;\r\n    this._promises = undefined;\r\n  }\r\n  active() {\r\n    return this._active;\r\n  }\r\n  update(cfg, to, date) {\r\n    if (this._active) {\r\n      this._notify(false);\r\n      const currentValue = this._target[this._prop];\r\n      const elapsed = date - this._start;\r\n      const remain = this._duration - elapsed;\r\n      this._start = date;\r\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\r\n      this._total += elapsed;\r\n      this._loop = !!cfg.loop;\r\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\r\n      this._from = resolve([cfg.from, currentValue, to]);\r\n    }\r\n  }\r\n  cancel() {\r\n    if (this._active) {\r\n      this.tick(Date.now());\r\n      this._active = false;\r\n      this._notify(false);\r\n    }\r\n  }\r\n  tick(date) {\r\n    const elapsed = date - this._start;\r\n    const duration = this._duration;\r\n    const prop = this._prop;\r\n    const from = this._from;\r\n    const loop = this._loop;\r\n    const to = this._to;\r\n    let factor;\r\n    this._active = from !== to && (loop || (elapsed < duration));\r\n    if (!this._active) {\r\n      this._target[prop] = to;\r\n      this._notify(true);\r\n      return;\r\n    }\r\n    if (elapsed < 0) {\r\n      this._target[prop] = from;\r\n      return;\r\n    }\r\n    factor = (elapsed / duration) % 2;\r\n    factor = loop && factor > 1 ? 2 - factor : factor;\r\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\r\n    this._target[prop] = this._fn(from, to, factor);\r\n  }\r\n  wait() {\r\n    const promises = this._promises || (this._promises = []);\r\n    return new Promise((res, rej) => {\r\n      promises.push({res, rej});\r\n    });\r\n  }\r\n  _notify(resolved) {\r\n    const method = resolved ? 'res' : 'rej';\r\n    const promises = this._promises || [];\r\n    for (let i = 0; i < promises.length; i++) {\r\n      promises[i][method]();\r\n    }\r\n  }\r\n}\r\n\r\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\r\nconst colors = ['color', 'borderColor', 'backgroundColor'];\r\ndefaults.set('animation', {\r\n  delay: undefined,\r\n  duration: 1000,\r\n  easing: 'easeOutQuart',\r\n  fn: undefined,\r\n  from: undefined,\r\n  loop: undefined,\r\n  to: undefined,\r\n  type: undefined,\r\n});\r\nconst animationOptions = Object.keys(defaults.animation);\r\ndefaults.describe('animation', {\r\n  _fallback: false,\r\n  _indexable: false,\r\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\r\n});\r\ndefaults.set('animations', {\r\n  colors: {\r\n    type: 'color',\r\n    properties: colors\r\n  },\r\n  numbers: {\r\n    type: 'number',\r\n    properties: numbers\r\n  },\r\n});\r\ndefaults.describe('animations', {\r\n  _fallback: 'animation',\r\n});\r\ndefaults.set('transitions', {\r\n  active: {\r\n    animation: {\r\n      duration: 400\r\n    }\r\n  },\r\n  resize: {\r\n    animation: {\r\n      duration: 0\r\n    }\r\n  },\r\n  show: {\r\n    animations: {\r\n      colors: {\r\n        from: 'transparent'\r\n      },\r\n      visible: {\r\n        type: 'boolean',\r\n        duration: 0\r\n      },\r\n    }\r\n  },\r\n  hide: {\r\n    animations: {\r\n      colors: {\r\n        to: 'transparent'\r\n      },\r\n      visible: {\r\n        type: 'boolean',\r\n        easing: 'linear',\r\n        fn: v => v | 0\r\n      },\r\n    }\r\n  }\r\n});\r\nclass Animations {\r\n  constructor(chart, config) {\r\n    this._chart = chart;\r\n    this._properties = new Map();\r\n    this.configure(config);\r\n  }\r\n  configure(config) {\r\n    if (!isObject(config)) {\r\n      return;\r\n    }\r\n    const animatedProps = this._properties;\r\n    Object.getOwnPropertyNames(config).forEach(key => {\r\n      const cfg = config[key];\r\n      if (!isObject(cfg)) {\r\n        return;\r\n      }\r\n      const resolved = {};\r\n      for (const option of animationOptions) {\r\n        resolved[option] = cfg[option];\r\n      }\r\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\r\n        if (prop === key || !animatedProps.has(prop)) {\r\n          animatedProps.set(prop, resolved);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  _animateOptions(target, values) {\r\n    const newOptions = values.options;\r\n    const options = resolveTargetOptions(target, newOptions);\r\n    if (!options) {\r\n      return [];\r\n    }\r\n    const animations = this._createAnimations(options, newOptions);\r\n    if (newOptions.$shared) {\r\n      awaitAll(target.options.$animations, newOptions).then(() => {\r\n        target.options = newOptions;\r\n      }, () => {\r\n      });\r\n    }\r\n    return animations;\r\n  }\r\n  _createAnimations(target, values) {\r\n    const animatedProps = this._properties;\r\n    const animations = [];\r\n    const running = target.$animations || (target.$animations = {});\r\n    const props = Object.keys(values);\r\n    const date = Date.now();\r\n    let i;\r\n    for (i = props.length - 1; i >= 0; --i) {\r\n      const prop = props[i];\r\n      if (prop.charAt(0) === '$') {\r\n        continue;\r\n      }\r\n      if (prop === 'options') {\r\n        animations.push(...this._animateOptions(target, values));\r\n        continue;\r\n      }\r\n      const value = values[prop];\r\n      let animation = running[prop];\r\n      const cfg = animatedProps.get(prop);\r\n      if (animation) {\r\n        if (cfg && animation.active()) {\r\n          animation.update(cfg, value, date);\r\n          continue;\r\n        } else {\r\n          animation.cancel();\r\n        }\r\n      }\r\n      if (!cfg || !cfg.duration) {\r\n        target[prop] = value;\r\n        continue;\r\n      }\r\n      running[prop] = animation = new Animation(cfg, target, prop, value);\r\n      animations.push(animation);\r\n    }\r\n    return animations;\r\n  }\r\n  update(target, values) {\r\n    if (this._properties.size === 0) {\r\n      Object.assign(target, values);\r\n      return;\r\n    }\r\n    const animations = this._createAnimations(target, values);\r\n    if (animations.length) {\r\n      animator.add(this._chart, animations);\r\n      return true;\r\n    }\r\n  }\r\n}\r\nfunction awaitAll(animations, properties) {\r\n  const running = [];\r\n  const keys = Object.keys(properties);\r\n  for (let i = 0; i < keys.length; i++) {\r\n    const anim = animations[keys[i]];\r\n    if (anim && anim.active()) {\r\n      running.push(anim.wait());\r\n    }\r\n  }\r\n  return Promise.all(running);\r\n}\r\nfunction resolveTargetOptions(target, newOptions) {\r\n  if (!newOptions) {\r\n    return;\r\n  }\r\n  let options = target.options;\r\n  if (!options) {\r\n    target.options = newOptions;\r\n    return;\r\n  }\r\n  if (options.$shared) {\r\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\r\n  }\r\n  return options;\r\n}\r\n\r\nfunction scaleClip(scale, allowedOverflow) {\r\n  const opts = scale && scale.options || {};\r\n  const reverse = opts.reverse;\r\n  const min = opts.min === undefined ? allowedOverflow : 0;\r\n  const max = opts.max === undefined ? allowedOverflow : 0;\r\n  return {\r\n    start: reverse ? max : min,\r\n    end: reverse ? min : max\r\n  };\r\n}\r\nfunction defaultClip(xScale, yScale, allowedOverflow) {\r\n  if (allowedOverflow === false) {\r\n    return false;\r\n  }\r\n  const x = scaleClip(xScale, allowedOverflow);\r\n  const y = scaleClip(yScale, allowedOverflow);\r\n  return {\r\n    top: y.end,\r\n    right: x.end,\r\n    bottom: y.start,\r\n    left: x.start\r\n  };\r\n}\r\nfunction toClip(value) {\r\n  let t, r, b, l;\r\n  if (isObject(value)) {\r\n    t = value.top;\r\n    r = value.right;\r\n    b = value.bottom;\r\n    l = value.left;\r\n  } else {\r\n    t = r = b = l = value;\r\n  }\r\n  return {\r\n    top: t,\r\n    right: r,\r\n    bottom: b,\r\n    left: l,\r\n    disabled: value === false\r\n  };\r\n}\r\nfunction getSortedDatasetIndices(chart, filterVisible) {\r\n  const keys = [];\r\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\r\n  let i, ilen;\r\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    keys.push(metasets[i].index);\r\n  }\r\n  return keys;\r\n}\r\nfunction applyStack(stack, value, dsIndex, options = {}) {\r\n  const keys = stack.keys;\r\n  const singleMode = options.mode === 'single';\r\n  let i, ilen, datasetIndex, otherValue;\r\n  if (value === null) {\r\n    return;\r\n  }\r\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n    datasetIndex = +keys[i];\r\n    if (datasetIndex === dsIndex) {\r\n      if (options.all) {\r\n        continue;\r\n      }\r\n      break;\r\n    }\r\n    otherValue = stack.values[datasetIndex];\r\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\r\n      value += otherValue;\r\n    }\r\n  }\r\n  return value;\r\n}\r\nfunction convertObjectDataToArray(data) {\r\n  const keys = Object.keys(data);\r\n  const adata = new Array(keys.length);\r\n  let i, ilen, key;\r\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n    key = keys[i];\r\n    adata[i] = {\r\n      x: key,\r\n      y: data[key]\r\n    };\r\n  }\r\n  return adata;\r\n}\r\nfunction isStacked(scale, meta) {\r\n  const stacked = scale && scale.options.stacked;\r\n  return stacked || (stacked === undefined && meta.stack !== undefined);\r\n}\r\nfunction getStackKey(indexScale, valueScale, meta) {\r\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\r\n}\r\nfunction getUserBounds(scale) {\r\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\r\n  return {\r\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\r\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\r\n  };\r\n}\r\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\r\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\r\n  return subStack[indexValue] || (subStack[indexValue] = {});\r\n}\r\nfunction getLastIndexInStack(stack, vScale, positive, type) {\r\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\r\n    const value = stack[meta.index];\r\n    if ((positive && value > 0) || (!positive && value < 0)) {\r\n      return meta.index;\r\n    }\r\n  }\r\n  return null;\r\n}\r\nfunction updateStacks(controller, parsed) {\r\n  const {chart, _cachedMeta: meta} = controller;\r\n  const stacks = chart._stacks || (chart._stacks = {});\r\n  const {iScale, vScale, index: datasetIndex} = meta;\r\n  const iAxis = iScale.axis;\r\n  const vAxis = vScale.axis;\r\n  const key = getStackKey(iScale, vScale, meta);\r\n  const ilen = parsed.length;\r\n  let stack;\r\n  for (let i = 0; i < ilen; ++i) {\r\n    const item = parsed[i];\r\n    const {[iAxis]: index, [vAxis]: value} = item;\r\n    const itemStacks = item._stacks || (item._stacks = {});\r\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\r\n    stack[datasetIndex] = value;\r\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\r\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\r\n  }\r\n}\r\nfunction getFirstScaleId(chart, axis) {\r\n  const scales = chart.scales;\r\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\r\n}\r\nfunction createDatasetContext(parent, index) {\r\n  return createContext(parent,\r\n    {\r\n      active: false,\r\n      dataset: undefined,\r\n      datasetIndex: index,\r\n      index,\r\n      mode: 'default',\r\n      type: 'dataset'\r\n    }\r\n  );\r\n}\r\nfunction createDataContext(parent, index, element) {\r\n  return createContext(parent, {\r\n    active: false,\r\n    dataIndex: index,\r\n    parsed: undefined,\r\n    raw: undefined,\r\n    element,\r\n    index,\r\n    mode: 'default',\r\n    type: 'data'\r\n  });\r\n}\r\nfunction clearStacks(meta, items) {\r\n  const datasetIndex = meta.controller.index;\r\n  const axis = meta.vScale && meta.vScale.axis;\r\n  if (!axis) {\r\n    return;\r\n  }\r\n  items = items || meta._parsed;\r\n  for (const parsed of items) {\r\n    const stacks = parsed._stacks;\r\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\r\n      return;\r\n    }\r\n    delete stacks[axis][datasetIndex];\r\n  }\r\n}\r\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\r\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\r\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\r\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\r\nclass DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    this.chart = chart;\r\n    this._ctx = chart.ctx;\r\n    this.index = datasetIndex;\r\n    this._cachedDataOpts = {};\r\n    this._cachedMeta = this.getMeta();\r\n    this._type = this._cachedMeta.type;\r\n    this.options = undefined;\r\n    this._parsing = false;\r\n    this._data = undefined;\r\n    this._objectData = undefined;\r\n    this._sharedOptions = undefined;\r\n    this._drawStart = undefined;\r\n    this._drawCount = undefined;\r\n    this.enableOptionSharing = false;\r\n    this.$context = undefined;\r\n    this._syncList = [];\r\n    this.initialize();\r\n  }\r\n  initialize() {\r\n    const meta = this._cachedMeta;\r\n    this.configure();\r\n    this.linkScales();\r\n    meta._stacked = isStacked(meta.vScale, meta);\r\n    this.addElements();\r\n  }\r\n  updateIndex(datasetIndex) {\r\n    if (this.index !== datasetIndex) {\r\n      clearStacks(this._cachedMeta);\r\n    }\r\n    this.index = datasetIndex;\r\n  }\r\n  linkScales() {\r\n    const chart = this.chart;\r\n    const meta = this._cachedMeta;\r\n    const dataset = this.getDataset();\r\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\r\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\r\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\r\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\r\n    const indexAxis = meta.indexAxis;\r\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\r\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\r\n    meta.xScale = this.getScaleForId(xid);\r\n    meta.yScale = this.getScaleForId(yid);\r\n    meta.rScale = this.getScaleForId(rid);\r\n    meta.iScale = this.getScaleForId(iid);\r\n    meta.vScale = this.getScaleForId(vid);\r\n  }\r\n  getDataset() {\r\n    return this.chart.data.datasets[this.index];\r\n  }\r\n  getMeta() {\r\n    return this.chart.getDatasetMeta(this.index);\r\n  }\r\n  getScaleForId(scaleID) {\r\n    return this.chart.scales[scaleID];\r\n  }\r\n  _getOtherScale(scale) {\r\n    const meta = this._cachedMeta;\r\n    return scale === meta.iScale\r\n      ? meta.vScale\r\n      : meta.iScale;\r\n  }\r\n  reset() {\r\n    this._update('reset');\r\n  }\r\n  _destroy() {\r\n    const meta = this._cachedMeta;\r\n    if (this._data) {\r\n      unlistenArrayEvents(this._data, this);\r\n    }\r\n    if (meta._stacked) {\r\n      clearStacks(meta);\r\n    }\r\n  }\r\n  _dataCheck() {\r\n    const dataset = this.getDataset();\r\n    const data = dataset.data || (dataset.data = []);\r\n    const _data = this._data;\r\n    if (isObject(data)) {\r\n      this._data = convertObjectDataToArray(data);\r\n    } else if (_data !== data) {\r\n      if (_data) {\r\n        unlistenArrayEvents(_data, this);\r\n        const meta = this._cachedMeta;\r\n        clearStacks(meta);\r\n        meta._parsed = [];\r\n      }\r\n      if (data && Object.isExtensible(data)) {\r\n        listenArrayEvents(data, this);\r\n      }\r\n      this._syncList = [];\r\n      this._data = data;\r\n    }\r\n  }\r\n  addElements() {\r\n    const meta = this._cachedMeta;\r\n    this._dataCheck();\r\n    if (this.datasetElementType) {\r\n      meta.dataset = new this.datasetElementType();\r\n    }\r\n  }\r\n  buildOrUpdateElements(resetNewElements) {\r\n    const meta = this._cachedMeta;\r\n    const dataset = this.getDataset();\r\n    let stackChanged = false;\r\n    this._dataCheck();\r\n    const oldStacked = meta._stacked;\r\n    meta._stacked = isStacked(meta.vScale, meta);\r\n    if (meta.stack !== dataset.stack) {\r\n      stackChanged = true;\r\n      clearStacks(meta);\r\n      meta.stack = dataset.stack;\r\n    }\r\n    this._resyncElements(resetNewElements);\r\n    if (stackChanged || oldStacked !== meta._stacked) {\r\n      updateStacks(this, meta._parsed);\r\n    }\r\n  }\r\n  configure() {\r\n    const config = this.chart.config;\r\n    const scopeKeys = config.datasetScopeKeys(this._type);\r\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\r\n    this.options = config.createResolver(scopes, this.getContext());\r\n    this._parsing = this.options.parsing;\r\n    this._cachedDataOpts = {};\r\n  }\r\n  parse(start, count) {\r\n    const {_cachedMeta: meta, _data: data} = this;\r\n    const {iScale, _stacked} = meta;\r\n    const iAxis = iScale.axis;\r\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\r\n    let prev = start > 0 && meta._parsed[start - 1];\r\n    let i, cur, parsed;\r\n    if (this._parsing === false) {\r\n      meta._parsed = data;\r\n      meta._sorted = true;\r\n      parsed = data;\r\n    } else {\r\n      if (isArray(data[start])) {\r\n        parsed = this.parseArrayData(meta, data, start, count);\r\n      } else if (isObject(data[start])) {\r\n        parsed = this.parseObjectData(meta, data, start, count);\r\n      } else {\r\n        parsed = this.parsePrimitiveData(meta, data, start, count);\r\n      }\r\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\r\n      for (i = 0; i < count; ++i) {\r\n        meta._parsed[i + start] = cur = parsed[i];\r\n        if (sorted) {\r\n          if (isNotInOrderComparedToPrev()) {\r\n            sorted = false;\r\n          }\r\n          prev = cur;\r\n        }\r\n      }\r\n      meta._sorted = sorted;\r\n    }\r\n    if (_stacked) {\r\n      updateStacks(this, parsed);\r\n    }\r\n  }\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    const {iScale, vScale} = meta;\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    const labels = iScale.getLabels();\r\n    const singleScale = iScale === vScale;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      parsed[i] = {\r\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\r\n        [vAxis]: vScale.parse(data[index], index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  parseArrayData(meta, data, start, count) {\r\n    const {xScale, yScale} = meta;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index, item;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      item = data[index];\r\n      parsed[i] = {\r\n        x: xScale.parse(item[0], index),\r\n        y: yScale.parse(item[1], index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const {xScale, yScale} = meta;\r\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index, item;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      item = data[index];\r\n      parsed[i] = {\r\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\r\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  getParsed(index) {\r\n    return this._cachedMeta._parsed[index];\r\n  }\r\n  getDataElement(index) {\r\n    return this._cachedMeta.data[index];\r\n  }\r\n  applyStack(scale, parsed, mode) {\r\n    const chart = this.chart;\r\n    const meta = this._cachedMeta;\r\n    const value = parsed[scale.axis];\r\n    const stack = {\r\n      keys: getSortedDatasetIndices(chart, true),\r\n      values: parsed._stacks[scale.axis]\r\n    };\r\n    return applyStack(stack, value, meta.index, {mode});\r\n  }\r\n  updateRangeFromParsed(range, scale, parsed, stack) {\r\n    const parsedValue = parsed[scale.axis];\r\n    let value = parsedValue === null ? NaN : parsedValue;\r\n    const values = stack && parsed._stacks[scale.axis];\r\n    if (stack && values) {\r\n      stack.values = values;\r\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\r\n    }\r\n    range.min = Math.min(range.min, value);\r\n    range.max = Math.max(range.max, value);\r\n  }\r\n  getMinMax(scale, canStack) {\r\n    const meta = this._cachedMeta;\r\n    const _parsed = meta._parsed;\r\n    const sorted = meta._sorted && scale === meta.iScale;\r\n    const ilen = _parsed.length;\r\n    const otherScale = this._getOtherScale(scale);\r\n    const stack = createStack(canStack, meta, this.chart);\r\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\r\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\r\n    let i, parsed;\r\n    function _skip() {\r\n      parsed = _parsed[i];\r\n      const otherValue = parsed[otherScale.axis];\r\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\r\n    }\r\n    for (i = 0; i < ilen; ++i) {\r\n      if (_skip()) {\r\n        continue;\r\n      }\r\n      this.updateRangeFromParsed(range, scale, parsed, stack);\r\n      if (sorted) {\r\n        break;\r\n      }\r\n    }\r\n    if (sorted) {\r\n      for (i = ilen - 1; i >= 0; --i) {\r\n        if (_skip()) {\r\n          continue;\r\n        }\r\n        this.updateRangeFromParsed(range, scale, parsed, stack);\r\n        break;\r\n      }\r\n    }\r\n    return range;\r\n  }\r\n  getAllParsedValues(scale) {\r\n    const parsed = this._cachedMeta._parsed;\r\n    const values = [];\r\n    let i, ilen, value;\r\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\r\n      value = parsed[i][scale.axis];\r\n      if (isNumberFinite(value)) {\r\n        values.push(value);\r\n      }\r\n    }\r\n    return values;\r\n  }\r\n  getMaxOverflow() {\r\n    return false;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const vScale = meta.vScale;\r\n    const parsed = this.getParsed(index);\r\n    return {\r\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\r\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\r\n    };\r\n  }\r\n  _update(mode) {\r\n    const meta = this._cachedMeta;\r\n    this.update(mode || 'default');\r\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\r\n  }\r\n  update(mode) {}\r\n  draw() {\r\n    const ctx = this._ctx;\r\n    const chart = this.chart;\r\n    const meta = this._cachedMeta;\r\n    const elements = meta.data || [];\r\n    const area = chart.chartArea;\r\n    const active = [];\r\n    const start = this._drawStart || 0;\r\n    const count = this._drawCount || (elements.length - start);\r\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\r\n    let i;\r\n    if (meta.dataset) {\r\n      meta.dataset.draw(ctx, area, start, count);\r\n    }\r\n    for (i = start; i < start + count; ++i) {\r\n      const element = elements[i];\r\n      if (element.hidden) {\r\n        continue;\r\n      }\r\n      if (element.active && drawActiveElementsOnTop) {\r\n        active.push(element);\r\n      } else {\r\n        element.draw(ctx, area);\r\n      }\r\n    }\r\n    for (i = 0; i < active.length; ++i) {\r\n      active[i].draw(ctx, area);\r\n    }\r\n  }\r\n  getStyle(index, active) {\r\n    const mode = active ? 'active' : 'default';\r\n    return index === undefined && this._cachedMeta.dataset\r\n      ? this.resolveDatasetElementOptions(mode)\r\n      : this.resolveDataElementOptions(index || 0, mode);\r\n  }\r\n  getContext(index, active, mode) {\r\n    const dataset = this.getDataset();\r\n    let context;\r\n    if (index >= 0 && index < this._cachedMeta.data.length) {\r\n      const element = this._cachedMeta.data[index];\r\n      context = element.$context ||\r\n        (element.$context = createDataContext(this.getContext(), index, element));\r\n      context.parsed = this.getParsed(index);\r\n      context.raw = dataset.data[index];\r\n      context.index = context.dataIndex = index;\r\n    } else {\r\n      context = this.$context ||\r\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\r\n      context.dataset = dataset;\r\n      context.index = context.datasetIndex = this.index;\r\n    }\r\n    context.active = !!active;\r\n    context.mode = mode;\r\n    return context;\r\n  }\r\n  resolveDatasetElementOptions(mode) {\r\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\r\n  }\r\n  resolveDataElementOptions(index, mode) {\r\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\r\n  }\r\n  _resolveElementOptions(elementType, mode = 'default', index) {\r\n    const active = mode === 'active';\r\n    const cache = this._cachedDataOpts;\r\n    const cacheKey = elementType + '-' + mode;\r\n    const cached = cache[cacheKey];\r\n    const sharing = this.enableOptionSharing && defined(index);\r\n    if (cached) {\r\n      return cloneIfNotShared(cached, sharing);\r\n    }\r\n    const config = this.chart.config;\r\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\r\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\r\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\r\n    const names = Object.keys(defaults.elements[elementType]);\r\n    const context = () => this.getContext(index, active);\r\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\r\n    if (values.$shared) {\r\n      values.$shared = sharing;\r\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\r\n    }\r\n    return values;\r\n  }\r\n  _resolveAnimations(index, transition, active) {\r\n    const chart = this.chart;\r\n    const cache = this._cachedDataOpts;\r\n    const cacheKey = `animation-${transition}`;\r\n    const cached = cache[cacheKey];\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    let options;\r\n    if (chart.options.animation !== false) {\r\n      const config = this.chart.config;\r\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\r\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\r\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\r\n    }\r\n    const animations = new Animations(chart, options && options.animations);\r\n    if (options && options._cacheable) {\r\n      cache[cacheKey] = Object.freeze(animations);\r\n    }\r\n    return animations;\r\n  }\r\n  getSharedOptions(options) {\r\n    if (!options.$shared) {\r\n      return;\r\n    }\r\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\r\n  }\r\n  includeOptions(mode, sharedOptions) {\r\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\r\n  }\r\n  updateElement(element, index, properties, mode) {\r\n    if (isDirectUpdateMode(mode)) {\r\n      Object.assign(element, properties);\r\n    } else {\r\n      this._resolveAnimations(index, mode).update(element, properties);\r\n    }\r\n  }\r\n  updateSharedOptions(sharedOptions, mode, newOptions) {\r\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\r\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\r\n    }\r\n  }\r\n  _setStyle(element, index, mode, active) {\r\n    element.active = active;\r\n    const options = this.getStyle(index, active);\r\n    this._resolveAnimations(index, mode, active).update(element, {\r\n      options: (!active && this.getSharedOptions(options)) || options\r\n    });\r\n  }\r\n  removeHoverStyle(element, datasetIndex, index) {\r\n    this._setStyle(element, index, 'active', false);\r\n  }\r\n  setHoverStyle(element, datasetIndex, index) {\r\n    this._setStyle(element, index, 'active', true);\r\n  }\r\n  _removeDatasetHoverStyle() {\r\n    const element = this._cachedMeta.dataset;\r\n    if (element) {\r\n      this._setStyle(element, undefined, 'active', false);\r\n    }\r\n  }\r\n  _setDatasetHoverStyle() {\r\n    const element = this._cachedMeta.dataset;\r\n    if (element) {\r\n      this._setStyle(element, undefined, 'active', true);\r\n    }\r\n  }\r\n  _resyncElements(resetNewElements) {\r\n    const data = this._data;\r\n    const elements = this._cachedMeta.data;\r\n    for (const [method, arg1, arg2] of this._syncList) {\r\n      this[method](arg1, arg2);\r\n    }\r\n    this._syncList = [];\r\n    const numMeta = elements.length;\r\n    const numData = data.length;\r\n    const count = Math.min(numData, numMeta);\r\n    if (count) {\r\n      this.parse(0, count);\r\n    }\r\n    if (numData > numMeta) {\r\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\r\n    } else if (numData < numMeta) {\r\n      this._removeElements(numData, numMeta - numData);\r\n    }\r\n  }\r\n  _insertElements(start, count, resetNewElements = true) {\r\n    const meta = this._cachedMeta;\r\n    const data = meta.data;\r\n    const end = start + count;\r\n    let i;\r\n    const move = (arr) => {\r\n      arr.length += count;\r\n      for (i = arr.length - 1; i >= end; i--) {\r\n        arr[i] = arr[i - count];\r\n      }\r\n    };\r\n    move(data);\r\n    for (i = start; i < end; ++i) {\r\n      data[i] = new this.dataElementType();\r\n    }\r\n    if (this._parsing) {\r\n      move(meta._parsed);\r\n    }\r\n    this.parse(start, count);\r\n    if (resetNewElements) {\r\n      this.updateElements(data, start, count, 'reset');\r\n    }\r\n  }\r\n  updateElements(element, start, count, mode) {}\r\n  _removeElements(start, count) {\r\n    const meta = this._cachedMeta;\r\n    if (this._parsing) {\r\n      const removed = meta._parsed.splice(start, count);\r\n      if (meta._stacked) {\r\n        clearStacks(meta, removed);\r\n      }\r\n    }\r\n    meta.data.splice(start, count);\r\n  }\r\n  _sync(args) {\r\n    if (this._parsing) {\r\n      this._syncList.push(args);\r\n    } else {\r\n      const [method, arg1, arg2] = args;\r\n      this[method](arg1, arg2);\r\n    }\r\n    this.chart._dataChanges.push([this.index, ...args]);\r\n  }\r\n  _onDataPush() {\r\n    const count = arguments.length;\r\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\r\n  }\r\n  _onDataPop() {\r\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\r\n  }\r\n  _onDataShift() {\r\n    this._sync(['_removeElements', 0, 1]);\r\n  }\r\n  _onDataSplice(start, count) {\r\n    if (count) {\r\n      this._sync(['_removeElements', start, count]);\r\n    }\r\n    const newCount = arguments.length - 2;\r\n    if (newCount) {\r\n      this._sync(['_insertElements', start, newCount]);\r\n    }\r\n  }\r\n  _onDataUnshift() {\r\n    this._sync(['_insertElements', 0, arguments.length]);\r\n  }\r\n}\r\nDatasetController.defaults = {};\r\nDatasetController.prototype.datasetElementType = null;\r\nDatasetController.prototype.dataElementType = null;\r\n\r\nclass Element {\r\n  constructor() {\r\n    this.x = undefined;\r\n    this.y = undefined;\r\n    this.active = false;\r\n    this.options = undefined;\r\n    this.$animations = undefined;\r\n  }\r\n  tooltipPosition(useFinalPosition) {\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return {x, y};\r\n  }\r\n  hasValue() {\r\n    return isNumber(this.x) && isNumber(this.y);\r\n  }\r\n  getProps(props, final) {\r\n    const anims = this.$animations;\r\n    if (!final || !anims) {\r\n      return this;\r\n    }\r\n    const ret = {};\r\n    props.forEach(prop => {\r\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\r\n    });\r\n    return ret;\r\n  }\r\n}\r\nElement.defaults = {};\r\nElement.defaultRoutes = undefined;\r\n\r\nconst formatters = {\r\n  values(value) {\r\n    return isArray(value) ? value : '' + value;\r\n  },\r\n  numeric(tickValue, index, ticks) {\r\n    if (tickValue === 0) {\r\n      return '0';\r\n    }\r\n    const locale = this.chart.options.locale;\r\n    let notation;\r\n    let delta = tickValue;\r\n    if (ticks.length > 1) {\r\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\r\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\r\n        notation = 'scientific';\r\n      }\r\n      delta = calculateDelta(tickValue, ticks);\r\n    }\r\n    const logDelta = log10(Math.abs(delta));\r\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\r\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\r\n    Object.assign(options, this.options.ticks.format);\r\n    return formatNumber(tickValue, locale, options);\r\n  },\r\n  logarithmic(tickValue, index, ticks) {\r\n    if (tickValue === 0) {\r\n      return '0';\r\n    }\r\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\r\n    if (remain === 1 || remain === 2 || remain === 5) {\r\n      return formatters.numeric.call(this, tickValue, index, ticks);\r\n    }\r\n    return '';\r\n  }\r\n};\r\nfunction calculateDelta(tickValue, ticks) {\r\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\r\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\r\n    delta = tickValue - Math.floor(tickValue);\r\n  }\r\n  return delta;\r\n}\r\nvar Ticks = {formatters};\r\n\r\ndefaults.set('scale', {\r\n  display: true,\r\n  offset: false,\r\n  reverse: false,\r\n  beginAtZero: false,\r\n  bounds: 'ticks',\r\n  grace: 0,\r\n  grid: {\r\n    display: true,\r\n    lineWidth: 1,\r\n    drawBorder: true,\r\n    drawOnChartArea: true,\r\n    drawTicks: true,\r\n    tickLength: 8,\r\n    tickWidth: (_ctx, options) => options.lineWidth,\r\n    tickColor: (_ctx, options) => options.color,\r\n    offset: false,\r\n    borderDash: [],\r\n    borderDashOffset: 0.0,\r\n    borderWidth: 1\r\n  },\r\n  title: {\r\n    display: false,\r\n    text: '',\r\n    padding: {\r\n      top: 4,\r\n      bottom: 4\r\n    }\r\n  },\r\n  ticks: {\r\n    minRotation: 0,\r\n    maxRotation: 50,\r\n    mirror: false,\r\n    textStrokeWidth: 0,\r\n    textStrokeColor: '',\r\n    padding: 3,\r\n    display: true,\r\n    autoSkip: true,\r\n    autoSkipPadding: 3,\r\n    labelOffset: 0,\r\n    callback: Ticks.formatters.values,\r\n    minor: {},\r\n    major: {},\r\n    align: 'center',\r\n    crossAlign: 'near',\r\n    showLabelBackdrop: false,\r\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\r\n    backdropPadding: 2,\r\n  }\r\n});\r\ndefaults.route('scale.ticks', 'color', '', 'color');\r\ndefaults.route('scale.grid', 'color', '', 'borderColor');\r\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\r\ndefaults.route('scale.title', 'color', '', 'color');\r\ndefaults.describe('scale', {\r\n  _fallback: false,\r\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\r\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\r\n});\r\ndefaults.describe('scales', {\r\n  _fallback: 'scale',\r\n});\r\ndefaults.describe('scale.ticks', {\r\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\r\n  _indexable: (name) => name !== 'backdropPadding',\r\n});\r\n\r\nfunction autoSkip(scale, ticks) {\r\n  const tickOpts = scale.options.ticks;\r\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\r\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\r\n  const numMajorIndices = majorIndices.length;\r\n  const first = majorIndices[0];\r\n  const last = majorIndices[numMajorIndices - 1];\r\n  const newTicks = [];\r\n  if (numMajorIndices > ticksLimit) {\r\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\r\n    return newTicks;\r\n  }\r\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\r\n  if (numMajorIndices > 0) {\r\n    let i, ilen;\r\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\r\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\r\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\r\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\r\n    }\r\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\r\n    return newTicks;\r\n  }\r\n  skip(ticks, newTicks, spacing);\r\n  return newTicks;\r\n}\r\nfunction determineMaxTicks(scale) {\r\n  const offset = scale.options.offset;\r\n  const tickLength = scale._tickSize();\r\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\r\n  const maxChart = scale._maxLength / tickLength;\r\n  return Math.floor(Math.min(maxScale, maxChart));\r\n}\r\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\r\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\r\n  const spacing = ticks.length / ticksLimit;\r\n  if (!evenMajorSpacing) {\r\n    return Math.max(spacing, 1);\r\n  }\r\n  const factors = _factorize(evenMajorSpacing);\r\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\r\n    const factor = factors[i];\r\n    if (factor > spacing) {\r\n      return factor;\r\n    }\r\n  }\r\n  return Math.max(spacing, 1);\r\n}\r\nfunction getMajorIndices(ticks) {\r\n  const result = [];\r\n  let i, ilen;\r\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n    if (ticks[i].major) {\r\n      result.push(i);\r\n    }\r\n  }\r\n  return result;\r\n}\r\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\r\n  let count = 0;\r\n  let next = majorIndices[0];\r\n  let i;\r\n  spacing = Math.ceil(spacing);\r\n  for (i = 0; i < ticks.length; i++) {\r\n    if (i === next) {\r\n      newTicks.push(ticks[i]);\r\n      count++;\r\n      next = majorIndices[count * spacing];\r\n    }\r\n  }\r\n}\r\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\r\n  const start = valueOrDefault(majorStart, 0);\r\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\r\n  let count = 0;\r\n  let length, i, next;\r\n  spacing = Math.ceil(spacing);\r\n  if (majorEnd) {\r\n    length = majorEnd - majorStart;\r\n    spacing = length / Math.floor(length / spacing);\r\n  }\r\n  next = start;\r\n  while (next < 0) {\r\n    count++;\r\n    next = Math.round(start + count * spacing);\r\n  }\r\n  for (i = Math.max(start, 0); i < end; i++) {\r\n    if (i === next) {\r\n      newTicks.push(ticks[i]);\r\n      count++;\r\n      next = Math.round(start + count * spacing);\r\n    }\r\n  }\r\n}\r\nfunction getEvenSpacing(arr) {\r\n  const len = arr.length;\r\n  let i, diff;\r\n  if (len < 2) {\r\n    return false;\r\n  }\r\n  for (diff = arr[0], i = 1; i < len; ++i) {\r\n    if (arr[i] - arr[i - 1] !== diff) {\r\n      return false;\r\n    }\r\n  }\r\n  return diff;\r\n}\r\n\r\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\r\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\r\nfunction sample(arr, numItems) {\r\n  const result = [];\r\n  const increment = arr.length / numItems;\r\n  const len = arr.length;\r\n  let i = 0;\r\n  for (; i < len; i += increment) {\r\n    result.push(arr[Math.floor(i)]);\r\n  }\r\n  return result;\r\n}\r\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\r\n  const length = scale.ticks.length;\r\n  const validIndex = Math.min(index, length - 1);\r\n  const start = scale._startPixel;\r\n  const end = scale._endPixel;\r\n  const epsilon = 1e-6;\r\n  let lineValue = scale.getPixelForTick(validIndex);\r\n  let offset;\r\n  if (offsetGridLines) {\r\n    if (length === 1) {\r\n      offset = Math.max(lineValue - start, end - lineValue);\r\n    } else if (index === 0) {\r\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\r\n    } else {\r\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\r\n    }\r\n    lineValue += validIndex < index ? offset : -offset;\r\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\r\n      return;\r\n    }\r\n  }\r\n  return lineValue;\r\n}\r\nfunction garbageCollect(caches, length) {\r\n  each(caches, (cache) => {\r\n    const gc = cache.gc;\r\n    const gcLen = gc.length / 2;\r\n    let i;\r\n    if (gcLen > length) {\r\n      for (i = 0; i < gcLen; ++i) {\r\n        delete cache.data[gc[i]];\r\n      }\r\n      gc.splice(0, gcLen);\r\n    }\r\n  });\r\n}\r\nfunction getTickMarkLength(options) {\r\n  return options.drawTicks ? options.tickLength : 0;\r\n}\r\nfunction getTitleHeight(options, fallback) {\r\n  if (!options.display) {\r\n    return 0;\r\n  }\r\n  const font = toFont(options.font, fallback);\r\n  const padding = toPadding(options.padding);\r\n  const lines = isArray(options.text) ? options.text.length : 1;\r\n  return (lines * font.lineHeight) + padding.height;\r\n}\r\nfunction createScaleContext(parent, scale) {\r\n  return createContext(parent, {\r\n    scale,\r\n    type: 'scale'\r\n  });\r\n}\r\nfunction createTickContext(parent, index, tick) {\r\n  return createContext(parent, {\r\n    tick,\r\n    index,\r\n    type: 'tick'\r\n  });\r\n}\r\nfunction titleAlign(align, position, reverse) {\r\n  let ret = _toLeftRightCenter(align);\r\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\r\n    ret = reverseAlign(ret);\r\n  }\r\n  return ret;\r\n}\r\nfunction titleArgs(scale, offset, position, align) {\r\n  const {top, left, bottom, right, chart} = scale;\r\n  const {chartArea, scales} = chart;\r\n  let rotation = 0;\r\n  let maxWidth, titleX, titleY;\r\n  const height = bottom - top;\r\n  const width = right - left;\r\n  if (scale.isHorizontal()) {\r\n    titleX = _alignStartEnd(align, left, right);\r\n    if (isObject(position)) {\r\n      const positionAxisID = Object.keys(position)[0];\r\n      const value = position[positionAxisID];\r\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\r\n    } else if (position === 'center') {\r\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\r\n    } else {\r\n      titleY = offsetFromEdge(scale, position, offset);\r\n    }\r\n    maxWidth = right - left;\r\n  } else {\r\n    if (isObject(position)) {\r\n      const positionAxisID = Object.keys(position)[0];\r\n      const value = position[positionAxisID];\r\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\r\n    } else if (position === 'center') {\r\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\r\n    } else {\r\n      titleX = offsetFromEdge(scale, position, offset);\r\n    }\r\n    titleY = _alignStartEnd(align, bottom, top);\r\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\r\n  }\r\n  return {titleX, titleY, maxWidth, rotation};\r\n}\r\nclass Scale extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.id = cfg.id;\r\n    this.type = cfg.type;\r\n    this.options = undefined;\r\n    this.ctx = cfg.ctx;\r\n    this.chart = cfg.chart;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    this._margins = {\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0\r\n    };\r\n    this.maxWidth = undefined;\r\n    this.maxHeight = undefined;\r\n    this.paddingTop = undefined;\r\n    this.paddingBottom = undefined;\r\n    this.paddingLeft = undefined;\r\n    this.paddingRight = undefined;\r\n    this.axis = undefined;\r\n    this.labelRotation = undefined;\r\n    this.min = undefined;\r\n    this.max = undefined;\r\n    this._range = undefined;\r\n    this.ticks = [];\r\n    this._gridLineItems = null;\r\n    this._labelItems = null;\r\n    this._labelSizes = null;\r\n    this._length = 0;\r\n    this._maxLength = 0;\r\n    this._longestTextCache = {};\r\n    this._startPixel = undefined;\r\n    this._endPixel = undefined;\r\n    this._reversePixels = false;\r\n    this._userMax = undefined;\r\n    this._userMin = undefined;\r\n    this._suggestedMax = undefined;\r\n    this._suggestedMin = undefined;\r\n    this._ticksLength = 0;\r\n    this._borderValue = 0;\r\n    this._cache = {};\r\n    this._dataLimitsCached = false;\r\n    this.$context = undefined;\r\n  }\r\n  init(options) {\r\n    this.options = options.setContext(this.getContext());\r\n    this.axis = options.axis;\r\n    this._userMin = this.parse(options.min);\r\n    this._userMax = this.parse(options.max);\r\n    this._suggestedMin = this.parse(options.suggestedMin);\r\n    this._suggestedMax = this.parse(options.suggestedMax);\r\n  }\r\n  parse(raw, index) {\r\n    return raw;\r\n  }\r\n  getUserBounds() {\r\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\r\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\r\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\r\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\r\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\r\n    return {\r\n      min: finiteOrDefault(_userMin, _suggestedMin),\r\n      max: finiteOrDefault(_userMax, _suggestedMax),\r\n      minDefined: isNumberFinite(_userMin),\r\n      maxDefined: isNumberFinite(_userMax)\r\n    };\r\n  }\r\n  getMinMax(canStack) {\r\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\r\n    let range;\r\n    if (minDefined && maxDefined) {\r\n      return {min, max};\r\n    }\r\n    const metas = this.getMatchingVisibleMetas();\r\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      range = metas[i].controller.getMinMax(this, canStack);\r\n      if (!minDefined) {\r\n        min = Math.min(min, range.min);\r\n      }\r\n      if (!maxDefined) {\r\n        max = Math.max(max, range.max);\r\n      }\r\n    }\r\n    min = maxDefined && min > max ? max : min;\r\n    max = minDefined && min > max ? min : max;\r\n    return {\r\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\r\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\r\n    };\r\n  }\r\n  getPadding() {\r\n    return {\r\n      left: this.paddingLeft || 0,\r\n      top: this.paddingTop || 0,\r\n      right: this.paddingRight || 0,\r\n      bottom: this.paddingBottom || 0\r\n    };\r\n  }\r\n  getTicks() {\r\n    return this.ticks;\r\n  }\r\n  getLabels() {\r\n    const data = this.chart.data;\r\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\r\n  }\r\n  beforeLayout() {\r\n    this._cache = {};\r\n    this._dataLimitsCached = false;\r\n  }\r\n  beforeUpdate() {\r\n    callback(this.options.beforeUpdate, [this]);\r\n  }\r\n  update(maxWidth, maxHeight, margins) {\r\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\r\n    const sampleSize = tickOpts.sampleSize;\r\n    this.beforeUpdate();\r\n    this.maxWidth = maxWidth;\r\n    this.maxHeight = maxHeight;\r\n    this._margins = margins = Object.assign({\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0\r\n    }, margins);\r\n    this.ticks = null;\r\n    this._labelSizes = null;\r\n    this._gridLineItems = null;\r\n    this._labelItems = null;\r\n    this.beforeSetDimensions();\r\n    this.setDimensions();\r\n    this.afterSetDimensions();\r\n    this._maxLength = this.isHorizontal()\r\n      ? this.width + margins.left + margins.right\r\n      : this.height + margins.top + margins.bottom;\r\n    if (!this._dataLimitsCached) {\r\n      this.beforeDataLimits();\r\n      this.determineDataLimits();\r\n      this.afterDataLimits();\r\n      this._range = _addGrace(this, grace, beginAtZero);\r\n      this._dataLimitsCached = true;\r\n    }\r\n    this.beforeBuildTicks();\r\n    this.ticks = this.buildTicks() || [];\r\n    this.afterBuildTicks();\r\n    const samplingEnabled = sampleSize < this.ticks.length;\r\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\r\n    this.configure();\r\n    this.beforeCalculateLabelRotation();\r\n    this.calculateLabelRotation();\r\n    this.afterCalculateLabelRotation();\r\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\r\n      this.ticks = autoSkip(this, this.ticks);\r\n      this._labelSizes = null;\r\n    }\r\n    if (samplingEnabled) {\r\n      this._convertTicksToLabels(this.ticks);\r\n    }\r\n    this.beforeFit();\r\n    this.fit();\r\n    this.afterFit();\r\n    this.afterUpdate();\r\n  }\r\n  configure() {\r\n    let reversePixels = this.options.reverse;\r\n    let startPixel, endPixel;\r\n    if (this.isHorizontal()) {\r\n      startPixel = this.left;\r\n      endPixel = this.right;\r\n    } else {\r\n      startPixel = this.top;\r\n      endPixel = this.bottom;\r\n      reversePixels = !reversePixels;\r\n    }\r\n    this._startPixel = startPixel;\r\n    this._endPixel = endPixel;\r\n    this._reversePixels = reversePixels;\r\n    this._length = endPixel - startPixel;\r\n    this._alignToPixels = this.options.alignToPixels;\r\n  }\r\n  afterUpdate() {\r\n    callback(this.options.afterUpdate, [this]);\r\n  }\r\n  beforeSetDimensions() {\r\n    callback(this.options.beforeSetDimensions, [this]);\r\n  }\r\n  setDimensions() {\r\n    if (this.isHorizontal()) {\r\n      this.width = this.maxWidth;\r\n      this.left = 0;\r\n      this.right = this.width;\r\n    } else {\r\n      this.height = this.maxHeight;\r\n      this.top = 0;\r\n      this.bottom = this.height;\r\n    }\r\n    this.paddingLeft = 0;\r\n    this.paddingTop = 0;\r\n    this.paddingRight = 0;\r\n    this.paddingBottom = 0;\r\n  }\r\n  afterSetDimensions() {\r\n    callback(this.options.afterSetDimensions, [this]);\r\n  }\r\n  _callHooks(name) {\r\n    this.chart.notifyPlugins(name, this.getContext());\r\n    callback(this.options[name], [this]);\r\n  }\r\n  beforeDataLimits() {\r\n    this._callHooks('beforeDataLimits');\r\n  }\r\n  determineDataLimits() {}\r\n  afterDataLimits() {\r\n    this._callHooks('afterDataLimits');\r\n  }\r\n  beforeBuildTicks() {\r\n    this._callHooks('beforeBuildTicks');\r\n  }\r\n  buildTicks() {\r\n    return [];\r\n  }\r\n  afterBuildTicks() {\r\n    this._callHooks('afterBuildTicks');\r\n  }\r\n  beforeTickToLabelConversion() {\r\n    callback(this.options.beforeTickToLabelConversion, [this]);\r\n  }\r\n  generateTickLabels(ticks) {\r\n    const tickOpts = this.options.ticks;\r\n    let i, ilen, tick;\r\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n      tick = ticks[i];\r\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\r\n    }\r\n  }\r\n  afterTickToLabelConversion() {\r\n    callback(this.options.afterTickToLabelConversion, [this]);\r\n  }\r\n  beforeCalculateLabelRotation() {\r\n    callback(this.options.beforeCalculateLabelRotation, [this]);\r\n  }\r\n  calculateLabelRotation() {\r\n    const options = this.options;\r\n    const tickOpts = options.ticks;\r\n    const numTicks = this.ticks.length;\r\n    const minRotation = tickOpts.minRotation || 0;\r\n    const maxRotation = tickOpts.maxRotation;\r\n    let labelRotation = minRotation;\r\n    let tickWidth, maxHeight, maxLabelDiagonal;\r\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\r\n      this.labelRotation = minRotation;\r\n      return;\r\n    }\r\n    const labelSizes = this._getLabelSizes();\r\n    const maxLabelWidth = labelSizes.widest.width;\r\n    const maxLabelHeight = labelSizes.highest.height;\r\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\r\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\r\n    if (maxLabelWidth + 6 > tickWidth) {\r\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\r\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\r\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\r\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\r\n      labelRotation = toDegrees(Math.min(\r\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\r\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\r\n      ));\r\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\r\n    }\r\n    this.labelRotation = labelRotation;\r\n  }\r\n  afterCalculateLabelRotation() {\r\n    callback(this.options.afterCalculateLabelRotation, [this]);\r\n  }\r\n  beforeFit() {\r\n    callback(this.options.beforeFit, [this]);\r\n  }\r\n  fit() {\r\n    const minSize = {\r\n      width: 0,\r\n      height: 0\r\n    };\r\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\r\n    const display = this._isVisible();\r\n    const isHorizontal = this.isHorizontal();\r\n    if (display) {\r\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\r\n      if (isHorizontal) {\r\n        minSize.width = this.maxWidth;\r\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\r\n      } else {\r\n        minSize.height = this.maxHeight;\r\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\r\n      }\r\n      if (tickOpts.display && this.ticks.length) {\r\n        const {first, last, widest, highest} = this._getLabelSizes();\r\n        const tickPadding = tickOpts.padding * 2;\r\n        const angleRadians = toRadians(this.labelRotation);\r\n        const cos = Math.cos(angleRadians);\r\n        const sin = Math.sin(angleRadians);\r\n        if (isHorizontal) {\r\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\r\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\r\n        } else {\r\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\r\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\r\n        }\r\n        this._calculatePadding(first, last, sin, cos);\r\n      }\r\n    }\r\n    this._handleMargins();\r\n    if (isHorizontal) {\r\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\r\n      this.height = minSize.height;\r\n    } else {\r\n      this.width = minSize.width;\r\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\r\n    }\r\n  }\r\n  _calculatePadding(first, last, sin, cos) {\r\n    const {ticks: {align, padding}, position} = this.options;\r\n    const isRotated = this.labelRotation !== 0;\r\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\r\n    if (this.isHorizontal()) {\r\n      const offsetLeft = this.getPixelForTick(0) - this.left;\r\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\r\n      let paddingLeft = 0;\r\n      let paddingRight = 0;\r\n      if (isRotated) {\r\n        if (labelsBelowTicks) {\r\n          paddingLeft = cos * first.width;\r\n          paddingRight = sin * last.height;\r\n        } else {\r\n          paddingLeft = sin * first.height;\r\n          paddingRight = cos * last.width;\r\n        }\r\n      } else if (align === 'start') {\r\n        paddingRight = last.width;\r\n      } else if (align === 'end') {\r\n        paddingLeft = first.width;\r\n      } else {\r\n        paddingLeft = first.width / 2;\r\n        paddingRight = last.width / 2;\r\n      }\r\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\r\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\r\n    } else {\r\n      let paddingTop = last.height / 2;\r\n      let paddingBottom = first.height / 2;\r\n      if (align === 'start') {\r\n        paddingTop = 0;\r\n        paddingBottom = first.height;\r\n      } else if (align === 'end') {\r\n        paddingTop = last.height;\r\n        paddingBottom = 0;\r\n      }\r\n      this.paddingTop = paddingTop + padding;\r\n      this.paddingBottom = paddingBottom + padding;\r\n    }\r\n  }\r\n  _handleMargins() {\r\n    if (this._margins) {\r\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\r\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\r\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\r\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\r\n    }\r\n  }\r\n  afterFit() {\r\n    callback(this.options.afterFit, [this]);\r\n  }\r\n  isHorizontal() {\r\n    const {axis, position} = this.options;\r\n    return position === 'top' || position === 'bottom' || axis === 'x';\r\n  }\r\n  isFullSize() {\r\n    return this.options.fullSize;\r\n  }\r\n  _convertTicksToLabels(ticks) {\r\n    this.beforeTickToLabelConversion();\r\n    this.generateTickLabels(ticks);\r\n    let i, ilen;\r\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n      if (isNullOrUndef(ticks[i].label)) {\r\n        ticks.splice(i, 1);\r\n        ilen--;\r\n        i--;\r\n      }\r\n    }\r\n    this.afterTickToLabelConversion();\r\n  }\r\n  _getLabelSizes() {\r\n    let labelSizes = this._labelSizes;\r\n    if (!labelSizes) {\r\n      const sampleSize = this.options.ticks.sampleSize;\r\n      let ticks = this.ticks;\r\n      if (sampleSize < ticks.length) {\r\n        ticks = sample(ticks, sampleSize);\r\n      }\r\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\r\n    }\r\n    return labelSizes;\r\n  }\r\n  _computeLabelSizes(ticks, length) {\r\n    const {ctx, _longestTextCache: caches} = this;\r\n    const widths = [];\r\n    const heights = [];\r\n    let widestLabelSize = 0;\r\n    let highestLabelSize = 0;\r\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\r\n    for (i = 0; i < length; ++i) {\r\n      label = ticks[i].label;\r\n      tickFont = this._resolveTickFontOptions(i);\r\n      ctx.font = fontString = tickFont.string;\r\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\r\n      lineHeight = tickFont.lineHeight;\r\n      width = height = 0;\r\n      if (!isNullOrUndef(label) && !isArray(label)) {\r\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\r\n        height = lineHeight;\r\n      } else if (isArray(label)) {\r\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\r\n          nestedLabel = label[j];\r\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\r\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\r\n            height += lineHeight;\r\n          }\r\n        }\r\n      }\r\n      widths.push(width);\r\n      heights.push(height);\r\n      widestLabelSize = Math.max(width, widestLabelSize);\r\n      highestLabelSize = Math.max(height, highestLabelSize);\r\n    }\r\n    garbageCollect(caches, length);\r\n    const widest = widths.indexOf(widestLabelSize);\r\n    const highest = heights.indexOf(highestLabelSize);\r\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\r\n    return {\r\n      first: valueAt(0),\r\n      last: valueAt(length - 1),\r\n      widest: valueAt(widest),\r\n      highest: valueAt(highest),\r\n      widths,\r\n      heights,\r\n    };\r\n  }\r\n  getLabelForValue(value) {\r\n    return value;\r\n  }\r\n  getPixelForValue(value, index) {\r\n    return NaN;\r\n  }\r\n  getValueForPixel(pixel) {}\r\n  getPixelForTick(index) {\r\n    const ticks = this.ticks;\r\n    if (index < 0 || index > ticks.length - 1) {\r\n      return null;\r\n    }\r\n    return this.getPixelForValue(ticks[index].value);\r\n  }\r\n  getPixelForDecimal(decimal) {\r\n    if (this._reversePixels) {\r\n      decimal = 1 - decimal;\r\n    }\r\n    const pixel = this._startPixel + decimal * this._length;\r\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\r\n  }\r\n  getDecimalForPixel(pixel) {\r\n    const decimal = (pixel - this._startPixel) / this._length;\r\n    return this._reversePixels ? 1 - decimal : decimal;\r\n  }\r\n  getBasePixel() {\r\n    return this.getPixelForValue(this.getBaseValue());\r\n  }\r\n  getBaseValue() {\r\n    const {min, max} = this;\r\n    return min < 0 && max < 0 ? max :\r\n      min > 0 && max > 0 ? min :\r\n      0;\r\n  }\r\n  getContext(index) {\r\n    const ticks = this.ticks || [];\r\n    if (index >= 0 && index < ticks.length) {\r\n      const tick = ticks[index];\r\n      return tick.$context ||\r\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\r\n    }\r\n    return this.$context ||\r\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\r\n  }\r\n  _tickSize() {\r\n    const optionTicks = this.options.ticks;\r\n    const rot = toRadians(this.labelRotation);\r\n    const cos = Math.abs(Math.cos(rot));\r\n    const sin = Math.abs(Math.sin(rot));\r\n    const labelSizes = this._getLabelSizes();\r\n    const padding = optionTicks.autoSkipPadding || 0;\r\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\r\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\r\n    return this.isHorizontal()\r\n      ? h * cos > w * sin ? w / cos : h / sin\r\n      : h * sin < w * cos ? h / cos : w / sin;\r\n  }\r\n  _isVisible() {\r\n    const display = this.options.display;\r\n    if (display !== 'auto') {\r\n      return !!display;\r\n    }\r\n    return this.getMatchingVisibleMetas().length > 0;\r\n  }\r\n  _computeGridLineItems(chartArea) {\r\n    const axis = this.axis;\r\n    const chart = this.chart;\r\n    const options = this.options;\r\n    const {grid, position} = options;\r\n    const offset = grid.offset;\r\n    const isHorizontal = this.isHorizontal();\r\n    const ticks = this.ticks;\r\n    const ticksLength = ticks.length + (offset ? 1 : 0);\r\n    const tl = getTickMarkLength(grid);\r\n    const items = [];\r\n    const borderOpts = grid.setContext(this.getContext());\r\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\r\n    const axisHalfWidth = axisWidth / 2;\r\n    const alignBorderValue = function(pixel) {\r\n      return _alignPixel(chart, pixel, axisWidth);\r\n    };\r\n    let borderValue, i, lineValue, alignedLineValue;\r\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\r\n    if (position === 'top') {\r\n      borderValue = alignBorderValue(this.bottom);\r\n      ty1 = this.bottom - tl;\r\n      ty2 = borderValue - axisHalfWidth;\r\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\r\n      y2 = chartArea.bottom;\r\n    } else if (position === 'bottom') {\r\n      borderValue = alignBorderValue(this.top);\r\n      y1 = chartArea.top;\r\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\r\n      ty1 = borderValue + axisHalfWidth;\r\n      ty2 = this.top + tl;\r\n    } else if (position === 'left') {\r\n      borderValue = alignBorderValue(this.right);\r\n      tx1 = this.right - tl;\r\n      tx2 = borderValue - axisHalfWidth;\r\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\r\n      x2 = chartArea.right;\r\n    } else if (position === 'right') {\r\n      borderValue = alignBorderValue(this.left);\r\n      x1 = chartArea.left;\r\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\r\n      tx1 = borderValue + axisHalfWidth;\r\n      tx2 = this.left + tl;\r\n    } else if (axis === 'x') {\r\n      if (position === 'center') {\r\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\r\n      }\r\n      y1 = chartArea.top;\r\n      y2 = chartArea.bottom;\r\n      ty1 = borderValue + axisHalfWidth;\r\n      ty2 = ty1 + tl;\r\n    } else if (axis === 'y') {\r\n      if (position === 'center') {\r\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\r\n      }\r\n      tx1 = borderValue - axisHalfWidth;\r\n      tx2 = tx1 - tl;\r\n      x1 = chartArea.left;\r\n      x2 = chartArea.right;\r\n    }\r\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\r\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\r\n    for (i = 0; i < ticksLength; i += step) {\r\n      const optsAtIndex = grid.setContext(this.getContext(i));\r\n      const lineWidth = optsAtIndex.lineWidth;\r\n      const lineColor = optsAtIndex.color;\r\n      const borderDash = grid.borderDash || [];\r\n      const borderDashOffset = optsAtIndex.borderDashOffset;\r\n      const tickWidth = optsAtIndex.tickWidth;\r\n      const tickColor = optsAtIndex.tickColor;\r\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\r\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\r\n      lineValue = getPixelForGridLine(this, i, offset);\r\n      if (lineValue === undefined) {\r\n        continue;\r\n      }\r\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\r\n      if (isHorizontal) {\r\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\r\n      } else {\r\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\r\n      }\r\n      items.push({\r\n        tx1,\r\n        ty1,\r\n        tx2,\r\n        ty2,\r\n        x1,\r\n        y1,\r\n        x2,\r\n        y2,\r\n        width: lineWidth,\r\n        color: lineColor,\r\n        borderDash,\r\n        borderDashOffset,\r\n        tickWidth,\r\n        tickColor,\r\n        tickBorderDash,\r\n        tickBorderDashOffset,\r\n      });\r\n    }\r\n    this._ticksLength = ticksLength;\r\n    this._borderValue = borderValue;\r\n    return items;\r\n  }\r\n  _computeLabelItems(chartArea) {\r\n    const axis = this.axis;\r\n    const options = this.options;\r\n    const {position, ticks: optionTicks} = options;\r\n    const isHorizontal = this.isHorizontal();\r\n    const ticks = this.ticks;\r\n    const {align, crossAlign, padding, mirror} = optionTicks;\r\n    const tl = getTickMarkLength(options.grid);\r\n    const tickAndPadding = tl + padding;\r\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\r\n    const rotation = -toRadians(this.labelRotation);\r\n    const items = [];\r\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\r\n    let textBaseline = 'middle';\r\n    if (position === 'top') {\r\n      y = this.bottom - hTickAndPadding;\r\n      textAlign = this._getXAxisLabelAlignment();\r\n    } else if (position === 'bottom') {\r\n      y = this.top + hTickAndPadding;\r\n      textAlign = this._getXAxisLabelAlignment();\r\n    } else if (position === 'left') {\r\n      const ret = this._getYAxisLabelAlignment(tl);\r\n      textAlign = ret.textAlign;\r\n      x = ret.x;\r\n    } else if (position === 'right') {\r\n      const ret = this._getYAxisLabelAlignment(tl);\r\n      textAlign = ret.textAlign;\r\n      x = ret.x;\r\n    } else if (axis === 'x') {\r\n      if (position === 'center') {\r\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\r\n      }\r\n      textAlign = this._getXAxisLabelAlignment();\r\n    } else if (axis === 'y') {\r\n      if (position === 'center') {\r\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\r\n      }\r\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\r\n    }\r\n    if (axis === 'y') {\r\n      if (align === 'start') {\r\n        textBaseline = 'top';\r\n      } else if (align === 'end') {\r\n        textBaseline = 'bottom';\r\n      }\r\n    }\r\n    const labelSizes = this._getLabelSizes();\r\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n      tick = ticks[i];\r\n      label = tick.label;\r\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\r\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\r\n      font = this._resolveTickFontOptions(i);\r\n      lineHeight = font.lineHeight;\r\n      lineCount = isArray(label) ? label.length : 1;\r\n      const halfCount = lineCount / 2;\r\n      const color = optsAtIndex.color;\r\n      const strokeColor = optsAtIndex.textStrokeColor;\r\n      const strokeWidth = optsAtIndex.textStrokeWidth;\r\n      if (isHorizontal) {\r\n        x = pixel;\r\n        if (position === 'top') {\r\n          if (crossAlign === 'near' || rotation !== 0) {\r\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\r\n          } else if (crossAlign === 'center') {\r\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\r\n          } else {\r\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\r\n          }\r\n        } else {\r\n          if (crossAlign === 'near' || rotation !== 0) {\r\n            textOffset = lineHeight / 2;\r\n          } else if (crossAlign === 'center') {\r\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\r\n          } else {\r\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\r\n          }\r\n        }\r\n        if (mirror) {\r\n          textOffset *= -1;\r\n        }\r\n      } else {\r\n        y = pixel;\r\n        textOffset = (1 - lineCount) * lineHeight / 2;\r\n      }\r\n      let backdrop;\r\n      if (optsAtIndex.showLabelBackdrop) {\r\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\r\n        const height = labelSizes.heights[i];\r\n        const width = labelSizes.widths[i];\r\n        let top = y + textOffset - labelPadding.top;\r\n        let left = x - labelPadding.left;\r\n        switch (textBaseline) {\r\n        case 'middle':\r\n          top -= height / 2;\r\n          break;\r\n        case 'bottom':\r\n          top -= height;\r\n          break;\r\n        }\r\n        switch (textAlign) {\r\n        case 'center':\r\n          left -= width / 2;\r\n          break;\r\n        case 'right':\r\n          left -= width;\r\n          break;\r\n        }\r\n        backdrop = {\r\n          left,\r\n          top,\r\n          width: width + labelPadding.width,\r\n          height: height + labelPadding.height,\r\n          color: optsAtIndex.backdropColor,\r\n        };\r\n      }\r\n      items.push({\r\n        rotation,\r\n        label,\r\n        font,\r\n        color,\r\n        strokeColor,\r\n        strokeWidth,\r\n        textOffset,\r\n        textAlign,\r\n        textBaseline,\r\n        translation: [x, y],\r\n        backdrop,\r\n      });\r\n    }\r\n    return items;\r\n  }\r\n  _getXAxisLabelAlignment() {\r\n    const {position, ticks} = this.options;\r\n    const rotation = -toRadians(this.labelRotation);\r\n    if (rotation) {\r\n      return position === 'top' ? 'left' : 'right';\r\n    }\r\n    let align = 'center';\r\n    if (ticks.align === 'start') {\r\n      align = 'left';\r\n    } else if (ticks.align === 'end') {\r\n      align = 'right';\r\n    }\r\n    return align;\r\n  }\r\n  _getYAxisLabelAlignment(tl) {\r\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\r\n    const labelSizes = this._getLabelSizes();\r\n    const tickAndPadding = tl + padding;\r\n    const widest = labelSizes.widest.width;\r\n    let textAlign;\r\n    let x;\r\n    if (position === 'left') {\r\n      if (mirror) {\r\n        x = this.right + padding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'left';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x += (widest / 2);\r\n        } else {\r\n          textAlign = 'right';\r\n          x += widest;\r\n        }\r\n      } else {\r\n        x = this.right - tickAndPadding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'right';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x -= (widest / 2);\r\n        } else {\r\n          textAlign = 'left';\r\n          x = this.left;\r\n        }\r\n      }\r\n    } else if (position === 'right') {\r\n      if (mirror) {\r\n        x = this.left + padding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'right';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x -= (widest / 2);\r\n        } else {\r\n          textAlign = 'left';\r\n          x -= widest;\r\n        }\r\n      } else {\r\n        x = this.left + tickAndPadding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'left';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x += widest / 2;\r\n        } else {\r\n          textAlign = 'right';\r\n          x = this.right;\r\n        }\r\n      }\r\n    } else {\r\n      textAlign = 'right';\r\n    }\r\n    return {textAlign, x};\r\n  }\r\n  _computeLabelArea() {\r\n    if (this.options.ticks.mirror) {\r\n      return;\r\n    }\r\n    const chart = this.chart;\r\n    const position = this.options.position;\r\n    if (position === 'left' || position === 'right') {\r\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\r\n    } if (position === 'top' || position === 'bottom') {\r\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\r\n    }\r\n  }\r\n  drawBackground() {\r\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\r\n    if (backgroundColor) {\r\n      ctx.save();\r\n      ctx.fillStyle = backgroundColor;\r\n      ctx.fillRect(left, top, width, height);\r\n      ctx.restore();\r\n    }\r\n  }\r\n  getLineWidthForValue(value) {\r\n    const grid = this.options.grid;\r\n    if (!this._isVisible() || !grid.display) {\r\n      return 0;\r\n    }\r\n    const ticks = this.ticks;\r\n    const index = ticks.findIndex(t => t.value === value);\r\n    if (index >= 0) {\r\n      const opts = grid.setContext(this.getContext(index));\r\n      return opts.lineWidth;\r\n    }\r\n    return 0;\r\n  }\r\n  drawGrid(chartArea) {\r\n    const grid = this.options.grid;\r\n    const ctx = this.ctx;\r\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\r\n    let i, ilen;\r\n    const drawLine = (p1, p2, style) => {\r\n      if (!style.width || !style.color) {\r\n        return;\r\n      }\r\n      ctx.save();\r\n      ctx.lineWidth = style.width;\r\n      ctx.strokeStyle = style.color;\r\n      ctx.setLineDash(style.borderDash || []);\r\n      ctx.lineDashOffset = style.borderDashOffset;\r\n      ctx.beginPath();\r\n      ctx.moveTo(p1.x, p1.y);\r\n      ctx.lineTo(p2.x, p2.y);\r\n      ctx.stroke();\r\n      ctx.restore();\r\n    };\r\n    if (grid.display) {\r\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n        const item = items[i];\r\n        if (grid.drawOnChartArea) {\r\n          drawLine(\r\n            {x: item.x1, y: item.y1},\r\n            {x: item.x2, y: item.y2},\r\n            item\r\n          );\r\n        }\r\n        if (grid.drawTicks) {\r\n          drawLine(\r\n            {x: item.tx1, y: item.ty1},\r\n            {x: item.tx2, y: item.ty2},\r\n            {\r\n              color: item.tickColor,\r\n              width: item.tickWidth,\r\n              borderDash: item.tickBorderDash,\r\n              borderDashOffset: item.tickBorderDashOffset\r\n            }\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n  drawBorder() {\r\n    const {chart, ctx, options: {grid}} = this;\r\n    const borderOpts = grid.setContext(this.getContext());\r\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\r\n    if (!axisWidth) {\r\n      return;\r\n    }\r\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\r\n    const borderValue = this._borderValue;\r\n    let x1, x2, y1, y2;\r\n    if (this.isHorizontal()) {\r\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\r\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\r\n      y1 = y2 = borderValue;\r\n    } else {\r\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\r\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\r\n      x1 = x2 = borderValue;\r\n    }\r\n    ctx.save();\r\n    ctx.lineWidth = borderOpts.borderWidth;\r\n    ctx.strokeStyle = borderOpts.borderColor;\r\n    ctx.beginPath();\r\n    ctx.moveTo(x1, y1);\r\n    ctx.lineTo(x2, y2);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n  }\r\n  drawLabels(chartArea) {\r\n    const optionTicks = this.options.ticks;\r\n    if (!optionTicks.display) {\r\n      return;\r\n    }\r\n    const ctx = this.ctx;\r\n    const area = this._computeLabelArea();\r\n    if (area) {\r\n      clipArea(ctx, area);\r\n    }\r\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\r\n    let i, ilen;\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      const item = items[i];\r\n      const tickFont = item.font;\r\n      const label = item.label;\r\n      if (item.backdrop) {\r\n        ctx.fillStyle = item.backdrop.color;\r\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\r\n      }\r\n      let y = item.textOffset;\r\n      renderText(ctx, label, 0, y, tickFont, item);\r\n    }\r\n    if (area) {\r\n      unclipArea(ctx);\r\n    }\r\n  }\r\n  drawTitle() {\r\n    const {ctx, options: {position, title, reverse}} = this;\r\n    if (!title.display) {\r\n      return;\r\n    }\r\n    const font = toFont(title.font);\r\n    const padding = toPadding(title.padding);\r\n    const align = title.align;\r\n    let offset = font.lineHeight / 2;\r\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\r\n      offset += padding.bottom;\r\n      if (isArray(title.text)) {\r\n        offset += font.lineHeight * (title.text.length - 1);\r\n      }\r\n    } else {\r\n      offset += padding.top;\r\n    }\r\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\r\n    renderText(ctx, title.text, 0, 0, font, {\r\n      color: title.color,\r\n      maxWidth,\r\n      rotation,\r\n      textAlign: titleAlign(align, position, reverse),\r\n      textBaseline: 'middle',\r\n      translation: [titleX, titleY],\r\n    });\r\n  }\r\n  draw(chartArea) {\r\n    if (!this._isVisible()) {\r\n      return;\r\n    }\r\n    this.drawBackground();\r\n    this.drawGrid(chartArea);\r\n    this.drawBorder();\r\n    this.drawTitle();\r\n    this.drawLabels(chartArea);\r\n  }\r\n  _layers() {\r\n    const opts = this.options;\r\n    const tz = opts.ticks && opts.ticks.z || 0;\r\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\r\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\r\n      return [{\r\n        z: tz,\r\n        draw: (chartArea) => {\r\n          this.draw(chartArea);\r\n        }\r\n      }];\r\n    }\r\n    return [{\r\n      z: gz,\r\n      draw: (chartArea) => {\r\n        this.drawBackground();\r\n        this.drawGrid(chartArea);\r\n        this.drawTitle();\r\n      }\r\n    }, {\r\n      z: gz + 1,\r\n      draw: () => {\r\n        this.drawBorder();\r\n      }\r\n    }, {\r\n      z: tz,\r\n      draw: (chartArea) => {\r\n        this.drawLabels(chartArea);\r\n      }\r\n    }];\r\n  }\r\n  getMatchingVisibleMetas(type) {\r\n    const metas = this.chart.getSortedVisibleDatasetMetas();\r\n    const axisID = this.axis + 'AxisID';\r\n    const result = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      const meta = metas[i];\r\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\r\n        result.push(meta);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  _resolveTickFontOptions(index) {\r\n    const opts = this.options.ticks.setContext(this.getContext(index));\r\n    return toFont(opts.font);\r\n  }\r\n  _maxDigits() {\r\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\r\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\r\n  }\r\n}\r\n\r\nclass TypedRegistry {\r\n  constructor(type, scope, override) {\r\n    this.type = type;\r\n    this.scope = scope;\r\n    this.override = override;\r\n    this.items = Object.create(null);\r\n  }\r\n  isForType(type) {\r\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\r\n  }\r\n  register(item) {\r\n    const proto = Object.getPrototypeOf(item);\r\n    let parentScope;\r\n    if (isIChartComponent(proto)) {\r\n      parentScope = this.register(proto);\r\n    }\r\n    const items = this.items;\r\n    const id = item.id;\r\n    const scope = this.scope + '.' + id;\r\n    if (!id) {\r\n      throw new Error('class does not have id: ' + item);\r\n    }\r\n    if (id in items) {\r\n      return scope;\r\n    }\r\n    items[id] = item;\r\n    registerDefaults(item, scope, parentScope);\r\n    if (this.override) {\r\n      defaults.override(item.id, item.overrides);\r\n    }\r\n    return scope;\r\n  }\r\n  get(id) {\r\n    return this.items[id];\r\n  }\r\n  unregister(item) {\r\n    const items = this.items;\r\n    const id = item.id;\r\n    const scope = this.scope;\r\n    if (id in items) {\r\n      delete items[id];\r\n    }\r\n    if (scope && id in defaults[scope]) {\r\n      delete defaults[scope][id];\r\n      if (this.override) {\r\n        delete overrides[id];\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction registerDefaults(item, scope, parentScope) {\r\n  const itemDefaults = merge(Object.create(null), [\r\n    parentScope ? defaults.get(parentScope) : {},\r\n    defaults.get(scope),\r\n    item.defaults\r\n  ]);\r\n  defaults.set(scope, itemDefaults);\r\n  if (item.defaultRoutes) {\r\n    routeDefaults(scope, item.defaultRoutes);\r\n  }\r\n  if (item.descriptors) {\r\n    defaults.describe(scope, item.descriptors);\r\n  }\r\n}\r\nfunction routeDefaults(scope, routes) {\r\n  Object.keys(routes).forEach(property => {\r\n    const propertyParts = property.split('.');\r\n    const sourceName = propertyParts.pop();\r\n    const sourceScope = [scope].concat(propertyParts).join('.');\r\n    const parts = routes[property].split('.');\r\n    const targetName = parts.pop();\r\n    const targetScope = parts.join('.');\r\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\r\n  });\r\n}\r\nfunction isIChartComponent(proto) {\r\n  return 'id' in proto && 'defaults' in proto;\r\n}\r\n\r\nclass Registry {\r\n  constructor() {\r\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\r\n    this.elements = new TypedRegistry(Element, 'elements');\r\n    this.plugins = new TypedRegistry(Object, 'plugins');\r\n    this.scales = new TypedRegistry(Scale, 'scales');\r\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\r\n  }\r\n  add(...args) {\r\n    this._each('register', args);\r\n  }\r\n  remove(...args) {\r\n    this._each('unregister', args);\r\n  }\r\n  addControllers(...args) {\r\n    this._each('register', args, this.controllers);\r\n  }\r\n  addElements(...args) {\r\n    this._each('register', args, this.elements);\r\n  }\r\n  addPlugins(...args) {\r\n    this._each('register', args, this.plugins);\r\n  }\r\n  addScales(...args) {\r\n    this._each('register', args, this.scales);\r\n  }\r\n  getController(id) {\r\n    return this._get(id, this.controllers, 'controller');\r\n  }\r\n  getElement(id) {\r\n    return this._get(id, this.elements, 'element');\r\n  }\r\n  getPlugin(id) {\r\n    return this._get(id, this.plugins, 'plugin');\r\n  }\r\n  getScale(id) {\r\n    return this._get(id, this.scales, 'scale');\r\n  }\r\n  removeControllers(...args) {\r\n    this._each('unregister', args, this.controllers);\r\n  }\r\n  removeElements(...args) {\r\n    this._each('unregister', args, this.elements);\r\n  }\r\n  removePlugins(...args) {\r\n    this._each('unregister', args, this.plugins);\r\n  }\r\n  removeScales(...args) {\r\n    this._each('unregister', args, this.scales);\r\n  }\r\n  _each(method, args, typedRegistry) {\r\n    [...args].forEach(arg => {\r\n      const reg = typedRegistry || this._getRegistryForType(arg);\r\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\r\n        this._exec(method, reg, arg);\r\n      } else {\r\n        each(arg, item => {\r\n          const itemReg = typedRegistry || this._getRegistryForType(item);\r\n          this._exec(method, itemReg, item);\r\n        });\r\n      }\r\n    });\r\n  }\r\n  _exec(method, registry, component) {\r\n    const camelMethod = _capitalize(method);\r\n    callback(component['before' + camelMethod], [], component);\r\n    registry[method](component);\r\n    callback(component['after' + camelMethod], [], component);\r\n  }\r\n  _getRegistryForType(type) {\r\n    for (let i = 0; i < this._typedRegistries.length; i++) {\r\n      const reg = this._typedRegistries[i];\r\n      if (reg.isForType(type)) {\r\n        return reg;\r\n      }\r\n    }\r\n    return this.plugins;\r\n  }\r\n  _get(id, typedRegistry, type) {\r\n    const item = typedRegistry.get(id);\r\n    if (item === undefined) {\r\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\r\n    }\r\n    return item;\r\n  }\r\n}\r\nvar registry = new Registry();\r\n\r\nclass PluginService {\r\n  constructor() {\r\n    this._init = [];\r\n  }\r\n  notify(chart, hook, args, filter) {\r\n    if (hook === 'beforeInit') {\r\n      this._init = this._createDescriptors(chart, true);\r\n      this._notify(this._init, chart, 'install');\r\n    }\r\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\r\n    const result = this._notify(descriptors, chart, hook, args);\r\n    if (hook === 'afterDestroy') {\r\n      this._notify(descriptors, chart, 'stop');\r\n      this._notify(this._init, chart, 'uninstall');\r\n    }\r\n    return result;\r\n  }\r\n  _notify(descriptors, chart, hook, args) {\r\n    args = args || {};\r\n    for (const descriptor of descriptors) {\r\n      const plugin = descriptor.plugin;\r\n      const method = plugin[hook];\r\n      const params = [chart, args, descriptor.options];\r\n      if (callback(method, params, plugin) === false && args.cancelable) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  invalidate() {\r\n    if (!isNullOrUndef(this._cache)) {\r\n      this._oldCache = this._cache;\r\n      this._cache = undefined;\r\n    }\r\n  }\r\n  _descriptors(chart) {\r\n    if (this._cache) {\r\n      return this._cache;\r\n    }\r\n    const descriptors = this._cache = this._createDescriptors(chart);\r\n    this._notifyStateChanges(chart);\r\n    return descriptors;\r\n  }\r\n  _createDescriptors(chart, all) {\r\n    const config = chart && chart.config;\r\n    const options = valueOrDefault(config.options && config.options.plugins, {});\r\n    const plugins = allPlugins(config);\r\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\r\n  }\r\n  _notifyStateChanges(chart) {\r\n    const previousDescriptors = this._oldCache || [];\r\n    const descriptors = this._cache;\r\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\r\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\r\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\r\n  }\r\n}\r\nfunction allPlugins(config) {\r\n  const plugins = [];\r\n  const keys = Object.keys(registry.plugins.items);\r\n  for (let i = 0; i < keys.length; i++) {\r\n    plugins.push(registry.getPlugin(keys[i]));\r\n  }\r\n  const local = config.plugins || [];\r\n  for (let i = 0; i < local.length; i++) {\r\n    const plugin = local[i];\r\n    if (plugins.indexOf(plugin) === -1) {\r\n      plugins.push(plugin);\r\n    }\r\n  }\r\n  return plugins;\r\n}\r\nfunction getOpts(options, all) {\r\n  if (!all && options === false) {\r\n    return null;\r\n  }\r\n  if (options === true) {\r\n    return {};\r\n  }\r\n  return options;\r\n}\r\nfunction createDescriptors(chart, plugins, options, all) {\r\n  const result = [];\r\n  const context = chart.getContext();\r\n  for (let i = 0; i < plugins.length; i++) {\r\n    const plugin = plugins[i];\r\n    const id = plugin.id;\r\n    const opts = getOpts(options[id], all);\r\n    if (opts === null) {\r\n      continue;\r\n    }\r\n    result.push({\r\n      plugin,\r\n      options: pluginOpts(chart.config, plugin, opts, context)\r\n    });\r\n  }\r\n  return result;\r\n}\r\nfunction pluginOpts(config, plugin, opts, context) {\r\n  const keys = config.pluginScopeKeys(plugin);\r\n  const scopes = config.getOptionScopes(opts, keys);\r\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\r\n}\r\n\r\nfunction getIndexAxis(type, options) {\r\n  const datasetDefaults = defaults.datasets[type] || {};\r\n  const datasetOptions = (options.datasets || {})[type] || {};\r\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\r\n}\r\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\r\n  let axis = id;\r\n  if (id === '_index_') {\r\n    axis = indexAxis;\r\n  } else if (id === '_value_') {\r\n    axis = indexAxis === 'x' ? 'y' : 'x';\r\n  }\r\n  return axis;\r\n}\r\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\r\n  return axis === indexAxis ? '_index_' : '_value_';\r\n}\r\nfunction axisFromPosition(position) {\r\n  if (position === 'top' || position === 'bottom') {\r\n    return 'x';\r\n  }\r\n  if (position === 'left' || position === 'right') {\r\n    return 'y';\r\n  }\r\n}\r\nfunction determineAxis(id, scaleOptions) {\r\n  if (id === 'x' || id === 'y') {\r\n    return id;\r\n  }\r\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\r\n}\r\nfunction mergeScaleConfig(config, options) {\r\n  const chartDefaults = overrides[config.type] || {scales: {}};\r\n  const configScales = options.scales || {};\r\n  const chartIndexAxis = getIndexAxis(config.type, options);\r\n  const firstIDs = Object.create(null);\r\n  const scales = Object.create(null);\r\n  Object.keys(configScales).forEach(id => {\r\n    const scaleConf = configScales[id];\r\n    if (!isObject(scaleConf)) {\r\n      return console.error(`Invalid scale configuration for scale: ${id}`);\r\n    }\r\n    if (scaleConf._proxy) {\r\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\r\n    }\r\n    const axis = determineAxis(id, scaleConf);\r\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\r\n    const defaultScaleOptions = chartDefaults.scales || {};\r\n    firstIDs[axis] = firstIDs[axis] || id;\r\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\r\n  });\r\n  config.data.datasets.forEach(dataset => {\r\n    const type = dataset.type || config.type;\r\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\r\n    const datasetDefaults = overrides[type] || {};\r\n    const defaultScaleOptions = datasetDefaults.scales || {};\r\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\r\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\r\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\r\n      scales[id] = scales[id] || Object.create(null);\r\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\r\n    });\r\n  });\r\n  Object.keys(scales).forEach(key => {\r\n    const scale = scales[key];\r\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\r\n  });\r\n  return scales;\r\n}\r\nfunction initOptions(config) {\r\n  const options = config.options || (config.options = {});\r\n  options.plugins = valueOrDefault(options.plugins, {});\r\n  options.scales = mergeScaleConfig(config, options);\r\n}\r\nfunction initData(data) {\r\n  data = data || {};\r\n  data.datasets = data.datasets || [];\r\n  data.labels = data.labels || [];\r\n  return data;\r\n}\r\nfunction initConfig(config) {\r\n  config = config || {};\r\n  config.data = initData(config.data);\r\n  initOptions(config);\r\n  return config;\r\n}\r\nconst keyCache = new Map();\r\nconst keysCached = new Set();\r\nfunction cachedKeys(cacheKey, generate) {\r\n  let keys = keyCache.get(cacheKey);\r\n  if (!keys) {\r\n    keys = generate();\r\n    keyCache.set(cacheKey, keys);\r\n    keysCached.add(keys);\r\n  }\r\n  return keys;\r\n}\r\nconst addIfFound = (set, obj, key) => {\r\n  const opts = resolveObjectKey(obj, key);\r\n  if (opts !== undefined) {\r\n    set.add(opts);\r\n  }\r\n};\r\nclass Config {\r\n  constructor(config) {\r\n    this._config = initConfig(config);\r\n    this._scopeCache = new Map();\r\n    this._resolverCache = new Map();\r\n  }\r\n  get platform() {\r\n    return this._config.platform;\r\n  }\r\n  get type() {\r\n    return this._config.type;\r\n  }\r\n  set type(type) {\r\n    this._config.type = type;\r\n  }\r\n  get data() {\r\n    return this._config.data;\r\n  }\r\n  set data(data) {\r\n    this._config.data = initData(data);\r\n  }\r\n  get options() {\r\n    return this._config.options;\r\n  }\r\n  set options(options) {\r\n    this._config.options = options;\r\n  }\r\n  get plugins() {\r\n    return this._config.plugins;\r\n  }\r\n  update() {\r\n    const config = this._config;\r\n    this.clearCache();\r\n    initOptions(config);\r\n  }\r\n  clearCache() {\r\n    this._scopeCache.clear();\r\n    this._resolverCache.clear();\r\n  }\r\n  datasetScopeKeys(datasetType) {\r\n    return cachedKeys(datasetType,\r\n      () => [[\r\n        `datasets.${datasetType}`,\r\n        ''\r\n      ]]);\r\n  }\r\n  datasetAnimationScopeKeys(datasetType, transition) {\r\n    return cachedKeys(`${datasetType}.transition.${transition}`,\r\n      () => [\r\n        [\r\n          `datasets.${datasetType}.transitions.${transition}`,\r\n          `transitions.${transition}`,\r\n        ],\r\n        [\r\n          `datasets.${datasetType}`,\r\n          ''\r\n        ]\r\n      ]);\r\n  }\r\n  datasetElementScopeKeys(datasetType, elementType) {\r\n    return cachedKeys(`${datasetType}-${elementType}`,\r\n      () => [[\r\n        `datasets.${datasetType}.elements.${elementType}`,\r\n        `datasets.${datasetType}`,\r\n        `elements.${elementType}`,\r\n        ''\r\n      ]]);\r\n  }\r\n  pluginScopeKeys(plugin) {\r\n    const id = plugin.id;\r\n    const type = this.type;\r\n    return cachedKeys(`${type}-plugin-${id}`,\r\n      () => [[\r\n        `plugins.${id}`,\r\n        ...plugin.additionalOptionScopes || [],\r\n      ]]);\r\n  }\r\n  _cachedScopes(mainScope, resetCache) {\r\n    const _scopeCache = this._scopeCache;\r\n    let cache = _scopeCache.get(mainScope);\r\n    if (!cache || resetCache) {\r\n      cache = new Map();\r\n      _scopeCache.set(mainScope, cache);\r\n    }\r\n    return cache;\r\n  }\r\n  getOptionScopes(mainScope, keyLists, resetCache) {\r\n    const {options, type} = this;\r\n    const cache = this._cachedScopes(mainScope, resetCache);\r\n    const cached = cache.get(keyLists);\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    const scopes = new Set();\r\n    keyLists.forEach(keys => {\r\n      if (mainScope) {\r\n        scopes.add(mainScope);\r\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\r\n      }\r\n      keys.forEach(key => addIfFound(scopes, options, key));\r\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\r\n      keys.forEach(key => addIfFound(scopes, defaults, key));\r\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\r\n    });\r\n    const array = Array.from(scopes);\r\n    if (array.length === 0) {\r\n      array.push(Object.create(null));\r\n    }\r\n    if (keysCached.has(keyLists)) {\r\n      cache.set(keyLists, array);\r\n    }\r\n    return array;\r\n  }\r\n  chartOptionScopes() {\r\n    const {options, type} = this;\r\n    return [\r\n      options,\r\n      overrides[type] || {},\r\n      defaults.datasets[type] || {},\r\n      {type},\r\n      defaults,\r\n      descriptors\r\n    ];\r\n  }\r\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\r\n    const result = {$shared: true};\r\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\r\n    let options = resolver;\r\n    if (needContext(resolver, names)) {\r\n      result.$shared = false;\r\n      context = isFunction(context) ? context() : context;\r\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\r\n      options = _attachContext(resolver, context, subResolver);\r\n    }\r\n    for (const prop of names) {\r\n      result[prop] = options[prop];\r\n    }\r\n    return result;\r\n  }\r\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\r\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\r\n    return isObject(context)\r\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\r\n      : resolver;\r\n  }\r\n}\r\nfunction getResolver(resolverCache, scopes, prefixes) {\r\n  let cache = resolverCache.get(scopes);\r\n  if (!cache) {\r\n    cache = new Map();\r\n    resolverCache.set(scopes, cache);\r\n  }\r\n  const cacheKey = prefixes.join();\r\n  let cached = cache.get(cacheKey);\r\n  if (!cached) {\r\n    const resolver = _createResolver(scopes, prefixes);\r\n    cached = {\r\n      resolver,\r\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\r\n    };\r\n    cache.set(cacheKey, cached);\r\n  }\r\n  return cached;\r\n}\r\nconst hasFunction = value => isObject(value)\r\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\r\nfunction needContext(proxy, names) {\r\n  const {isScriptable, isIndexable} = _descriptors(proxy);\r\n  for (const prop of names) {\r\n    const scriptable = isScriptable(prop);\r\n    const indexable = isIndexable(prop);\r\n    const value = (indexable || scriptable) && proxy[prop];\r\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\r\n      || (indexable && isArray(value))) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nvar version = \"3.7.0\";\r\n\r\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\r\nfunction positionIsHorizontal(position, axis) {\r\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\r\n}\r\nfunction compare2Level(l1, l2) {\r\n  return function(a, b) {\r\n    return a[l1] === b[l1]\r\n      ? a[l2] - b[l2]\r\n      : a[l1] - b[l1];\r\n  };\r\n}\r\nfunction onAnimationsComplete(context) {\r\n  const chart = context.chart;\r\n  const animationOptions = chart.options.animation;\r\n  chart.notifyPlugins('afterRender');\r\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\r\n}\r\nfunction onAnimationProgress(context) {\r\n  const chart = context.chart;\r\n  const animationOptions = chart.options.animation;\r\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\r\n}\r\nfunction getCanvas(item) {\r\n  if (_isDomSupported() && typeof item === 'string') {\r\n    item = document.getElementById(item);\r\n  } else if (item && item.length) {\r\n    item = item[0];\r\n  }\r\n  if (item && item.canvas) {\r\n    item = item.canvas;\r\n  }\r\n  return item;\r\n}\r\nconst instances = {};\r\nconst getChart = (key) => {\r\n  const canvas = getCanvas(key);\r\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\r\n};\r\nfunction moveNumericKeys(obj, start, move) {\r\n  const keys = Object.keys(obj);\r\n  for (const key of keys) {\r\n    const intKey = +key;\r\n    if (intKey >= start) {\r\n      const value = obj[key];\r\n      delete obj[key];\r\n      if (move > 0 || intKey > start) {\r\n        obj[intKey + move] = value;\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\r\n  if (!inChartArea || e.type === 'mouseout') {\r\n    return null;\r\n  }\r\n  if (isClick) {\r\n    return lastEvent;\r\n  }\r\n  return e;\r\n}\r\nclass Chart {\r\n  constructor(item, userConfig) {\r\n    const config = this.config = new Config(userConfig);\r\n    const initialCanvas = getCanvas(item);\r\n    const existingChart = getChart(initialCanvas);\r\n    if (existingChart) {\r\n      throw new Error(\r\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\r\n\t\t\t\t' must be destroyed before the canvas can be reused.'\r\n      );\r\n    }\r\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\r\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\r\n    this.platform.updateConfig(config);\r\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\r\n    const canvas = context && context.canvas;\r\n    const height = canvas && canvas.height;\r\n    const width = canvas && canvas.width;\r\n    this.id = uid();\r\n    this.ctx = context;\r\n    this.canvas = canvas;\r\n    this.width = width;\r\n    this.height = height;\r\n    this._options = options;\r\n    this._aspectRatio = this.aspectRatio;\r\n    this._layers = [];\r\n    this._metasets = [];\r\n    this._stacks = undefined;\r\n    this.boxes = [];\r\n    this.currentDevicePixelRatio = undefined;\r\n    this.chartArea = undefined;\r\n    this._active = [];\r\n    this._lastEvent = undefined;\r\n    this._listeners = {};\r\n    this._responsiveListeners = undefined;\r\n    this._sortedMetasets = [];\r\n    this.scales = {};\r\n    this._plugins = new PluginService();\r\n    this.$proxies = {};\r\n    this._hiddenIndices = {};\r\n    this.attached = false;\r\n    this._animationsDisabled = undefined;\r\n    this.$context = undefined;\r\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\r\n    this._dataChanges = [];\r\n    instances[this.id] = this;\r\n    if (!context || !canvas) {\r\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\r\n      return;\r\n    }\r\n    animator.listen(this, 'complete', onAnimationsComplete);\r\n    animator.listen(this, 'progress', onAnimationProgress);\r\n    this._initialize();\r\n    if (this.attached) {\r\n      this.update();\r\n    }\r\n  }\r\n  get aspectRatio() {\r\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\r\n    if (!isNullOrUndef(aspectRatio)) {\r\n      return aspectRatio;\r\n    }\r\n    if (maintainAspectRatio && _aspectRatio) {\r\n      return _aspectRatio;\r\n    }\r\n    return height ? width / height : null;\r\n  }\r\n  get data() {\r\n    return this.config.data;\r\n  }\r\n  set data(data) {\r\n    this.config.data = data;\r\n  }\r\n  get options() {\r\n    return this._options;\r\n  }\r\n  set options(options) {\r\n    this.config.options = options;\r\n  }\r\n  _initialize() {\r\n    this.notifyPlugins('beforeInit');\r\n    if (this.options.responsive) {\r\n      this.resize();\r\n    } else {\r\n      retinaScale(this, this.options.devicePixelRatio);\r\n    }\r\n    this.bindEvents();\r\n    this.notifyPlugins('afterInit');\r\n    return this;\r\n  }\r\n  clear() {\r\n    clearCanvas(this.canvas, this.ctx);\r\n    return this;\r\n  }\r\n  stop() {\r\n    animator.stop(this);\r\n    return this;\r\n  }\r\n  resize(width, height) {\r\n    if (!animator.running(this)) {\r\n      this._resize(width, height);\r\n    } else {\r\n      this._resizeBeforeDraw = {width, height};\r\n    }\r\n  }\r\n  _resize(width, height) {\r\n    const options = this.options;\r\n    const canvas = this.canvas;\r\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\r\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\r\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\r\n    const mode = this.width ? 'resize' : 'attach';\r\n    this.width = newSize.width;\r\n    this.height = newSize.height;\r\n    this._aspectRatio = this.aspectRatio;\r\n    if (!retinaScale(this, newRatio, true)) {\r\n      return;\r\n    }\r\n    this.notifyPlugins('resize', {size: newSize});\r\n    callback(options.onResize, [this, newSize], this);\r\n    if (this.attached) {\r\n      if (this._doResize(mode)) {\r\n        this.render();\r\n      }\r\n    }\r\n  }\r\n  ensureScalesHaveIDs() {\r\n    const options = this.options;\r\n    const scalesOptions = options.scales || {};\r\n    each(scalesOptions, (axisOptions, axisID) => {\r\n      axisOptions.id = axisID;\r\n    });\r\n  }\r\n  buildOrUpdateScales() {\r\n    const options = this.options;\r\n    const scaleOpts = options.scales;\r\n    const scales = this.scales;\r\n    const updated = Object.keys(scales).reduce((obj, id) => {\r\n      obj[id] = false;\r\n      return obj;\r\n    }, {});\r\n    let items = [];\r\n    if (scaleOpts) {\r\n      items = items.concat(\r\n        Object.keys(scaleOpts).map((id) => {\r\n          const scaleOptions = scaleOpts[id];\r\n          const axis = determineAxis(id, scaleOptions);\r\n          const isRadial = axis === 'r';\r\n          const isHorizontal = axis === 'x';\r\n          return {\r\n            options: scaleOptions,\r\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\r\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\r\n          };\r\n        })\r\n      );\r\n    }\r\n    each(items, (item) => {\r\n      const scaleOptions = item.options;\r\n      const id = scaleOptions.id;\r\n      const axis = determineAxis(id, scaleOptions);\r\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\r\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\r\n        scaleOptions.position = item.dposition;\r\n      }\r\n      updated[id] = true;\r\n      let scale = null;\r\n      if (id in scales && scales[id].type === scaleType) {\r\n        scale = scales[id];\r\n      } else {\r\n        const scaleClass = registry.getScale(scaleType);\r\n        scale = new scaleClass({\r\n          id,\r\n          type: scaleType,\r\n          ctx: this.ctx,\r\n          chart: this\r\n        });\r\n        scales[scale.id] = scale;\r\n      }\r\n      scale.init(scaleOptions, options);\r\n    });\r\n    each(updated, (hasUpdated, id) => {\r\n      if (!hasUpdated) {\r\n        delete scales[id];\r\n      }\r\n    });\r\n    each(scales, (scale) => {\r\n      layouts.configure(this, scale, scale.options);\r\n      layouts.addBox(this, scale);\r\n    });\r\n  }\r\n  _updateMetasets() {\r\n    const metasets = this._metasets;\r\n    const numData = this.data.datasets.length;\r\n    const numMeta = metasets.length;\r\n    metasets.sort((a, b) => a.index - b.index);\r\n    if (numMeta > numData) {\r\n      for (let i = numData; i < numMeta; ++i) {\r\n        this._destroyDatasetMeta(i);\r\n      }\r\n      metasets.splice(numData, numMeta - numData);\r\n    }\r\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\r\n  }\r\n  _removeUnreferencedMetasets() {\r\n    const {_metasets: metasets, data: {datasets}} = this;\r\n    if (metasets.length > datasets.length) {\r\n      delete this._stacks;\r\n    }\r\n    metasets.forEach((meta, index) => {\r\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\r\n        this._destroyDatasetMeta(index);\r\n      }\r\n    });\r\n  }\r\n  buildOrUpdateControllers() {\r\n    const newControllers = [];\r\n    const datasets = this.data.datasets;\r\n    let i, ilen;\r\n    this._removeUnreferencedMetasets();\r\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\r\n      const dataset = datasets[i];\r\n      let meta = this.getDatasetMeta(i);\r\n      const type = dataset.type || this.config.type;\r\n      if (meta.type && meta.type !== type) {\r\n        this._destroyDatasetMeta(i);\r\n        meta = this.getDatasetMeta(i);\r\n      }\r\n      meta.type = type;\r\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\r\n      meta.order = dataset.order || 0;\r\n      meta.index = i;\r\n      meta.label = '' + dataset.label;\r\n      meta.visible = this.isDatasetVisible(i);\r\n      if (meta.controller) {\r\n        meta.controller.updateIndex(i);\r\n        meta.controller.linkScales();\r\n      } else {\r\n        const ControllerClass = registry.getController(type);\r\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\r\n        Object.assign(ControllerClass.prototype, {\r\n          dataElementType: registry.getElement(dataElementType),\r\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\r\n        });\r\n        meta.controller = new ControllerClass(this, i);\r\n        newControllers.push(meta.controller);\r\n      }\r\n    }\r\n    this._updateMetasets();\r\n    return newControllers;\r\n  }\r\n  _resetElements() {\r\n    each(this.data.datasets, (dataset, datasetIndex) => {\r\n      this.getDatasetMeta(datasetIndex).controller.reset();\r\n    }, this);\r\n  }\r\n  reset() {\r\n    this._resetElements();\r\n    this.notifyPlugins('reset');\r\n  }\r\n  update(mode) {\r\n    const config = this.config;\r\n    config.update();\r\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\r\n    const animsDisabled = this._animationsDisabled = !options.animation;\r\n    this._updateScales();\r\n    this._checkEventBindings();\r\n    this._updateHiddenIndices();\r\n    this._plugins.invalidate();\r\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const newControllers = this.buildOrUpdateControllers();\r\n    this.notifyPlugins('beforeElementsUpdate');\r\n    let minPadding = 0;\r\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\r\n      const {controller} = this.getDatasetMeta(i);\r\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\r\n      controller.buildOrUpdateElements(reset);\r\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\r\n    }\r\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\r\n    this._updateLayout(minPadding);\r\n    if (!animsDisabled) {\r\n      each(newControllers, (controller) => {\r\n        controller.reset();\r\n      });\r\n    }\r\n    this._updateDatasets(mode);\r\n    this.notifyPlugins('afterUpdate', {mode});\r\n    this._layers.sort(compare2Level('z', '_idx'));\r\n    const {_active, _lastEvent} = this;\r\n    if (_lastEvent) {\r\n      this._eventHandler(_lastEvent, true);\r\n    } else if (_active.length) {\r\n      this._updateHoverStyles(_active, _active, true);\r\n    }\r\n    this.render();\r\n  }\r\n  _updateScales() {\r\n    each(this.scales, (scale) => {\r\n      layouts.removeBox(this, scale);\r\n    });\r\n    this.ensureScalesHaveIDs();\r\n    this.buildOrUpdateScales();\r\n  }\r\n  _checkEventBindings() {\r\n    const options = this.options;\r\n    const existingEvents = new Set(Object.keys(this._listeners));\r\n    const newEvents = new Set(options.events);\r\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\r\n      this.unbindEvents();\r\n      this.bindEvents();\r\n    }\r\n  }\r\n  _updateHiddenIndices() {\r\n    const {_hiddenIndices} = this;\r\n    const changes = this._getUniformDataChanges() || [];\r\n    for (const {method, start, count} of changes) {\r\n      const move = method === '_removeElements' ? -count : count;\r\n      moveNumericKeys(_hiddenIndices, start, move);\r\n    }\r\n  }\r\n  _getUniformDataChanges() {\r\n    const _dataChanges = this._dataChanges;\r\n    if (!_dataChanges || !_dataChanges.length) {\r\n      return;\r\n    }\r\n    this._dataChanges = [];\r\n    const datasetCount = this.data.datasets.length;\r\n    const makeSet = (idx) => new Set(\r\n      _dataChanges\r\n        .filter(c => c[0] === idx)\r\n        .map((c, i) => i + ',' + c.splice(1).join(','))\r\n    );\r\n    const changeSet = makeSet(0);\r\n    for (let i = 1; i < datasetCount; i++) {\r\n      if (!setsEqual(changeSet, makeSet(i))) {\r\n        return;\r\n      }\r\n    }\r\n    return Array.from(changeSet)\r\n      .map(c => c.split(','))\r\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\r\n  }\r\n  _updateLayout(minPadding) {\r\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    layouts.update(this, this.width, this.height, minPadding);\r\n    const area = this.chartArea;\r\n    const noArea = area.width <= 0 || area.height <= 0;\r\n    this._layers = [];\r\n    each(this.boxes, (box) => {\r\n      if (noArea && box.position === 'chartArea') {\r\n        return;\r\n      }\r\n      if (box.configure) {\r\n        box.configure();\r\n      }\r\n      this._layers.push(...box._layers());\r\n    }, this);\r\n    this._layers.forEach((item, index) => {\r\n      item._idx = index;\r\n    });\r\n    this.notifyPlugins('afterLayout');\r\n  }\r\n  _updateDatasets(mode) {\r\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n      this.getDatasetMeta(i).controller.configure();\r\n    }\r\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\r\n    }\r\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\r\n  }\r\n  _updateDataset(index, mode) {\r\n    const meta = this.getDatasetMeta(index);\r\n    const args = {meta, index, mode, cancelable: true};\r\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\r\n      return;\r\n    }\r\n    meta.controller._update(mode);\r\n    args.cancelable = false;\r\n    this.notifyPlugins('afterDatasetUpdate', args);\r\n  }\r\n  render() {\r\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    if (animator.has(this)) {\r\n      if (this.attached && !animator.running(this)) {\r\n        animator.start(this);\r\n      }\r\n    } else {\r\n      this.draw();\r\n      onAnimationsComplete({chart: this});\r\n    }\r\n  }\r\n  draw() {\r\n    let i;\r\n    if (this._resizeBeforeDraw) {\r\n      const {width, height} = this._resizeBeforeDraw;\r\n      this._resize(width, height);\r\n      this._resizeBeforeDraw = null;\r\n    }\r\n    this.clear();\r\n    if (this.width <= 0 || this.height <= 0) {\r\n      return;\r\n    }\r\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const layers = this._layers;\r\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\r\n      layers[i].draw(this.chartArea);\r\n    }\r\n    this._drawDatasets();\r\n    for (; i < layers.length; ++i) {\r\n      layers[i].draw(this.chartArea);\r\n    }\r\n    this.notifyPlugins('afterDraw');\r\n  }\r\n  _getSortedDatasetMetas(filterVisible) {\r\n    const metasets = this._sortedMetasets;\r\n    const result = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n      const meta = metasets[i];\r\n      if (!filterVisible || meta.visible) {\r\n        result.push(meta);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  getSortedVisibleDatasetMetas() {\r\n    return this._getSortedDatasetMetas(true);\r\n  }\r\n  _drawDatasets() {\r\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const metasets = this.getSortedVisibleDatasetMetas();\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      this._drawDataset(metasets[i]);\r\n    }\r\n    this.notifyPlugins('afterDatasetsDraw');\r\n  }\r\n  _drawDataset(meta) {\r\n    const ctx = this.ctx;\r\n    const clip = meta._clip;\r\n    const useClip = !clip.disabled;\r\n    const area = this.chartArea;\r\n    const args = {\r\n      meta,\r\n      index: meta.index,\r\n      cancelable: true\r\n    };\r\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\r\n      return;\r\n    }\r\n    if (useClip) {\r\n      clipArea(ctx, {\r\n        left: clip.left === false ? 0 : area.left - clip.left,\r\n        right: clip.right === false ? this.width : area.right + clip.right,\r\n        top: clip.top === false ? 0 : area.top - clip.top,\r\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\r\n      });\r\n    }\r\n    meta.controller.draw();\r\n    if (useClip) {\r\n      unclipArea(ctx);\r\n    }\r\n    args.cancelable = false;\r\n    this.notifyPlugins('afterDatasetDraw', args);\r\n  }\r\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\r\n    const method = Interaction.modes[mode];\r\n    if (typeof method === 'function') {\r\n      return method(this, e, options, useFinalPosition);\r\n    }\r\n    return [];\r\n  }\r\n  getDatasetMeta(datasetIndex) {\r\n    const dataset = this.data.datasets[datasetIndex];\r\n    const metasets = this._metasets;\r\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\r\n    if (!meta) {\r\n      meta = {\r\n        type: null,\r\n        data: [],\r\n        dataset: null,\r\n        controller: null,\r\n        hidden: null,\r\n        xAxisID: null,\r\n        yAxisID: null,\r\n        order: dataset && dataset.order || 0,\r\n        index: datasetIndex,\r\n        _dataset: dataset,\r\n        _parsed: [],\r\n        _sorted: false\r\n      };\r\n      metasets.push(meta);\r\n    }\r\n    return meta;\r\n  }\r\n  getContext() {\r\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\r\n  }\r\n  getVisibleDatasetCount() {\r\n    return this.getSortedVisibleDatasetMetas().length;\r\n  }\r\n  isDatasetVisible(datasetIndex) {\r\n    const dataset = this.data.datasets[datasetIndex];\r\n    if (!dataset) {\r\n      return false;\r\n    }\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\r\n  }\r\n  setDatasetVisibility(datasetIndex, visible) {\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    meta.hidden = !visible;\r\n  }\r\n  toggleDataVisibility(index) {\r\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\r\n  }\r\n  getDataVisibility(index) {\r\n    return !this._hiddenIndices[index];\r\n  }\r\n  _updateVisibility(datasetIndex, dataIndex, visible) {\r\n    const mode = visible ? 'show' : 'hide';\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    const anims = meta.controller._resolveAnimations(undefined, mode);\r\n    if (defined(dataIndex)) {\r\n      meta.data[dataIndex].hidden = !visible;\r\n      this.update();\r\n    } else {\r\n      this.setDatasetVisibility(datasetIndex, visible);\r\n      anims.update(meta, {visible});\r\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\r\n    }\r\n  }\r\n  hide(datasetIndex, dataIndex) {\r\n    this._updateVisibility(datasetIndex, dataIndex, false);\r\n  }\r\n  show(datasetIndex, dataIndex) {\r\n    this._updateVisibility(datasetIndex, dataIndex, true);\r\n  }\r\n  _destroyDatasetMeta(datasetIndex) {\r\n    const meta = this._metasets[datasetIndex];\r\n    if (meta && meta.controller) {\r\n      meta.controller._destroy();\r\n    }\r\n    delete this._metasets[datasetIndex];\r\n  }\r\n  _stop() {\r\n    let i, ilen;\r\n    this.stop();\r\n    animator.remove(this);\r\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n      this._destroyDatasetMeta(i);\r\n    }\r\n  }\r\n  destroy() {\r\n    this.notifyPlugins('beforeDestroy');\r\n    const {canvas, ctx} = this;\r\n    this._stop();\r\n    this.config.clearCache();\r\n    if (canvas) {\r\n      this.unbindEvents();\r\n      clearCanvas(canvas, ctx);\r\n      this.platform.releaseContext(ctx);\r\n      this.canvas = null;\r\n      this.ctx = null;\r\n    }\r\n    this.notifyPlugins('destroy');\r\n    delete instances[this.id];\r\n    this.notifyPlugins('afterDestroy');\r\n  }\r\n  toBase64Image(...args) {\r\n    return this.canvas.toDataURL(...args);\r\n  }\r\n  bindEvents() {\r\n    this.bindUserEvents();\r\n    if (this.options.responsive) {\r\n      this.bindResponsiveEvents();\r\n    } else {\r\n      this.attached = true;\r\n    }\r\n  }\r\n  bindUserEvents() {\r\n    const listeners = this._listeners;\r\n    const platform = this.platform;\r\n    const _add = (type, listener) => {\r\n      platform.addEventListener(this, type, listener);\r\n      listeners[type] = listener;\r\n    };\r\n    const listener = (e, x, y) => {\r\n      e.offsetX = x;\r\n      e.offsetY = y;\r\n      this._eventHandler(e);\r\n    };\r\n    each(this.options.events, (type) => _add(type, listener));\r\n  }\r\n  bindResponsiveEvents() {\r\n    if (!this._responsiveListeners) {\r\n      this._responsiveListeners = {};\r\n    }\r\n    const listeners = this._responsiveListeners;\r\n    const platform = this.platform;\r\n    const _add = (type, listener) => {\r\n      platform.addEventListener(this, type, listener);\r\n      listeners[type] = listener;\r\n    };\r\n    const _remove = (type, listener) => {\r\n      if (listeners[type]) {\r\n        platform.removeEventListener(this, type, listener);\r\n        delete listeners[type];\r\n      }\r\n    };\r\n    const listener = (width, height) => {\r\n      if (this.canvas) {\r\n        this.resize(width, height);\r\n      }\r\n    };\r\n    let detached;\r\n    const attached = () => {\r\n      _remove('attach', attached);\r\n      this.attached = true;\r\n      this.resize();\r\n      _add('resize', listener);\r\n      _add('detach', detached);\r\n    };\r\n    detached = () => {\r\n      this.attached = false;\r\n      _remove('resize', listener);\r\n      this._stop();\r\n      this._resize(0, 0);\r\n      _add('attach', attached);\r\n    };\r\n    if (platform.isAttached(this.canvas)) {\r\n      attached();\r\n    } else {\r\n      detached();\r\n    }\r\n  }\r\n  unbindEvents() {\r\n    each(this._listeners, (listener, type) => {\r\n      this.platform.removeEventListener(this, type, listener);\r\n    });\r\n    this._listeners = {};\r\n    each(this._responsiveListeners, (listener, type) => {\r\n      this.platform.removeEventListener(this, type, listener);\r\n    });\r\n    this._responsiveListeners = undefined;\r\n  }\r\n  updateHoverStyle(items, mode, enabled) {\r\n    const prefix = enabled ? 'set' : 'remove';\r\n    let meta, item, i, ilen;\r\n    if (mode === 'dataset') {\r\n      meta = this.getDatasetMeta(items[0].datasetIndex);\r\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\r\n    }\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      item = items[i];\r\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\r\n      if (controller) {\r\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\r\n      }\r\n    }\r\n  }\r\n  getActiveElements() {\r\n    return this._active || [];\r\n  }\r\n  setActiveElements(activeElements) {\r\n    const lastActive = this._active || [];\r\n    const active = activeElements.map(({datasetIndex, index}) => {\r\n      const meta = this.getDatasetMeta(datasetIndex);\r\n      if (!meta) {\r\n        throw new Error('No dataset found at index ' + datasetIndex);\r\n      }\r\n      return {\r\n        datasetIndex,\r\n        element: meta.data[index],\r\n        index,\r\n      };\r\n    });\r\n    const changed = !_elementsEqual(active, lastActive);\r\n    if (changed) {\r\n      this._active = active;\r\n      this._lastEvent = null;\r\n      this._updateHoverStyles(active, lastActive);\r\n    }\r\n  }\r\n  notifyPlugins(hook, args, filter) {\r\n    return this._plugins.notify(this, hook, args, filter);\r\n  }\r\n  _updateHoverStyles(active, lastActive, replay) {\r\n    const hoverOptions = this.options.hover;\r\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\r\n    const deactivated = diff(lastActive, active);\r\n    const activated = replay ? active : diff(active, lastActive);\r\n    if (deactivated.length) {\r\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\r\n    }\r\n    if (activated.length && hoverOptions.mode) {\r\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\r\n    }\r\n  }\r\n  _eventHandler(e, replay) {\r\n    const args = {\r\n      event: e,\r\n      replay,\r\n      cancelable: true,\r\n      inChartArea: _isPointInArea(e, this.chartArea, this._minPadding)\r\n    };\r\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\r\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\r\n      return;\r\n    }\r\n    const changed = this._handleEvent(e, replay, args.inChartArea);\r\n    args.cancelable = false;\r\n    this.notifyPlugins('afterEvent', args, eventFilter);\r\n    if (changed || args.changed) {\r\n      this.render();\r\n    }\r\n    return this;\r\n  }\r\n  _handleEvent(e, replay, inChartArea) {\r\n    const {_active: lastActive = [], options} = this;\r\n    const useFinalPosition = replay;\r\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\r\n    const isClick = _isClickEvent(e);\r\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\r\n    if (inChartArea) {\r\n      this._lastEvent = null;\r\n      callback(options.onHover, [e, active, this], this);\r\n      if (isClick) {\r\n        callback(options.onClick, [e, active, this], this);\r\n      }\r\n    }\r\n    const changed = !_elementsEqual(active, lastActive);\r\n    if (changed || replay) {\r\n      this._active = active;\r\n      this._updateHoverStyles(active, lastActive, replay);\r\n    }\r\n    this._lastEvent = lastEvent;\r\n    return changed;\r\n  }\r\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\r\n    if (e.type === 'mouseout') {\r\n      return [];\r\n    }\r\n    if (!inChartArea) {\r\n      return lastActive;\r\n    }\r\n    const hoverOptions = this.options.hover;\r\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\r\n  }\r\n}\r\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\r\nconst enumerable = true;\r\nObject.defineProperties(Chart, {\r\n  defaults: {\r\n    enumerable,\r\n    value: defaults\r\n  },\r\n  instances: {\r\n    enumerable,\r\n    value: instances\r\n  },\r\n  overrides: {\r\n    enumerable,\r\n    value: overrides\r\n  },\r\n  registry: {\r\n    enumerable,\r\n    value: registry\r\n  },\r\n  version: {\r\n    enumerable,\r\n    value: version\r\n  },\r\n  getChart: {\r\n    enumerable,\r\n    value: getChart\r\n  },\r\n  register: {\r\n    enumerable,\r\n    value: (...items) => {\r\n      registry.add(...items);\r\n      invalidatePlugins();\r\n    }\r\n  },\r\n  unregister: {\r\n    enumerable,\r\n    value: (...items) => {\r\n      registry.remove(...items);\r\n      invalidatePlugins();\r\n    }\r\n  }\r\n});\r\n\r\nfunction abstract() {\r\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\r\n}\r\nclass DateAdapter {\r\n  constructor(options) {\r\n    this.options = options || {};\r\n  }\r\n  formats() {\r\n    return abstract();\r\n  }\r\n  parse(value, format) {\r\n    return abstract();\r\n  }\r\n  format(timestamp, format) {\r\n    return abstract();\r\n  }\r\n  add(timestamp, amount, unit) {\r\n    return abstract();\r\n  }\r\n  diff(a, b, unit) {\r\n    return abstract();\r\n  }\r\n  startOf(timestamp, unit, weekday) {\r\n    return abstract();\r\n  }\r\n  endOf(timestamp, unit) {\r\n    return abstract();\r\n  }\r\n}\r\nDateAdapter.override = function(members) {\r\n  Object.assign(DateAdapter.prototype, members);\r\n};\r\nvar _adapters = {\r\n  _date: DateAdapter\r\n};\r\n\r\nfunction getAllScaleValues(scale, type) {\r\n  if (!scale._cache.$bar) {\r\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\r\n    let values = [];\r\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\r\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\r\n    }\r\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\r\n  }\r\n  return scale._cache.$bar;\r\n}\r\nfunction computeMinSampleSize(meta) {\r\n  const scale = meta.iScale;\r\n  const values = getAllScaleValues(scale, meta.type);\r\n  let min = scale._length;\r\n  let i, ilen, curr, prev;\r\n  const updateMinAndPrev = () => {\r\n    if (curr === 32767 || curr === -32768) {\r\n      return;\r\n    }\r\n    if (defined(prev)) {\r\n      min = Math.min(min, Math.abs(curr - prev) || min);\r\n    }\r\n    prev = curr;\r\n  };\r\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\r\n    curr = scale.getPixelForValue(values[i]);\r\n    updateMinAndPrev();\r\n  }\r\n  prev = undefined;\r\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\r\n    curr = scale.getPixelForTick(i);\r\n    updateMinAndPrev();\r\n  }\r\n  return min;\r\n}\r\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\r\n  const thickness = options.barThickness;\r\n  let size, ratio;\r\n  if (isNullOrUndef(thickness)) {\r\n    size = ruler.min * options.categoryPercentage;\r\n    ratio = options.barPercentage;\r\n  } else {\r\n    size = thickness * stackCount;\r\n    ratio = 1;\r\n  }\r\n  return {\r\n    chunk: size / stackCount,\r\n    ratio,\r\n    start: ruler.pixels[index] - (size / 2)\r\n  };\r\n}\r\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\r\n  const pixels = ruler.pixels;\r\n  const curr = pixels[index];\r\n  let prev = index > 0 ? pixels[index - 1] : null;\r\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\r\n  const percent = options.categoryPercentage;\r\n  if (prev === null) {\r\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\r\n  }\r\n  if (next === null) {\r\n    next = curr + curr - prev;\r\n  }\r\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\r\n  const size = Math.abs(next - prev) / 2 * percent;\r\n  return {\r\n    chunk: size / stackCount,\r\n    ratio: options.barPercentage,\r\n    start\r\n  };\r\n}\r\nfunction parseFloatBar(entry, item, vScale, i) {\r\n  const startValue = vScale.parse(entry[0], i);\r\n  const endValue = vScale.parse(entry[1], i);\r\n  const min = Math.min(startValue, endValue);\r\n  const max = Math.max(startValue, endValue);\r\n  let barStart = min;\r\n  let barEnd = max;\r\n  if (Math.abs(min) > Math.abs(max)) {\r\n    barStart = max;\r\n    barEnd = min;\r\n  }\r\n  item[vScale.axis] = barEnd;\r\n  item._custom = {\r\n    barStart,\r\n    barEnd,\r\n    start: startValue,\r\n    end: endValue,\r\n    min,\r\n    max\r\n  };\r\n}\r\nfunction parseValue(entry, item, vScale, i) {\r\n  if (isArray(entry)) {\r\n    parseFloatBar(entry, item, vScale, i);\r\n  } else {\r\n    item[vScale.axis] = vScale.parse(entry, i);\r\n  }\r\n  return item;\r\n}\r\nfunction parseArrayOrPrimitive(meta, data, start, count) {\r\n  const iScale = meta.iScale;\r\n  const vScale = meta.vScale;\r\n  const labels = iScale.getLabels();\r\n  const singleScale = iScale === vScale;\r\n  const parsed = [];\r\n  let i, ilen, item, entry;\r\n  for (i = start, ilen = start + count; i < ilen; ++i) {\r\n    entry = data[i];\r\n    item = {};\r\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\r\n    parsed.push(parseValue(entry, item, vScale, i));\r\n  }\r\n  return parsed;\r\n}\r\nfunction isFloatBar(custom) {\r\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\r\n}\r\nfunction barSign(size, vScale, actualBase) {\r\n  if (size !== 0) {\r\n    return sign(size);\r\n  }\r\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\r\n}\r\nfunction borderProps(properties) {\r\n  let reverse, start, end, top, bottom;\r\n  if (properties.horizontal) {\r\n    reverse = properties.base > properties.x;\r\n    start = 'left';\r\n    end = 'right';\r\n  } else {\r\n    reverse = properties.base < properties.y;\r\n    start = 'bottom';\r\n    end = 'top';\r\n  }\r\n  if (reverse) {\r\n    top = 'end';\r\n    bottom = 'start';\r\n  } else {\r\n    top = 'start';\r\n    bottom = 'end';\r\n  }\r\n  return {start, end, reverse, top, bottom};\r\n}\r\nfunction setBorderSkipped(properties, options, stack, index) {\r\n  let edge = options.borderSkipped;\r\n  const res = {};\r\n  if (!edge) {\r\n    properties.borderSkipped = res;\r\n    return;\r\n  }\r\n  const {start, end, reverse, top, bottom} = borderProps(properties);\r\n  if (edge === 'middle' && stack) {\r\n    properties.enableBorderRadius = true;\r\n    if ((stack._top || 0) === index) {\r\n      edge = top;\r\n    } else if ((stack._bottom || 0) === index) {\r\n      edge = bottom;\r\n    } else {\r\n      res[parseEdge(bottom, start, end, reverse)] = true;\r\n      edge = top;\r\n    }\r\n  }\r\n  res[parseEdge(edge, start, end, reverse)] = true;\r\n  properties.borderSkipped = res;\r\n}\r\nfunction parseEdge(edge, a, b, reverse) {\r\n  if (reverse) {\r\n    edge = swap(edge, a, b);\r\n    edge = startEnd(edge, b, a);\r\n  } else {\r\n    edge = startEnd(edge, a, b);\r\n  }\r\n  return edge;\r\n}\r\nfunction swap(orig, v1, v2) {\r\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\r\n}\r\nfunction startEnd(v, start, end) {\r\n  return v === 'start' ? start : v === 'end' ? end : v;\r\n}\r\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\r\n  properties.inflateAmount = inflateAmount === 'auto'\r\n    ? ratio === 1 ? 0.33 : 0\r\n    : inflateAmount;\r\n}\r\nclass BarController extends DatasetController {\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    return parseArrayOrPrimitive(meta, data, start, count);\r\n  }\r\n  parseArrayData(meta, data, start, count) {\r\n    return parseArrayOrPrimitive(meta, data, start, count);\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const {iScale, vScale} = meta;\r\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\r\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\r\n    const parsed = [];\r\n    let i, ilen, item, obj;\r\n    for (i = start, ilen = start + count; i < ilen; ++i) {\r\n      obj = data[i];\r\n      item = {};\r\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\r\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\r\n    }\r\n    return parsed;\r\n  }\r\n  updateRangeFromParsed(range, scale, parsed, stack) {\r\n    super.updateRangeFromParsed(range, scale, parsed, stack);\r\n    const custom = parsed._custom;\r\n    if (custom && scale === this._cachedMeta.vScale) {\r\n      range.min = Math.min(range.min, custom.min);\r\n      range.max = Math.max(range.max, custom.max);\r\n    }\r\n  }\r\n  getMaxOverflow() {\r\n    return 0;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const {iScale, vScale} = meta;\r\n    const parsed = this.getParsed(index);\r\n    const custom = parsed._custom;\r\n    const value = isFloatBar(custom)\r\n      ? '[' + custom.start + ', ' + custom.end + ']'\r\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\r\n    return {\r\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\r\n      value\r\n    };\r\n  }\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    super.initialize();\r\n    const meta = this._cachedMeta;\r\n    meta.stack = this.getDataset().stack;\r\n  }\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    this.updateElements(meta.data, 0, meta.data.length, mode);\r\n  }\r\n  updateElements(bars, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {index, _cachedMeta: {vScale}} = this;\r\n    const base = vScale.getBasePixel();\r\n    const horizontal = vScale.isHorizontal();\r\n    const ruler = this._getRuler();\r\n    const firstOpts = this.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = this.getSharedOptions(firstOpts);\r\n    const includeOptions = this.includeOptions(mode, sharedOptions);\r\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n    for (let i = start; i < start + count; i++) {\r\n      const parsed = this.getParsed(i);\r\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\r\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\r\n      const stack = (parsed._stacks || {})[vScale.axis];\r\n      const properties = {\r\n        horizontal,\r\n        base: vpixels.base,\r\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\r\n        x: horizontal ? vpixels.head : ipixels.center,\r\n        y: horizontal ? ipixels.center : vpixels.head,\r\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\r\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\r\n      };\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\r\n      }\r\n      const options = properties.options || bars[i].options;\r\n      setBorderSkipped(properties, options, stack, index);\r\n      setInflateAmount(properties, options, ruler.ratio);\r\n      this.updateElement(bars[i], i, properties, mode);\r\n    }\r\n  }\r\n  _getStacks(last, dataIndex) {\r\n    const meta = this._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\r\n    const stacked = iScale.options.stacked;\r\n    const ilen = metasets.length;\r\n    const stacks = [];\r\n    let i, item;\r\n    for (i = 0; i < ilen; ++i) {\r\n      item = metasets[i];\r\n      if (!item.controller.options.grouped) {\r\n        continue;\r\n      }\r\n      if (typeof dataIndex !== 'undefined') {\r\n        const val = item.controller.getParsed(dataIndex)[\r\n          item.controller._cachedMeta.vScale.axis\r\n        ];\r\n        if (isNullOrUndef(val) || isNaN(val)) {\r\n          continue;\r\n        }\r\n      }\r\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\r\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\r\n        stacks.push(item.stack);\r\n      }\r\n      if (item.index === last) {\r\n        break;\r\n      }\r\n    }\r\n    if (!stacks.length) {\r\n      stacks.push(undefined);\r\n    }\r\n    return stacks;\r\n  }\r\n  _getStackCount(index) {\r\n    return this._getStacks(undefined, index).length;\r\n  }\r\n  _getStackIndex(datasetIndex, name, dataIndex) {\r\n    const stacks = this._getStacks(datasetIndex, dataIndex);\r\n    const index = (name !== undefined)\r\n      ? stacks.indexOf(name)\r\n      : -1;\r\n    return (index === -1)\r\n      ? stacks.length - 1\r\n      : index;\r\n  }\r\n  _getRuler() {\r\n    const opts = this.options;\r\n    const meta = this._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const pixels = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\r\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\r\n    }\r\n    const barThickness = opts.barThickness;\r\n    const min = barThickness || computeMinSampleSize(meta);\r\n    return {\r\n      min,\r\n      pixels,\r\n      start: iScale._startPixel,\r\n      end: iScale._endPixel,\r\n      stackCount: this._getStackCount(),\r\n      scale: iScale,\r\n      grouped: opts.grouped,\r\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\r\n    };\r\n  }\r\n  _calculateBarValuePixels(index) {\r\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\r\n    const actualBase = baseValue || 0;\r\n    const parsed = this.getParsed(index);\r\n    const custom = parsed._custom;\r\n    const floating = isFloatBar(custom);\r\n    let value = parsed[vScale.axis];\r\n    let start = 0;\r\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\r\n    let head, size;\r\n    if (length !== value) {\r\n      start = length - value;\r\n      length = value;\r\n    }\r\n    if (floating) {\r\n      value = custom.barStart;\r\n      length = custom.barEnd - custom.barStart;\r\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\r\n        start = 0;\r\n      }\r\n      start += value;\r\n    }\r\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\r\n    let base = vScale.getPixelForValue(startValue);\r\n    if (this.chart.getDataVisibility(index)) {\r\n      head = vScale.getPixelForValue(start + length);\r\n    } else {\r\n      head = base;\r\n    }\r\n    size = head - base;\r\n    if (Math.abs(size) < minBarLength) {\r\n      size = barSign(size, vScale, actualBase) * minBarLength;\r\n      if (value === actualBase) {\r\n        base -= size / 2;\r\n      }\r\n      head = base + size;\r\n    }\r\n    if (base === vScale.getPixelForValue(actualBase)) {\r\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\r\n      base += halfGrid;\r\n      size -= halfGrid;\r\n    }\r\n    return {\r\n      size,\r\n      base,\r\n      head,\r\n      center: head + size / 2\r\n    };\r\n  }\r\n  _calculateBarIndexPixels(index, ruler) {\r\n    const scale = ruler.scale;\r\n    const options = this.options;\r\n    const skipNull = options.skipNull;\r\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\r\n    let center, size;\r\n    if (ruler.grouped) {\r\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\r\n      const range = options.barThickness === 'flex'\r\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\r\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\r\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\r\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\r\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\r\n    } else {\r\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\r\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\r\n    }\r\n    return {\r\n      base: center - size / 2,\r\n      head: center + size / 2,\r\n      center,\r\n      size\r\n    };\r\n  }\r\n  draw() {\r\n    const meta = this._cachedMeta;\r\n    const vScale = meta.vScale;\r\n    const rects = meta.data;\r\n    const ilen = rects.length;\r\n    let i = 0;\r\n    for (; i < ilen; ++i) {\r\n      if (this.getParsed(i)[vScale.axis] !== null) {\r\n        rects[i].draw(this._ctx);\r\n      }\r\n    }\r\n  }\r\n}\r\nBarController.id = 'bar';\r\nBarController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'bar',\r\n  categoryPercentage: 0.8,\r\n  barPercentage: 0.9,\r\n  grouped: true,\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'base', 'width', 'height']\r\n    }\r\n  }\r\n};\r\nBarController.overrides = {\r\n  scales: {\r\n    _index_: {\r\n      type: 'category',\r\n      offset: true,\r\n      grid: {\r\n        offset: true\r\n      }\r\n    },\r\n    _value_: {\r\n      type: 'linear',\r\n      beginAtZero: true,\r\n    }\r\n  }\r\n};\r\n\r\nclass BubbleController extends DatasetController {\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    super.initialize();\r\n  }\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\r\n    for (let i = 0; i < parsed.length; i++) {\r\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\r\n    }\r\n    return parsed;\r\n  }\r\n  parseArrayData(meta, data, start, count) {\r\n    const parsed = super.parseArrayData(meta, data, start, count);\r\n    for (let i = 0; i < parsed.length; i++) {\r\n      const item = data[start + i];\r\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\r\n    }\r\n    return parsed;\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const parsed = super.parseObjectData(meta, data, start, count);\r\n    for (let i = 0; i < parsed.length; i++) {\r\n      const item = data[start + i];\r\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\r\n    }\r\n    return parsed;\r\n  }\r\n  getMaxOverflow() {\r\n    const data = this._cachedMeta.data;\r\n    let max = 0;\r\n    for (let i = data.length - 1; i >= 0; --i) {\r\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\r\n    }\r\n    return max > 0 && max;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const {xScale, yScale} = meta;\r\n    const parsed = this.getParsed(index);\r\n    const x = xScale.getLabelForValue(parsed.x);\r\n    const y = yScale.getLabelForValue(parsed.y);\r\n    const r = parsed._custom;\r\n    return {\r\n      label: meta.label,\r\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\r\n    };\r\n  }\r\n  update(mode) {\r\n    const points = this._cachedMeta.data;\r\n    this.updateElements(points, 0, points.length, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {iScale, vScale} = this._cachedMeta;\r\n    const firstOpts = this.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = this.getSharedOptions(firstOpts);\r\n    const includeOptions = this.includeOptions(mode, sharedOptions);\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    for (let i = start; i < start + count; i++) {\r\n      const point = points[i];\r\n      const parsed = !reset && this.getParsed(i);\r\n      const properties = {};\r\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\r\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\r\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\r\n      if (includeOptions) {\r\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n        if (reset) {\r\n          properties.options.radius = 0;\r\n        }\r\n      }\r\n      this.updateElement(point, i, properties, mode);\r\n    }\r\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n  }\r\n  resolveDataElementOptions(index, mode) {\r\n    const parsed = this.getParsed(index);\r\n    let values = super.resolveDataElementOptions(index, mode);\r\n    if (values.$shared) {\r\n      values = Object.assign({}, values, {$shared: false});\r\n    }\r\n    const radius = values.radius;\r\n    if (mode !== 'active') {\r\n      values.radius = 0;\r\n    }\r\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\r\n    return values;\r\n  }\r\n}\r\nBubbleController.id = 'bubble';\r\nBubbleController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'point',\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'borderWidth', 'radius']\r\n    }\r\n  }\r\n};\r\nBubbleController.overrides = {\r\n  scales: {\r\n    x: {\r\n      type: 'linear'\r\n    },\r\n    y: {\r\n      type: 'linear'\r\n    }\r\n  },\r\n  plugins: {\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nfunction getRatioAndOffset(rotation, circumference, cutout) {\r\n  let ratioX = 1;\r\n  let ratioY = 1;\r\n  let offsetX = 0;\r\n  let offsetY = 0;\r\n  if (circumference < TAU) {\r\n    const startAngle = rotation;\r\n    const endAngle = startAngle + circumference;\r\n    const startX = Math.cos(startAngle);\r\n    const startY = Math.sin(startAngle);\r\n    const endX = Math.cos(endAngle);\r\n    const endY = Math.sin(endAngle);\r\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\r\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\r\n    const maxX = calcMax(0, startX, endX);\r\n    const maxY = calcMax(HALF_PI, startY, endY);\r\n    const minX = calcMin(PI, startX, endX);\r\n    const minY = calcMin(PI + HALF_PI, startY, endY);\r\n    ratioX = (maxX - minX) / 2;\r\n    ratioY = (maxY - minY) / 2;\r\n    offsetX = -(maxX + minX) / 2;\r\n    offsetY = -(maxY + minY) / 2;\r\n  }\r\n  return {ratioX, ratioY, offsetX, offsetY};\r\n}\r\nclass DoughnutController extends DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    super(chart, datasetIndex);\r\n    this.enableOptionSharing = true;\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n    this.offsetX = undefined;\r\n    this.offsetY = undefined;\r\n  }\r\n  linkScales() {}\r\n  parse(start, count) {\r\n    const data = this.getDataset().data;\r\n    const meta = this._cachedMeta;\r\n    if (this._parsing === false) {\r\n      meta._parsed = data;\r\n    } else {\r\n      let getter = (i) => +data[i];\r\n      if (isObject(data[start])) {\r\n        const {key = 'value'} = this._parsing;\r\n        getter = (i) => +resolveObjectKey(data[i], key);\r\n      }\r\n      let i, ilen;\r\n      for (i = start, ilen = start + count; i < ilen; ++i) {\r\n        meta._parsed[i] = getter(i);\r\n      }\r\n    }\r\n  }\r\n  _getRotation() {\r\n    return toRadians(this.options.rotation - 90);\r\n  }\r\n  _getCircumference() {\r\n    return toRadians(this.options.circumference);\r\n  }\r\n  _getRotationExtents() {\r\n    let min = TAU;\r\n    let max = -TAU;\r\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\r\n      if (this.chart.isDatasetVisible(i)) {\r\n        const controller = this.chart.getDatasetMeta(i).controller;\r\n        const rotation = controller._getRotation();\r\n        const circumference = controller._getCircumference();\r\n        min = Math.min(min, rotation);\r\n        max = Math.max(max, rotation + circumference);\r\n      }\r\n    }\r\n    return {\r\n      rotation: min,\r\n      circumference: max - min,\r\n    };\r\n  }\r\n  update(mode) {\r\n    const chart = this.chart;\r\n    const {chartArea} = chart;\r\n    const meta = this._cachedMeta;\r\n    const arcs = meta.data;\r\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\r\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\r\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\r\n    const chartWeight = this._getRingWeight(this.index);\r\n    const {circumference, rotation} = this._getRotationExtents();\r\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\r\n    const maxWidth = (chartArea.width - spacing) / ratioX;\r\n    const maxHeight = (chartArea.height - spacing) / ratioY;\r\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\r\n    const outerRadius = toDimension(this.options.radius, maxRadius);\r\n    const innerRadius = Math.max(outerRadius * cutout, 0);\r\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\r\n    this.offsetX = offsetX * outerRadius;\r\n    this.offsetY = offsetY * outerRadius;\r\n    meta.total = this.calculateTotal();\r\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\r\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\r\n    this.updateElements(arcs, 0, arcs.length, mode);\r\n  }\r\n  _circumference(i, reset) {\r\n    const opts = this.options;\r\n    const meta = this._cachedMeta;\r\n    const circumference = this._getCircumference();\r\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\r\n      return 0;\r\n    }\r\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\r\n  }\r\n  updateElements(arcs, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const chart = this.chart;\r\n    const chartArea = chart.chartArea;\r\n    const opts = chart.options;\r\n    const animationOpts = opts.animation;\r\n    const centerX = (chartArea.left + chartArea.right) / 2;\r\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\r\n    const animateScale = reset && animationOpts.animateScale;\r\n    const innerRadius = animateScale ? 0 : this.innerRadius;\r\n    const outerRadius = animateScale ? 0 : this.outerRadius;\r\n    const firstOpts = this.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = this.getSharedOptions(firstOpts);\r\n    const includeOptions = this.includeOptions(mode, sharedOptions);\r\n    let startAngle = this._getRotation();\r\n    let i;\r\n    for (i = 0; i < start; ++i) {\r\n      startAngle += this._circumference(i, reset);\r\n    }\r\n    for (i = start; i < start + count; ++i) {\r\n      const circumference = this._circumference(i, reset);\r\n      const arc = arcs[i];\r\n      const properties = {\r\n        x: centerX + this.offsetX,\r\n        y: centerY + this.offsetY,\r\n        startAngle,\r\n        endAngle: startAngle + circumference,\r\n        circumference,\r\n        outerRadius,\r\n        innerRadius\r\n      };\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\r\n      }\r\n      startAngle += circumference;\r\n      this.updateElement(arc, i, properties, mode);\r\n    }\r\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n  }\r\n  calculateTotal() {\r\n    const meta = this._cachedMeta;\r\n    const metaData = meta.data;\r\n    let total = 0;\r\n    let i;\r\n    for (i = 0; i < metaData.length; i++) {\r\n      const value = meta._parsed[i];\r\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\r\n        total += Math.abs(value);\r\n      }\r\n    }\r\n    return total;\r\n  }\r\n  calculateCircumference(value) {\r\n    const total = this._cachedMeta.total;\r\n    if (total > 0 && !isNaN(value)) {\r\n      return TAU * (Math.abs(value) / total);\r\n    }\r\n    return 0;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const chart = this.chart;\r\n    const labels = chart.data.labels || [];\r\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\r\n    return {\r\n      label: labels[index] || '',\r\n      value,\r\n    };\r\n  }\r\n  getMaxBorderWidth(arcs) {\r\n    let max = 0;\r\n    const chart = this.chart;\r\n    let i, ilen, meta, controller, options;\r\n    if (!arcs) {\r\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\r\n        if (chart.isDatasetVisible(i)) {\r\n          meta = chart.getDatasetMeta(i);\r\n          arcs = meta.data;\r\n          controller = meta.controller;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (!arcs) {\r\n      return 0;\r\n    }\r\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\r\n      options = controller.resolveDataElementOptions(i);\r\n      if (options.borderAlign !== 'inner') {\r\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n  getMaxOffset(arcs) {\r\n    let max = 0;\r\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\r\n      const options = this.resolveDataElementOptions(i);\r\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\r\n    }\r\n    return max;\r\n  }\r\n  _getRingWeightOffset(datasetIndex) {\r\n    let ringWeightOffset = 0;\r\n    for (let i = 0; i < datasetIndex; ++i) {\r\n      if (this.chart.isDatasetVisible(i)) {\r\n        ringWeightOffset += this._getRingWeight(i);\r\n      }\r\n    }\r\n    return ringWeightOffset;\r\n  }\r\n  _getRingWeight(datasetIndex) {\r\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\r\n  }\r\n  _getVisibleDatasetWeightTotal() {\r\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\r\n  }\r\n}\r\nDoughnutController.id = 'doughnut';\r\nDoughnutController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'arc',\r\n  animation: {\r\n    animateRotate: true,\r\n    animateScale: false\r\n  },\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\r\n    },\r\n  },\r\n  cutout: '50%',\r\n  rotation: 0,\r\n  circumference: 360,\r\n  radius: '100%',\r\n  spacing: 0,\r\n  indexAxis: 'r',\r\n};\r\nDoughnutController.descriptors = {\r\n  _scriptable: (name) => name !== 'spacing',\r\n  _indexable: (name) => name !== 'spacing',\r\n};\r\nDoughnutController.overrides = {\r\n  aspectRatio: 1,\r\n  plugins: {\r\n    legend: {\r\n      labels: {\r\n        generateLabels(chart) {\r\n          const data = chart.data;\r\n          if (data.labels.length && data.datasets.length) {\r\n            const {labels: {pointStyle}} = chart.legend.options;\r\n            return data.labels.map((label, i) => {\r\n              const meta = chart.getDatasetMeta(0);\r\n              const style = meta.controller.getStyle(i);\r\n              return {\r\n                text: label,\r\n                fillStyle: style.backgroundColor,\r\n                strokeStyle: style.borderColor,\r\n                lineWidth: style.borderWidth,\r\n                pointStyle: pointStyle,\r\n                hidden: !chart.getDataVisibility(i),\r\n                index: i\r\n              };\r\n            });\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      onClick(e, legendItem, legend) {\r\n        legend.chart.toggleDataVisibility(legendItem.index);\r\n        legend.chart.update();\r\n      }\r\n    },\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(tooltipItem) {\r\n          let dataLabel = tooltipItem.label;\r\n          const value = ': ' + tooltipItem.formattedValue;\r\n          if (isArray(dataLabel)) {\r\n            dataLabel = dataLabel.slice();\r\n            dataLabel[0] += value;\r\n          } else {\r\n            dataLabel += value;\r\n          }\r\n          return dataLabel;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nclass LineController extends DatasetController {\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    super.initialize();\r\n  }\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    const {dataset: line, data: points = [], _dataset} = meta;\r\n    const animationsDisabled = this.chart._animationsDisabled;\r\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\r\n    this._drawStart = start;\r\n    this._drawCount = count;\r\n    if (scaleRangesChanged(meta)) {\r\n      start = 0;\r\n      count = points.length;\r\n    }\r\n    line._chart = this.chart;\r\n    line._datasetIndex = this.index;\r\n    line._decimated = !!_dataset._decimated;\r\n    line.points = points;\r\n    const options = this.resolveDatasetElementOptions(mode);\r\n    if (!this.options.showLine) {\r\n      options.borderWidth = 0;\r\n    }\r\n    options.segment = this.options.segment;\r\n    this.updateElement(line, undefined, {\r\n      animated: !animationsDisabled,\r\n      options\r\n    }, mode);\r\n    this.updateElements(points, start, count, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\r\n    const firstOpts = this.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = this.getSharedOptions(firstOpts);\r\n    const includeOptions = this.includeOptions(mode, sharedOptions);\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    const {spanGaps, segment} = this.options;\r\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\r\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\r\n    let prevParsed = start > 0 && this.getParsed(start - 1);\r\n    for (let i = start; i < start + count; ++i) {\r\n      const point = points[i];\r\n      const parsed = this.getParsed(i);\r\n      const properties = directUpdate ? point : {};\r\n      const nullData = isNullOrUndef(parsed[vAxis]);\r\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\r\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\r\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\r\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\r\n      if (segment) {\r\n        properties.parsed = parsed;\r\n        properties.raw = _dataset.data[i];\r\n      }\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n      }\r\n      if (!directUpdate) {\r\n        this.updateElement(point, i, properties, mode);\r\n      }\r\n      prevParsed = parsed;\r\n    }\r\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n  }\r\n  getMaxOverflow() {\r\n    const meta = this._cachedMeta;\r\n    const dataset = meta.dataset;\r\n    const border = dataset.options && dataset.options.borderWidth || 0;\r\n    const data = meta.data || [];\r\n    if (!data.length) {\r\n      return border;\r\n    }\r\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\r\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\r\n    return Math.max(border, firstPoint, lastPoint) / 2;\r\n  }\r\n  draw() {\r\n    const meta = this._cachedMeta;\r\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\r\n    super.draw();\r\n  }\r\n}\r\nLineController.id = 'line';\r\nLineController.defaults = {\r\n  datasetElementType: 'line',\r\n  dataElementType: 'point',\r\n  showLine: true,\r\n  spanGaps: false,\r\n};\r\nLineController.overrides = {\r\n  scales: {\r\n    _index_: {\r\n      type: 'category',\r\n    },\r\n    _value_: {\r\n      type: 'linear',\r\n    },\r\n  }\r\n};\r\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\r\n  const pointCount = points.length;\r\n  let start = 0;\r\n  let count = pointCount;\r\n  if (meta._sorted) {\r\n    const {iScale, _parsed} = meta;\r\n    const axis = iScale.axis;\r\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\r\n    if (minDefined) {\r\n      start = _limitValue(Math.min(\r\n        _lookupByKey(_parsed, iScale.axis, min).lo,\r\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\r\n      0, pointCount - 1);\r\n    }\r\n    if (maxDefined) {\r\n      count = _limitValue(Math.max(\r\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\r\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\r\n      start, pointCount) - start;\r\n    } else {\r\n      count = pointCount - start;\r\n    }\r\n  }\r\n  return {start, count};\r\n}\r\nfunction scaleRangesChanged(meta) {\r\n  const {xScale, yScale, _scaleRanges} = meta;\r\n  const newRanges = {\r\n    xmin: xScale.min,\r\n    xmax: xScale.max,\r\n    ymin: yScale.min,\r\n    ymax: yScale.max\r\n  };\r\n  if (!_scaleRanges) {\r\n    meta._scaleRanges = newRanges;\r\n    return true;\r\n  }\r\n  const changed = _scaleRanges.xmin !== xScale.min\r\n\t\t|| _scaleRanges.xmax !== xScale.max\r\n\t\t|| _scaleRanges.ymin !== yScale.min\r\n\t\t|| _scaleRanges.ymax !== yScale.max;\r\n  Object.assign(_scaleRanges, newRanges);\r\n  return changed;\r\n}\r\n\r\nclass PolarAreaController extends DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    super(chart, datasetIndex);\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const chart = this.chart;\r\n    const labels = chart.data.labels || [];\r\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\r\n    return {\r\n      label: labels[index] || '',\r\n      value,\r\n    };\r\n  }\r\n  update(mode) {\r\n    const arcs = this._cachedMeta.data;\r\n    this._updateRadius();\r\n    this.updateElements(arcs, 0, arcs.length, mode);\r\n  }\r\n  _updateRadius() {\r\n    const chart = this.chart;\r\n    const chartArea = chart.chartArea;\r\n    const opts = chart.options;\r\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\r\n    const outerRadius = Math.max(minSize / 2, 0);\r\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\r\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\r\n    this.outerRadius = outerRadius - (radiusLength * this.index);\r\n    this.innerRadius = this.outerRadius - radiusLength;\r\n  }\r\n  updateElements(arcs, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const chart = this.chart;\r\n    const dataset = this.getDataset();\r\n    const opts = chart.options;\r\n    const animationOpts = opts.animation;\r\n    const scale = this._cachedMeta.rScale;\r\n    const centerX = scale.xCenter;\r\n    const centerY = scale.yCenter;\r\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\r\n    let angle = datasetStartAngle;\r\n    let i;\r\n    const defaultAngle = 360 / this.countVisibleElements();\r\n    for (i = 0; i < start; ++i) {\r\n      angle += this._computeAngle(i, mode, defaultAngle);\r\n    }\r\n    for (i = start; i < start + count; i++) {\r\n      const arc = arcs[i];\r\n      let startAngle = angle;\r\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\r\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\r\n      angle = endAngle;\r\n      if (reset) {\r\n        if (animationOpts.animateScale) {\r\n          outerRadius = 0;\r\n        }\r\n        if (animationOpts.animateRotate) {\r\n          startAngle = endAngle = datasetStartAngle;\r\n        }\r\n      }\r\n      const properties = {\r\n        x: centerX,\r\n        y: centerY,\r\n        innerRadius: 0,\r\n        outerRadius,\r\n        startAngle,\r\n        endAngle,\r\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\r\n      };\r\n      this.updateElement(arc, i, properties, mode);\r\n    }\r\n  }\r\n  countVisibleElements() {\r\n    const dataset = this.getDataset();\r\n    const meta = this._cachedMeta;\r\n    let count = 0;\r\n    meta.data.forEach((element, index) => {\r\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\r\n        count++;\r\n      }\r\n    });\r\n    return count;\r\n  }\r\n  _computeAngle(index, mode, defaultAngle) {\r\n    return this.chart.getDataVisibility(index)\r\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\r\n      : 0;\r\n  }\r\n}\r\nPolarAreaController.id = 'polarArea';\r\nPolarAreaController.defaults = {\r\n  dataElementType: 'arc',\r\n  animation: {\r\n    animateRotate: true,\r\n    animateScale: true\r\n  },\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\r\n    },\r\n  },\r\n  indexAxis: 'r',\r\n  startAngle: 0,\r\n};\r\nPolarAreaController.overrides = {\r\n  aspectRatio: 1,\r\n  plugins: {\r\n    legend: {\r\n      labels: {\r\n        generateLabels(chart) {\r\n          const data = chart.data;\r\n          if (data.labels.length && data.datasets.length) {\r\n            const {labels: {pointStyle}} = chart.legend.options;\r\n            return data.labels.map((label, i) => {\r\n              const meta = chart.getDatasetMeta(0);\r\n              const style = meta.controller.getStyle(i);\r\n              return {\r\n                text: label,\r\n                fillStyle: style.backgroundColor,\r\n                strokeStyle: style.borderColor,\r\n                lineWidth: style.borderWidth,\r\n                pointStyle: pointStyle,\r\n                hidden: !chart.getDataVisibility(i),\r\n                index: i\r\n              };\r\n            });\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      onClick(e, legendItem, legend) {\r\n        legend.chart.toggleDataVisibility(legendItem.index);\r\n        legend.chart.update();\r\n      }\r\n    },\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(context) {\r\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  scales: {\r\n    r: {\r\n      type: 'radialLinear',\r\n      angleLines: {\r\n        display: false\r\n      },\r\n      beginAtZero: true,\r\n      grid: {\r\n        circular: true\r\n      },\r\n      pointLabels: {\r\n        display: false\r\n      },\r\n      startAngle: 0\r\n    }\r\n  }\r\n};\r\n\r\nclass PieController extends DoughnutController {\r\n}\r\nPieController.id = 'pie';\r\nPieController.defaults = {\r\n  cutout: 0,\r\n  rotation: 0,\r\n  circumference: 360,\r\n  radius: '100%'\r\n};\r\n\r\nclass RadarController extends DatasetController {\r\n  getLabelAndValue(index) {\r\n    const vScale = this._cachedMeta.vScale;\r\n    const parsed = this.getParsed(index);\r\n    return {\r\n      label: vScale.getLabels()[index],\r\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\r\n    };\r\n  }\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    const line = meta.dataset;\r\n    const points = meta.data || [];\r\n    const labels = meta.iScale.getLabels();\r\n    line.points = points;\r\n    if (mode !== 'resize') {\r\n      const options = this.resolveDatasetElementOptions(mode);\r\n      if (!this.options.showLine) {\r\n        options.borderWidth = 0;\r\n      }\r\n      const properties = {\r\n        _loop: true,\r\n        _fullLoop: labels.length === points.length,\r\n        options\r\n      };\r\n      this.updateElement(line, undefined, properties, mode);\r\n    }\r\n    this.updateElements(points, 0, points.length, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const dataset = this.getDataset();\r\n    const scale = this._cachedMeta.rScale;\r\n    const reset = mode === 'reset';\r\n    for (let i = start; i < start + count; i++) {\r\n      const point = points[i];\r\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\r\n      const x = reset ? scale.xCenter : pointPosition.x;\r\n      const y = reset ? scale.yCenter : pointPosition.y;\r\n      const properties = {\r\n        x,\r\n        y,\r\n        angle: pointPosition.angle,\r\n        skip: isNaN(x) || isNaN(y),\r\n        options\r\n      };\r\n      this.updateElement(point, i, properties, mode);\r\n    }\r\n  }\r\n}\r\nRadarController.id = 'radar';\r\nRadarController.defaults = {\r\n  datasetElementType: 'line',\r\n  dataElementType: 'point',\r\n  indexAxis: 'r',\r\n  showLine: true,\r\n  elements: {\r\n    line: {\r\n      fill: 'start'\r\n    }\r\n  },\r\n};\r\nRadarController.overrides = {\r\n  aspectRatio: 1,\r\n  scales: {\r\n    r: {\r\n      type: 'radialLinear',\r\n    }\r\n  }\r\n};\r\n\r\nclass ScatterController extends LineController {\r\n}\r\nScatterController.id = 'scatter';\r\nScatterController.defaults = {\r\n  showLine: false,\r\n  fill: false\r\n};\r\nScatterController.overrides = {\r\n  interaction: {\r\n    mode: 'point'\r\n  },\r\n  plugins: {\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(item) {\r\n          return '(' + item.label + ', ' + item.formattedValue + ')';\r\n        }\r\n      }\r\n    }\r\n  },\r\n  scales: {\r\n    x: {\r\n      type: 'linear'\r\n    },\r\n    y: {\r\n      type: 'linear'\r\n    }\r\n  }\r\n};\r\n\r\nvar controllers = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nBarController: BarController,\r\nBubbleController: BubbleController,\r\nDoughnutController: DoughnutController,\r\nLineController: LineController,\r\nPolarAreaController: PolarAreaController,\r\nPieController: PieController,\r\nRadarController: RadarController,\r\nScatterController: ScatterController\r\n});\r\n\r\nfunction clipArc(ctx, element, endAngle) {\r\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\r\n  let angleMargin = pixelMargin / outerRadius;\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\r\n  if (innerRadius > pixelMargin) {\r\n    angleMargin = pixelMargin / innerRadius;\r\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\r\n  } else {\r\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\r\n  }\r\n  ctx.closePath();\r\n  ctx.clip();\r\n}\r\nfunction toRadiusCorners(value) {\r\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\r\n}\r\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\r\n  const o = toRadiusCorners(arc.options.borderRadius);\r\n  const halfThickness = (outerRadius - innerRadius) / 2;\r\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\r\n  const computeOuterLimit = (val) => {\r\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\r\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\r\n  };\r\n  return {\r\n    outerStart: computeOuterLimit(o.outerStart),\r\n    outerEnd: computeOuterLimit(o.outerEnd),\r\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\r\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\r\n  };\r\n}\r\nfunction rThetaToXY(r, theta, x, y) {\r\n  return {\r\n    x: x + r * Math.cos(theta),\r\n    y: y + r * Math.sin(theta),\r\n  };\r\n}\r\nfunction pathArc(ctx, element, offset, spacing, end) {\r\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\r\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\r\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\r\n  let spacingOffset = 0;\r\n  const alpha = end - start;\r\n  if (spacing) {\r\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\r\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\r\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\r\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\r\n    spacingOffset = (alpha - adjustedAngle) / 2;\r\n  }\r\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\r\n  const angleOffset = (alpha - beta) / 2;\r\n  const startAngle = start + angleOffset + spacingOffset;\r\n  const endAngle = end - angleOffset - spacingOffset;\r\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\r\n  const outerStartAdjustedRadius = outerRadius - outerStart;\r\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\r\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\r\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\r\n  const innerStartAdjustedRadius = innerRadius + innerStart;\r\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\r\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\r\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\r\n  if (outerEnd > 0) {\r\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\r\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\r\n  }\r\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\r\n  ctx.lineTo(p4.x, p4.y);\r\n  if (innerEnd > 0) {\r\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\r\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\r\n  }\r\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\r\n  if (innerStart > 0) {\r\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\r\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\r\n  }\r\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\r\n  ctx.lineTo(p8.x, p8.y);\r\n  if (outerStart > 0) {\r\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\r\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\r\n  }\r\n  ctx.closePath();\r\n}\r\nfunction drawArc(ctx, element, offset, spacing) {\r\n  const {fullCircles, startAngle, circumference} = element;\r\n  let endAngle = element.endAngle;\r\n  if (fullCircles) {\r\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\r\n    for (let i = 0; i < fullCircles; ++i) {\r\n      ctx.fill();\r\n    }\r\n    if (!isNaN(circumference)) {\r\n      endAngle = startAngle + circumference % TAU;\r\n      if (circumference % TAU === 0) {\r\n        endAngle += TAU;\r\n      }\r\n    }\r\n  }\r\n  pathArc(ctx, element, offset, spacing, endAngle);\r\n  ctx.fill();\r\n  return endAngle;\r\n}\r\nfunction drawFullCircleBorders(ctx, element, inner) {\r\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\r\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\r\n  const innerRadius = element.innerRadius + pixelMargin;\r\n  let i;\r\n  if (inner) {\r\n    clipArc(ctx, element, startAngle + TAU);\r\n  }\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\r\n  for (i = 0; i < fullCircles; ++i) {\r\n    ctx.stroke();\r\n  }\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\r\n  for (i = 0; i < fullCircles; ++i) {\r\n    ctx.stroke();\r\n  }\r\n}\r\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\r\n  const {options} = element;\r\n  const {borderWidth, borderJoinStyle} = options;\r\n  const inner = options.borderAlign === 'inner';\r\n  if (!borderWidth) {\r\n    return;\r\n  }\r\n  if (inner) {\r\n    ctx.lineWidth = borderWidth * 2;\r\n    ctx.lineJoin = borderJoinStyle || 'round';\r\n  } else {\r\n    ctx.lineWidth = borderWidth;\r\n    ctx.lineJoin = borderJoinStyle || 'bevel';\r\n  }\r\n  if (element.fullCircles) {\r\n    drawFullCircleBorders(ctx, element, inner);\r\n  }\r\n  if (inner) {\r\n    clipArc(ctx, element, endAngle);\r\n  }\r\n  pathArc(ctx, element, offset, spacing, endAngle);\r\n  ctx.stroke();\r\n}\r\nclass ArcElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.circumference = undefined;\r\n    this.startAngle = undefined;\r\n    this.endAngle = undefined;\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n    this.pixelMargin = 0;\r\n    this.fullCircles = 0;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  inRange(chartX, chartY, useFinalPosition) {\r\n    const point = this.getProps(['x', 'y'], useFinalPosition);\r\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\r\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\r\n      'startAngle',\r\n      'endAngle',\r\n      'innerRadius',\r\n      'outerRadius',\r\n      'circumference'\r\n    ], useFinalPosition);\r\n    const rAdjust = this.options.spacing / 2;\r\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\r\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\r\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\r\n    return (betweenAngles && withinRadius);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\r\n      'x',\r\n      'y',\r\n      'startAngle',\r\n      'endAngle',\r\n      'innerRadius',\r\n      'outerRadius',\r\n      'circumference',\r\n    ], useFinalPosition);\r\n    const {offset, spacing} = this.options;\r\n    const halfAngle = (startAngle + endAngle) / 2;\r\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\r\n    return {\r\n      x: x + Math.cos(halfAngle) * halfRadius,\r\n      y: y + Math.sin(halfAngle) * halfRadius\r\n    };\r\n  }\r\n  tooltipPosition(useFinalPosition) {\r\n    return this.getCenterPoint(useFinalPosition);\r\n  }\r\n  draw(ctx) {\r\n    const {options, circumference} = this;\r\n    const offset = (options.offset || 0) / 2;\r\n    const spacing = (options.spacing || 0) / 2;\r\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\r\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\r\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\r\n      return;\r\n    }\r\n    ctx.save();\r\n    let radiusOffset = 0;\r\n    if (offset) {\r\n      radiusOffset = offset / 2;\r\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\r\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\r\n      if (this.circumference >= PI) {\r\n        radiusOffset = offset;\r\n      }\r\n    }\r\n    ctx.fillStyle = options.backgroundColor;\r\n    ctx.strokeStyle = options.borderColor;\r\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\r\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\r\n    ctx.restore();\r\n  }\r\n}\r\nArcElement.id = 'arc';\r\nArcElement.defaults = {\r\n  borderAlign: 'center',\r\n  borderColor: '#fff',\r\n  borderJoinStyle: undefined,\r\n  borderRadius: 0,\r\n  borderWidth: 2,\r\n  offset: 0,\r\n  spacing: 0,\r\n  angle: undefined,\r\n};\r\nArcElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor'\r\n};\r\n\r\nfunction setStyle(ctx, options, style = options) {\r\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\r\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\r\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\r\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\r\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\r\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\r\n}\r\nfunction lineTo(ctx, previous, target) {\r\n  ctx.lineTo(target.x, target.y);\r\n}\r\nfunction getLineMethod(options) {\r\n  if (options.stepped) {\r\n    return _steppedLineTo;\r\n  }\r\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\r\n    return _bezierCurveTo;\r\n  }\r\n  return lineTo;\r\n}\r\nfunction pathVars(points, segment, params = {}) {\r\n  const count = points.length;\r\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\r\n  const {start: segmentStart, end: segmentEnd} = segment;\r\n  const start = Math.max(paramsStart, segmentStart);\r\n  const end = Math.min(paramsEnd, segmentEnd);\r\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\r\n  return {\r\n    count,\r\n    start,\r\n    loop: segment.loop,\r\n    ilen: end < start && !outside ? count + end - start : end - start\r\n  };\r\n}\r\nfunction pathSegment(ctx, line, segment, params) {\r\n  const {points, options} = line;\r\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\r\n  const lineMethod = getLineMethod(options);\r\n  let {move = true, reverse} = params || {};\r\n  let i, point, prev;\r\n  for (i = 0; i <= ilen; ++i) {\r\n    point = points[(start + (reverse ? ilen - i : i)) % count];\r\n    if (point.skip) {\r\n      continue;\r\n    } else if (move) {\r\n      ctx.moveTo(point.x, point.y);\r\n      move = false;\r\n    } else {\r\n      lineMethod(ctx, prev, point, reverse, options.stepped);\r\n    }\r\n    prev = point;\r\n  }\r\n  if (loop) {\r\n    point = points[(start + (reverse ? ilen : 0)) % count];\r\n    lineMethod(ctx, prev, point, reverse, options.stepped);\r\n  }\r\n  return !!loop;\r\n}\r\nfunction fastPathSegment(ctx, line, segment, params) {\r\n  const points = line.points;\r\n  const {count, start, ilen} = pathVars(points, segment, params);\r\n  const {move = true, reverse} = params || {};\r\n  let avgX = 0;\r\n  let countX = 0;\r\n  let i, point, prevX, minY, maxY, lastY;\r\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\r\n  const drawX = () => {\r\n    if (minY !== maxY) {\r\n      ctx.lineTo(avgX, maxY);\r\n      ctx.lineTo(avgX, minY);\r\n      ctx.lineTo(avgX, lastY);\r\n    }\r\n  };\r\n  if (move) {\r\n    point = points[pointIndex(0)];\r\n    ctx.moveTo(point.x, point.y);\r\n  }\r\n  for (i = 0; i <= ilen; ++i) {\r\n    point = points[pointIndex(i)];\r\n    if (point.skip) {\r\n      continue;\r\n    }\r\n    const x = point.x;\r\n    const y = point.y;\r\n    const truncX = x | 0;\r\n    if (truncX === prevX) {\r\n      if (y < minY) {\r\n        minY = y;\r\n      } else if (y > maxY) {\r\n        maxY = y;\r\n      }\r\n      avgX = (countX * avgX + x) / ++countX;\r\n    } else {\r\n      drawX();\r\n      ctx.lineTo(x, y);\r\n      prevX = truncX;\r\n      countX = 0;\r\n      minY = maxY = y;\r\n    }\r\n    lastY = y;\r\n  }\r\n  drawX();\r\n}\r\nfunction _getSegmentMethod(line) {\r\n  const opts = line.options;\r\n  const borderDash = opts.borderDash && opts.borderDash.length;\r\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\r\n  return useFastPath ? fastPathSegment : pathSegment;\r\n}\r\nfunction _getInterpolationMethod(options) {\r\n  if (options.stepped) {\r\n    return _steppedInterpolation;\r\n  }\r\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\r\n    return _bezierInterpolation;\r\n  }\r\n  return _pointInLine;\r\n}\r\nfunction strokePathWithCache(ctx, line, start, count) {\r\n  let path = line._path;\r\n  if (!path) {\r\n    path = line._path = new Path2D();\r\n    if (line.path(path, start, count)) {\r\n      path.closePath();\r\n    }\r\n  }\r\n  setStyle(ctx, line.options);\r\n  ctx.stroke(path);\r\n}\r\nfunction strokePathDirect(ctx, line, start, count) {\r\n  const {segments, options} = line;\r\n  const segmentMethod = _getSegmentMethod(line);\r\n  for (const segment of segments) {\r\n    setStyle(ctx, options, segment.style);\r\n    ctx.beginPath();\r\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\r\n      ctx.closePath();\r\n    }\r\n    ctx.stroke();\r\n  }\r\n}\r\nconst usePath2D = typeof Path2D === 'function';\r\nfunction draw(ctx, line, start, count) {\r\n  if (usePath2D && !line.options.segment) {\r\n    strokePathWithCache(ctx, line, start, count);\r\n  } else {\r\n    strokePathDirect(ctx, line, start, count);\r\n  }\r\n}\r\nclass LineElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.animated = true;\r\n    this.options = undefined;\r\n    this._chart = undefined;\r\n    this._loop = undefined;\r\n    this._fullLoop = undefined;\r\n    this._path = undefined;\r\n    this._points = undefined;\r\n    this._segments = undefined;\r\n    this._decimated = false;\r\n    this._pointsUpdated = false;\r\n    this._datasetIndex = undefined;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  updateControlPoints(chartArea, indexAxis) {\r\n    const options = this.options;\r\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\r\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\r\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\r\n      this._pointsUpdated = true;\r\n    }\r\n  }\r\n  set points(points) {\r\n    this._points = points;\r\n    delete this._segments;\r\n    delete this._path;\r\n    this._pointsUpdated = false;\r\n  }\r\n  get points() {\r\n    return this._points;\r\n  }\r\n  get segments() {\r\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\r\n  }\r\n  first() {\r\n    const segments = this.segments;\r\n    const points = this.points;\r\n    return segments.length && points[segments[0].start];\r\n  }\r\n  last() {\r\n    const segments = this.segments;\r\n    const points = this.points;\r\n    const count = segments.length;\r\n    return count && points[segments[count - 1].end];\r\n  }\r\n  interpolate(point, property) {\r\n    const options = this.options;\r\n    const value = point[property];\r\n    const points = this.points;\r\n    const segments = _boundSegments(this, {property, start: value, end: value});\r\n    if (!segments.length) {\r\n      return;\r\n    }\r\n    const result = [];\r\n    const _interpolate = _getInterpolationMethod(options);\r\n    let i, ilen;\r\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\r\n      const {start, end} = segments[i];\r\n      const p1 = points[start];\r\n      const p2 = points[end];\r\n      if (p1 === p2) {\r\n        result.push(p1);\r\n        continue;\r\n      }\r\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\r\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\r\n      interpolated[property] = point[property];\r\n      result.push(interpolated);\r\n    }\r\n    return result.length === 1 ? result[0] : result;\r\n  }\r\n  pathSegment(ctx, segment, params) {\r\n    const segmentMethod = _getSegmentMethod(this);\r\n    return segmentMethod(ctx, this, segment, params);\r\n  }\r\n  path(ctx, start, count) {\r\n    const segments = this.segments;\r\n    const segmentMethod = _getSegmentMethod(this);\r\n    let loop = this._loop;\r\n    start = start || 0;\r\n    count = count || (this.points.length - start);\r\n    for (const segment of segments) {\r\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\r\n    }\r\n    return !!loop;\r\n  }\r\n  draw(ctx, chartArea, start, count) {\r\n    const options = this.options || {};\r\n    const points = this.points || [];\r\n    if (points.length && options.borderWidth) {\r\n      ctx.save();\r\n      draw(ctx, this, start, count);\r\n      ctx.restore();\r\n    }\r\n    if (this.animated) {\r\n      this._pointsUpdated = false;\r\n      this._path = undefined;\r\n    }\r\n  }\r\n}\r\nLineElement.id = 'line';\r\nLineElement.defaults = {\r\n  borderCapStyle: 'butt',\r\n  borderDash: [],\r\n  borderDashOffset: 0,\r\n  borderJoinStyle: 'miter',\r\n  borderWidth: 3,\r\n  capBezierPoints: true,\r\n  cubicInterpolationMode: 'default',\r\n  fill: false,\r\n  spanGaps: false,\r\n  stepped: false,\r\n  tension: 0,\r\n};\r\nLineElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\nLineElement.descriptors = {\r\n  _scriptable: true,\r\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\r\n};\r\n\r\nfunction inRange$1(el, pos, axis, useFinalPosition) {\r\n  const options = el.options;\r\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\r\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\r\n}\r\nclass PointElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.parsed = undefined;\r\n    this.skip = undefined;\r\n    this.stop = undefined;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  inRange(mouseX, mouseY, useFinalPosition) {\r\n    const options = this.options;\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\r\n  }\r\n  inXRange(mouseX, useFinalPosition) {\r\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\r\n  }\r\n  inYRange(mouseY, useFinalPosition) {\r\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return {x, y};\r\n  }\r\n  size(options) {\r\n    options = options || this.options || {};\r\n    let radius = options.radius || 0;\r\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\r\n    const borderWidth = radius && options.borderWidth || 0;\r\n    return (radius + borderWidth) * 2;\r\n  }\r\n  draw(ctx, area) {\r\n    const options = this.options;\r\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\r\n      return;\r\n    }\r\n    ctx.strokeStyle = options.borderColor;\r\n    ctx.lineWidth = options.borderWidth;\r\n    ctx.fillStyle = options.backgroundColor;\r\n    drawPoint(ctx, options, this.x, this.y);\r\n  }\r\n  getRange() {\r\n    const options = this.options || {};\r\n    return options.radius + options.hitRadius;\r\n  }\r\n}\r\nPointElement.id = 'point';\r\nPointElement.defaults = {\r\n  borderWidth: 1,\r\n  hitRadius: 1,\r\n  hoverBorderWidth: 1,\r\n  hoverRadius: 4,\r\n  pointStyle: 'circle',\r\n  radius: 3,\r\n  rotation: 0\r\n};\r\nPointElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\n\r\nfunction getBarBounds(bar, useFinalPosition) {\r\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\r\n  let left, right, top, bottom, half;\r\n  if (bar.horizontal) {\r\n    half = height / 2;\r\n    left = Math.min(x, base);\r\n    right = Math.max(x, base);\r\n    top = y - half;\r\n    bottom = y + half;\r\n  } else {\r\n    half = width / 2;\r\n    left = x - half;\r\n    right = x + half;\r\n    top = Math.min(y, base);\r\n    bottom = Math.max(y, base);\r\n  }\r\n  return {left, top, right, bottom};\r\n}\r\nfunction skipOrLimit(skip, value, min, max) {\r\n  return skip ? 0 : _limitValue(value, min, max);\r\n}\r\nfunction parseBorderWidth(bar, maxW, maxH) {\r\n  const value = bar.options.borderWidth;\r\n  const skip = bar.borderSkipped;\r\n  const o = toTRBL(value);\r\n  return {\r\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\r\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\r\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\r\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\r\n  };\r\n}\r\nfunction parseBorderRadius(bar, maxW, maxH) {\r\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\r\n  const value = bar.options.borderRadius;\r\n  const o = toTRBLCorners(value);\r\n  const maxR = Math.min(maxW, maxH);\r\n  const skip = bar.borderSkipped;\r\n  const enableBorder = enableBorderRadius || isObject(value);\r\n  return {\r\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\r\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\r\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\r\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\r\n  };\r\n}\r\nfunction boundingRects(bar) {\r\n  const bounds = getBarBounds(bar);\r\n  const width = bounds.right - bounds.left;\r\n  const height = bounds.bottom - bounds.top;\r\n  const border = parseBorderWidth(bar, width / 2, height / 2);\r\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\r\n  return {\r\n    outer: {\r\n      x: bounds.left,\r\n      y: bounds.top,\r\n      w: width,\r\n      h: height,\r\n      radius\r\n    },\r\n    inner: {\r\n      x: bounds.left + border.l,\r\n      y: bounds.top + border.t,\r\n      w: width - border.l - border.r,\r\n      h: height - border.t - border.b,\r\n      radius: {\r\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\r\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\r\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\r\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\r\n      }\r\n    }\r\n  };\r\n}\r\nfunction inRange(bar, x, y, useFinalPosition) {\r\n  const skipX = x === null;\r\n  const skipY = y === null;\r\n  const skipBoth = skipX && skipY;\r\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\r\n  return bounds\r\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\r\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\r\n}\r\nfunction hasRadius(radius) {\r\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\r\n}\r\nfunction addNormalRectPath(ctx, rect) {\r\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\r\n}\r\nfunction inflateRect(rect, amount, refRect = {}) {\r\n  const x = rect.x !== refRect.x ? -amount : 0;\r\n  const y = rect.y !== refRect.y ? -amount : 0;\r\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\r\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\r\n  return {\r\n    x: rect.x + x,\r\n    y: rect.y + y,\r\n    w: rect.w + w,\r\n    h: rect.h + h,\r\n    radius: rect.radius\r\n  };\r\n}\r\nclass BarElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.horizontal = undefined;\r\n    this.base = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    this.inflateAmount = undefined;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  draw(ctx) {\r\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\r\n    const {inner, outer} = boundingRects(this);\r\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\r\n    ctx.save();\r\n    if (outer.w !== inner.w || outer.h !== inner.h) {\r\n      ctx.beginPath();\r\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\r\n      ctx.clip();\r\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\r\n      ctx.fillStyle = borderColor;\r\n      ctx.fill('evenodd');\r\n    }\r\n    ctx.beginPath();\r\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\r\n    ctx.fillStyle = backgroundColor;\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n  inRange(mouseX, mouseY, useFinalPosition) {\r\n    return inRange(this, mouseX, mouseY, useFinalPosition);\r\n  }\r\n  inXRange(mouseX, useFinalPosition) {\r\n    return inRange(this, mouseX, null, useFinalPosition);\r\n  }\r\n  inYRange(mouseY, useFinalPosition) {\r\n    return inRange(this, null, mouseY, useFinalPosition);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\r\n    return {\r\n      x: horizontal ? (x + base) / 2 : x,\r\n      y: horizontal ? y : (y + base) / 2\r\n    };\r\n  }\r\n  getRange(axis) {\r\n    return axis === 'x' ? this.width / 2 : this.height / 2;\r\n  }\r\n}\r\nBarElement.id = 'bar';\r\nBarElement.defaults = {\r\n  borderSkipped: 'start',\r\n  borderWidth: 0,\r\n  borderRadius: 0,\r\n  inflateAmount: 'auto',\r\n  pointStyle: undefined\r\n};\r\nBarElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\n\r\nvar elements = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nArcElement: ArcElement,\r\nLineElement: LineElement,\r\nPointElement: PointElement,\r\nBarElement: BarElement\r\n});\r\n\r\nfunction lttbDecimation(data, start, count, availableWidth, options) {\r\n  const samples = options.samples || availableWidth;\r\n  if (samples >= count) {\r\n    return data.slice(start, start + count);\r\n  }\r\n  const decimated = [];\r\n  const bucketWidth = (count - 2) / (samples - 2);\r\n  let sampledIndex = 0;\r\n  const endIndex = start + count - 1;\r\n  let a = start;\r\n  let i, maxAreaPoint, maxArea, area, nextA;\r\n  decimated[sampledIndex++] = data[a];\r\n  for (i = 0; i < samples - 2; i++) {\r\n    let avgX = 0;\r\n    let avgY = 0;\r\n    let j;\r\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\r\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\r\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\r\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\r\n      avgX += data[j].x;\r\n      avgY += data[j].y;\r\n    }\r\n    avgX /= avgRangeLength;\r\n    avgY /= avgRangeLength;\r\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\r\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\r\n    const {x: pointAx, y: pointAy} = data[a];\r\n    maxArea = area = -1;\r\n    for (j = rangeOffs; j < rangeTo; j++) {\r\n      area = 0.5 * Math.abs(\r\n        (pointAx - avgX) * (data[j].y - pointAy) -\r\n        (pointAx - data[j].x) * (avgY - pointAy)\r\n      );\r\n      if (area > maxArea) {\r\n        maxArea = area;\r\n        maxAreaPoint = data[j];\r\n        nextA = j;\r\n      }\r\n    }\r\n    decimated[sampledIndex++] = maxAreaPoint;\r\n    a = nextA;\r\n  }\r\n  decimated[sampledIndex++] = data[endIndex];\r\n  return decimated;\r\n}\r\nfunction minMaxDecimation(data, start, count, availableWidth) {\r\n  let avgX = 0;\r\n  let countX = 0;\r\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\r\n  const decimated = [];\r\n  const endIndex = start + count - 1;\r\n  const xMin = data[start].x;\r\n  const xMax = data[endIndex].x;\r\n  const dx = xMax - xMin;\r\n  for (i = start; i < start + count; ++i) {\r\n    point = data[i];\r\n    x = (point.x - xMin) / dx * availableWidth;\r\n    y = point.y;\r\n    const truncX = x | 0;\r\n    if (truncX === prevX) {\r\n      if (y < minY) {\r\n        minY = y;\r\n        minIndex = i;\r\n      } else if (y > maxY) {\r\n        maxY = y;\r\n        maxIndex = i;\r\n      }\r\n      avgX = (countX * avgX + point.x) / ++countX;\r\n    } else {\r\n      const lastIndex = i - 1;\r\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\r\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\r\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\r\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\r\n          decimated.push({\r\n            ...data[intermediateIndex1],\r\n            x: avgX,\r\n          });\r\n        }\r\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\r\n          decimated.push({\r\n            ...data[intermediateIndex2],\r\n            x: avgX\r\n          });\r\n        }\r\n      }\r\n      if (i > 0 && lastIndex !== startIndex) {\r\n        decimated.push(data[lastIndex]);\r\n      }\r\n      decimated.push(point);\r\n      prevX = truncX;\r\n      countX = 0;\r\n      minY = maxY = y;\r\n      minIndex = maxIndex = startIndex = i;\r\n    }\r\n  }\r\n  return decimated;\r\n}\r\nfunction cleanDecimatedDataset(dataset) {\r\n  if (dataset._decimated) {\r\n    const data = dataset._data;\r\n    delete dataset._decimated;\r\n    delete dataset._data;\r\n    Object.defineProperty(dataset, 'data', {value: data});\r\n  }\r\n}\r\nfunction cleanDecimatedData(chart) {\r\n  chart.data.datasets.forEach((dataset) => {\r\n    cleanDecimatedDataset(dataset);\r\n  });\r\n}\r\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\r\n  const pointCount = points.length;\r\n  let start = 0;\r\n  let count;\r\n  const {iScale} = meta;\r\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\r\n  if (minDefined) {\r\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\r\n  }\r\n  if (maxDefined) {\r\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\r\n  } else {\r\n    count = pointCount - start;\r\n  }\r\n  return {start, count};\r\n}\r\nvar plugin_decimation = {\r\n  id: 'decimation',\r\n  defaults: {\r\n    algorithm: 'min-max',\r\n    enabled: false,\r\n  },\r\n  beforeElementsUpdate: (chart, args, options) => {\r\n    if (!options.enabled) {\r\n      cleanDecimatedData(chart);\r\n      return;\r\n    }\r\n    const availableWidth = chart.width;\r\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\r\n      const {_data, indexAxis} = dataset;\r\n      const meta = chart.getDatasetMeta(datasetIndex);\r\n      const data = _data || dataset.data;\r\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\r\n        return;\r\n      }\r\n      if (meta.type !== 'line') {\r\n        return;\r\n      }\r\n      const xAxis = chart.scales[meta.xAxisID];\r\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\r\n        return;\r\n      }\r\n      if (chart.options.parsing) {\r\n        return;\r\n      }\r\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\r\n      const threshold = options.threshold || 4 * availableWidth;\r\n      if (count <= threshold) {\r\n        cleanDecimatedDataset(dataset);\r\n        return;\r\n      }\r\n      if (isNullOrUndef(_data)) {\r\n        dataset._data = data;\r\n        delete dataset.data;\r\n        Object.defineProperty(dataset, 'data', {\r\n          configurable: true,\r\n          enumerable: true,\r\n          get: function() {\r\n            return this._decimated;\r\n          },\r\n          set: function(d) {\r\n            this._data = d;\r\n          }\r\n        });\r\n      }\r\n      let decimated;\r\n      switch (options.algorithm) {\r\n      case 'lttb':\r\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\r\n        break;\r\n      case 'min-max':\r\n        decimated = minMaxDecimation(data, start, count, availableWidth);\r\n        break;\r\n      default:\r\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\r\n      }\r\n      dataset._decimated = decimated;\r\n    });\r\n  },\r\n  destroy(chart) {\r\n    cleanDecimatedData(chart);\r\n  }\r\n};\r\n\r\nfunction getLineByIndex(chart, index) {\r\n  const meta = chart.getDatasetMeta(index);\r\n  const visible = meta && chart.isDatasetVisible(index);\r\n  return visible ? meta.dataset : null;\r\n}\r\nfunction parseFillOption(line) {\r\n  const options = line.options;\r\n  const fillOption = options.fill;\r\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\r\n  if (fill === undefined) {\r\n    fill = !!options.backgroundColor;\r\n  }\r\n  if (fill === false || fill === null) {\r\n    return false;\r\n  }\r\n  if (fill === true) {\r\n    return 'origin';\r\n  }\r\n  return fill;\r\n}\r\nfunction decodeFill(line, index, count) {\r\n  const fill = parseFillOption(line);\r\n  if (isObject(fill)) {\r\n    return isNaN(fill.value) ? false : fill;\r\n  }\r\n  let target = parseFloat(fill);\r\n  if (isNumberFinite(target) && Math.floor(target) === target) {\r\n    if (fill[0] === '-' || fill[0] === '+') {\r\n      target = index + target;\r\n    }\r\n    if (target === index || target < 0 || target >= count) {\r\n      return false;\r\n    }\r\n    return target;\r\n  }\r\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\r\n}\r\nfunction computeLinearBoundary(source) {\r\n  const {scale = {}, fill} = source;\r\n  let target = null;\r\n  let horizontal;\r\n  if (fill === 'start') {\r\n    target = scale.bottom;\r\n  } else if (fill === 'end') {\r\n    target = scale.top;\r\n  } else if (isObject(fill)) {\r\n    target = scale.getPixelForValue(fill.value);\r\n  } else if (scale.getBasePixel) {\r\n    target = scale.getBasePixel();\r\n  }\r\n  if (isNumberFinite(target)) {\r\n    horizontal = scale.isHorizontal();\r\n    return {\r\n      x: horizontal ? target : null,\r\n      y: horizontal ? null : target\r\n    };\r\n  }\r\n  return null;\r\n}\r\nclass simpleArc {\r\n  constructor(opts) {\r\n    this.x = opts.x;\r\n    this.y = opts.y;\r\n    this.radius = opts.radius;\r\n  }\r\n  pathSegment(ctx, bounds, opts) {\r\n    const {x, y, radius} = this;\r\n    bounds = bounds || {start: 0, end: TAU};\r\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\r\n    return !opts.bounds;\r\n  }\r\n  interpolate(point) {\r\n    const {x, y, radius} = this;\r\n    const angle = point.angle;\r\n    return {\r\n      x: x + Math.cos(angle) * radius,\r\n      y: y + Math.sin(angle) * radius,\r\n      angle\r\n    };\r\n  }\r\n}\r\nfunction computeCircularBoundary(source) {\r\n  const {scale, fill} = source;\r\n  const options = scale.options;\r\n  const length = scale.getLabels().length;\r\n  const target = [];\r\n  const start = options.reverse ? scale.max : scale.min;\r\n  const end = options.reverse ? scale.min : scale.max;\r\n  let i, center, value;\r\n  if (fill === 'start') {\r\n    value = start;\r\n  } else if (fill === 'end') {\r\n    value = end;\r\n  } else if (isObject(fill)) {\r\n    value = fill.value;\r\n  } else {\r\n    value = scale.getBaseValue();\r\n  }\r\n  if (options.grid.circular) {\r\n    center = scale.getPointPositionForValue(0, start);\r\n    return new simpleArc({\r\n      x: center.x,\r\n      y: center.y,\r\n      radius: scale.getDistanceFromCenterForValue(value)\r\n    });\r\n  }\r\n  for (i = 0; i < length; ++i) {\r\n    target.push(scale.getPointPositionForValue(i, value));\r\n  }\r\n  return target;\r\n}\r\nfunction computeBoundary(source) {\r\n  const scale = source.scale || {};\r\n  if (scale.getPointPositionForValue) {\r\n    return computeCircularBoundary(source);\r\n  }\r\n  return computeLinearBoundary(source);\r\n}\r\nfunction findSegmentEnd(start, end, points) {\r\n  for (;end > start; end--) {\r\n    const point = points[end];\r\n    if (!isNaN(point.x) && !isNaN(point.y)) {\r\n      break;\r\n    }\r\n  }\r\n  return end;\r\n}\r\nfunction pointsFromSegments(boundary, line) {\r\n  const {x = null, y = null} = boundary || {};\r\n  const linePoints = line.points;\r\n  const points = [];\r\n  line.segments.forEach(({start, end}) => {\r\n    end = findSegmentEnd(start, end, linePoints);\r\n    const first = linePoints[start];\r\n    const last = linePoints[end];\r\n    if (y !== null) {\r\n      points.push({x: first.x, y});\r\n      points.push({x: last.x, y});\r\n    } else if (x !== null) {\r\n      points.push({x, y: first.y});\r\n      points.push({x, y: last.y});\r\n    }\r\n  });\r\n  return points;\r\n}\r\nfunction buildStackLine(source) {\r\n  const {scale, index, line} = source;\r\n  const points = [];\r\n  const segments = line.segments;\r\n  const sourcePoints = line.points;\r\n  const linesBelow = getLinesBelow(scale, index);\r\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const segment = segments[i];\r\n    for (let j = segment.start; j <= segment.end; j++) {\r\n      addPointsBelow(points, sourcePoints[j], linesBelow);\r\n    }\r\n  }\r\n  return new LineElement({points, options: {}});\r\n}\r\nfunction getLinesBelow(scale, index) {\r\n  const below = [];\r\n  const metas = scale.getMatchingVisibleMetas('line');\r\n  for (let i = 0; i < metas.length; i++) {\r\n    const meta = metas[i];\r\n    if (meta.index === index) {\r\n      break;\r\n    }\r\n    if (!meta.hidden) {\r\n      below.unshift(meta.dataset);\r\n    }\r\n  }\r\n  return below;\r\n}\r\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\r\n  const postponed = [];\r\n  for (let j = 0; j < linesBelow.length; j++) {\r\n    const line = linesBelow[j];\r\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\r\n    if (!point || (first && last)) {\r\n      continue;\r\n    }\r\n    if (first) {\r\n      postponed.unshift(point);\r\n    } else {\r\n      points.push(point);\r\n      if (!last) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  points.push(...postponed);\r\n}\r\nfunction findPoint(line, sourcePoint, property) {\r\n  const point = line.interpolate(sourcePoint, property);\r\n  if (!point) {\r\n    return {};\r\n  }\r\n  const pointValue = point[property];\r\n  const segments = line.segments;\r\n  const linePoints = line.points;\r\n  let first = false;\r\n  let last = false;\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const segment = segments[i];\r\n    const firstValue = linePoints[segment.start][property];\r\n    const lastValue = linePoints[segment.end][property];\r\n    if (_isBetween(pointValue, firstValue, lastValue)) {\r\n      first = pointValue === firstValue;\r\n      last = pointValue === lastValue;\r\n      break;\r\n    }\r\n  }\r\n  return {first, last, point};\r\n}\r\nfunction getTarget(source) {\r\n  const {chart, fill, line} = source;\r\n  if (isNumberFinite(fill)) {\r\n    return getLineByIndex(chart, fill);\r\n  }\r\n  if (fill === 'stack') {\r\n    return buildStackLine(source);\r\n  }\r\n  if (fill === 'shape') {\r\n    return true;\r\n  }\r\n  const boundary = computeBoundary(source);\r\n  if (boundary instanceof simpleArc) {\r\n    return boundary;\r\n  }\r\n  return createBoundaryLine(boundary, line);\r\n}\r\nfunction createBoundaryLine(boundary, line) {\r\n  let points = [];\r\n  let _loop = false;\r\n  if (isArray(boundary)) {\r\n    _loop = true;\r\n    points = boundary;\r\n  } else {\r\n    points = pointsFromSegments(boundary, line);\r\n  }\r\n  return points.length ? new LineElement({\r\n    points,\r\n    options: {tension: 0},\r\n    _loop,\r\n    _fullLoop: _loop\r\n  }) : null;\r\n}\r\nfunction resolveTarget(sources, index, propagate) {\r\n  const source = sources[index];\r\n  let fill = source.fill;\r\n  const visited = [index];\r\n  let target;\r\n  if (!propagate) {\r\n    return fill;\r\n  }\r\n  while (fill !== false && visited.indexOf(fill) === -1) {\r\n    if (!isNumberFinite(fill)) {\r\n      return fill;\r\n    }\r\n    target = sources[fill];\r\n    if (!target) {\r\n      return false;\r\n    }\r\n    if (target.visible) {\r\n      return fill;\r\n    }\r\n    visited.push(fill);\r\n    fill = target.fill;\r\n  }\r\n  return false;\r\n}\r\nfunction _clip(ctx, target, clipY) {\r\n  ctx.beginPath();\r\n  target.path(ctx);\r\n  ctx.lineTo(target.last().x, clipY);\r\n  ctx.lineTo(target.first().x, clipY);\r\n  ctx.closePath();\r\n  ctx.clip();\r\n}\r\nfunction getBounds(property, first, last, loop) {\r\n  if (loop) {\r\n    return;\r\n  }\r\n  let start = first[property];\r\n  let end = last[property];\r\n  if (property === 'angle') {\r\n    start = _normalizeAngle(start);\r\n    end = _normalizeAngle(end);\r\n  }\r\n  return {property, start, end};\r\n}\r\nfunction _getEdge(a, b, prop, fn) {\r\n  if (a && b) {\r\n    return fn(a[prop], b[prop]);\r\n  }\r\n  return a ? a[prop] : b ? b[prop] : 0;\r\n}\r\nfunction _segments(line, target, property) {\r\n  const segments = line.segments;\r\n  const points = line.points;\r\n  const tpoints = target.points;\r\n  const parts = [];\r\n  for (const segment of segments) {\r\n    let {start, end} = segment;\r\n    end = findSegmentEnd(start, end, points);\r\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\r\n    if (!target.segments) {\r\n      parts.push({\r\n        source: segment,\r\n        target: bounds,\r\n        start: points[start],\r\n        end: points[end]\r\n      });\r\n      continue;\r\n    }\r\n    const targetSegments = _boundSegments(target, bounds);\r\n    for (const tgt of targetSegments) {\r\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\r\n      const fillSources = _boundSegment(segment, points, subBounds);\r\n      for (const fillSource of fillSources) {\r\n        parts.push({\r\n          source: fillSource,\r\n          target: tgt,\r\n          start: {\r\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\r\n          },\r\n          end: {\r\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return parts;\r\n}\r\nfunction clipBounds(ctx, scale, bounds) {\r\n  const {top, bottom} = scale.chart.chartArea;\r\n  const {property, start, end} = bounds || {};\r\n  if (property === 'x') {\r\n    ctx.beginPath();\r\n    ctx.rect(start, top, end - start, bottom - top);\r\n    ctx.clip();\r\n  }\r\n}\r\nfunction interpolatedLineTo(ctx, target, point, property) {\r\n  const interpolatedPoint = target.interpolate(point, property);\r\n  if (interpolatedPoint) {\r\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\r\n  }\r\n}\r\nfunction _fill(ctx, cfg) {\r\n  const {line, target, property, color, scale} = cfg;\r\n  const segments = _segments(line, target, property);\r\n  for (const {source: src, target: tgt, start, end} of segments) {\r\n    const {style: {backgroundColor = color} = {}} = src;\r\n    const notShape = target !== true;\r\n    ctx.save();\r\n    ctx.fillStyle = backgroundColor;\r\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\r\n    ctx.beginPath();\r\n    const lineLoop = !!line.pathSegment(ctx, src);\r\n    let loop;\r\n    if (notShape) {\r\n      if (lineLoop) {\r\n        ctx.closePath();\r\n      } else {\r\n        interpolatedLineTo(ctx, target, end, property);\r\n      }\r\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\r\n      loop = lineLoop && targetLoop;\r\n      if (!loop) {\r\n        interpolatedLineTo(ctx, target, start, property);\r\n      }\r\n    }\r\n    ctx.closePath();\r\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\r\n    ctx.restore();\r\n  }\r\n}\r\nfunction doFill(ctx, cfg) {\r\n  const {line, target, above, below, area, scale} = cfg;\r\n  const property = line._loop ? 'angle' : cfg.axis;\r\n  ctx.save();\r\n  if (property === 'x' && below !== above) {\r\n    _clip(ctx, target, area.top);\r\n    _fill(ctx, {line, target, color: above, scale, property});\r\n    ctx.restore();\r\n    ctx.save();\r\n    _clip(ctx, target, area.bottom);\r\n  }\r\n  _fill(ctx, {line, target, color: below, scale, property});\r\n  ctx.restore();\r\n}\r\nfunction drawfill(ctx, source, area) {\r\n  const target = getTarget(source);\r\n  const {line, scale, axis} = source;\r\n  const lineOpts = line.options;\r\n  const fillOption = lineOpts.fill;\r\n  const color = lineOpts.backgroundColor;\r\n  const {above = color, below = color} = fillOption || {};\r\n  if (target && line.points.length) {\r\n    clipArea(ctx, area);\r\n    doFill(ctx, {line, target, above, below, area, scale, axis});\r\n    unclipArea(ctx);\r\n  }\r\n}\r\nvar plugin_filler = {\r\n  id: 'filler',\r\n  afterDatasetsUpdate(chart, _args, options) {\r\n    const count = (chart.data.datasets || []).length;\r\n    const sources = [];\r\n    let meta, i, line, source;\r\n    for (i = 0; i < count; ++i) {\r\n      meta = chart.getDatasetMeta(i);\r\n      line = meta.dataset;\r\n      source = null;\r\n      if (line && line.options && line instanceof LineElement) {\r\n        source = {\r\n          visible: chart.isDatasetVisible(i),\r\n          index: i,\r\n          fill: decodeFill(line, i, count),\r\n          chart,\r\n          axis: meta.controller.options.indexAxis,\r\n          scale: meta.vScale,\r\n          line,\r\n        };\r\n      }\r\n      meta.$filler = source;\r\n      sources.push(source);\r\n    }\r\n    for (i = 0; i < count; ++i) {\r\n      source = sources[i];\r\n      if (!source || source.fill === false) {\r\n        continue;\r\n      }\r\n      source.fill = resolveTarget(sources, i, options.propagate);\r\n    }\r\n  },\r\n  beforeDraw(chart, _args, options) {\r\n    const draw = options.drawTime === 'beforeDraw';\r\n    const metasets = chart.getSortedVisibleDatasetMetas();\r\n    const area = chart.chartArea;\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      const source = metasets[i].$filler;\r\n      if (!source) {\r\n        continue;\r\n      }\r\n      source.line.updateControlPoints(area, source.axis);\r\n      if (draw) {\r\n        drawfill(chart.ctx, source, area);\r\n      }\r\n    }\r\n  },\r\n  beforeDatasetsDraw(chart, _args, options) {\r\n    if (options.drawTime !== 'beforeDatasetsDraw') {\r\n      return;\r\n    }\r\n    const metasets = chart.getSortedVisibleDatasetMetas();\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      const source = metasets[i].$filler;\r\n      if (source) {\r\n        drawfill(chart.ctx, source, chart.chartArea);\r\n      }\r\n    }\r\n  },\r\n  beforeDatasetDraw(chart, args, options) {\r\n    const source = args.meta.$filler;\r\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\r\n      return;\r\n    }\r\n    drawfill(chart.ctx, source, chart.chartArea);\r\n  },\r\n  defaults: {\r\n    propagate: true,\r\n    drawTime: 'beforeDatasetDraw'\r\n  }\r\n};\r\n\r\nconst getBoxSize = (labelOpts, fontSize) => {\r\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\r\n  if (labelOpts.usePointStyle) {\r\n    boxHeight = Math.min(boxHeight, fontSize);\r\n    boxWidth = Math.min(boxWidth, fontSize);\r\n  }\r\n  return {\r\n    boxWidth,\r\n    boxHeight,\r\n    itemHeight: Math.max(fontSize, boxHeight)\r\n  };\r\n};\r\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\r\nclass Legend extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this._added = false;\r\n    this.legendHitBoxes = [];\r\n    this._hoveredItem = null;\r\n    this.doughnutMode = false;\r\n    this.chart = config.chart;\r\n    this.options = config.options;\r\n    this.ctx = config.ctx;\r\n    this.legendItems = undefined;\r\n    this.columnSizes = undefined;\r\n    this.lineWidths = undefined;\r\n    this.maxHeight = undefined;\r\n    this.maxWidth = undefined;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.height = undefined;\r\n    this.width = undefined;\r\n    this._margins = undefined;\r\n    this.position = undefined;\r\n    this.weight = undefined;\r\n    this.fullSize = undefined;\r\n  }\r\n  update(maxWidth, maxHeight, margins) {\r\n    this.maxWidth = maxWidth;\r\n    this.maxHeight = maxHeight;\r\n    this._margins = margins;\r\n    this.setDimensions();\r\n    this.buildLabels();\r\n    this.fit();\r\n  }\r\n  setDimensions() {\r\n    if (this.isHorizontal()) {\r\n      this.width = this.maxWidth;\r\n      this.left = this._margins.left;\r\n      this.right = this.width;\r\n    } else {\r\n      this.height = this.maxHeight;\r\n      this.top = this._margins.top;\r\n      this.bottom = this.height;\r\n    }\r\n  }\r\n  buildLabels() {\r\n    const labelOpts = this.options.labels || {};\r\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\r\n    if (labelOpts.filter) {\r\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\r\n    }\r\n    if (labelOpts.sort) {\r\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\r\n    }\r\n    if (this.options.reverse) {\r\n      legendItems.reverse();\r\n    }\r\n    this.legendItems = legendItems;\r\n  }\r\n  fit() {\r\n    const {options, ctx} = this;\r\n    if (!options.display) {\r\n      this.width = this.height = 0;\r\n      return;\r\n    }\r\n    const labelOpts = options.labels;\r\n    const labelFont = toFont(labelOpts.font);\r\n    const fontSize = labelFont.size;\r\n    const titleHeight = this._computeTitleHeight();\r\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\r\n    let width, height;\r\n    ctx.font = labelFont.string;\r\n    if (this.isHorizontal()) {\r\n      width = this.maxWidth;\r\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\r\n    } else {\r\n      height = this.maxHeight;\r\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\r\n    }\r\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\r\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\r\n  }\r\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\r\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\r\n    const hitboxes = this.legendHitBoxes = [];\r\n    const lineWidths = this.lineWidths = [0];\r\n    const lineHeight = itemHeight + padding;\r\n    let totalHeight = titleHeight;\r\n    ctx.textAlign = 'left';\r\n    ctx.textBaseline = 'middle';\r\n    let row = -1;\r\n    let top = -lineHeight;\r\n    this.legendItems.forEach((legendItem, i) => {\r\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\r\n        totalHeight += lineHeight;\r\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\r\n        top += lineHeight;\r\n        row++;\r\n      }\r\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\r\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\r\n    });\r\n    return totalHeight;\r\n  }\r\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\r\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\r\n    const hitboxes = this.legendHitBoxes = [];\r\n    const columnSizes = this.columnSizes = [];\r\n    const heightLimit = maxHeight - titleHeight;\r\n    let totalWidth = padding;\r\n    let currentColWidth = 0;\r\n    let currentColHeight = 0;\r\n    let left = 0;\r\n    let col = 0;\r\n    this.legendItems.forEach((legendItem, i) => {\r\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\r\n        totalWidth += currentColWidth + padding;\r\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\r\n        left += currentColWidth + padding;\r\n        col++;\r\n        currentColWidth = currentColHeight = 0;\r\n      }\r\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\r\n      currentColWidth = Math.max(currentColWidth, itemWidth);\r\n      currentColHeight += itemHeight + padding;\r\n    });\r\n    totalWidth += currentColWidth;\r\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\r\n    return totalWidth;\r\n  }\r\n  adjustHitBoxes() {\r\n    if (!this.options.display) {\r\n      return;\r\n    }\r\n    const titleHeight = this._computeTitleHeight();\r\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\r\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\r\n    if (this.isHorizontal()) {\r\n      let row = 0;\r\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\r\n      for (const hitbox of hitboxes) {\r\n        if (row !== hitbox.row) {\r\n          row = hitbox.row;\r\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\r\n        }\r\n        hitbox.top += this.top + titleHeight + padding;\r\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\r\n        left += hitbox.width + padding;\r\n      }\r\n    } else {\r\n      let col = 0;\r\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\r\n      for (const hitbox of hitboxes) {\r\n        if (hitbox.col !== col) {\r\n          col = hitbox.col;\r\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\r\n        }\r\n        hitbox.top = top;\r\n        hitbox.left += this.left + padding;\r\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\r\n        top += hitbox.height + padding;\r\n      }\r\n    }\r\n  }\r\n  isHorizontal() {\r\n    return this.options.position === 'top' || this.options.position === 'bottom';\r\n  }\r\n  draw() {\r\n    if (this.options.display) {\r\n      const ctx = this.ctx;\r\n      clipArea(ctx, this);\r\n      this._draw();\r\n      unclipArea(ctx);\r\n    }\r\n  }\r\n  _draw() {\r\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\r\n    const {align, labels: labelOpts} = opts;\r\n    const defaultColor = defaults.color;\r\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\r\n    const labelFont = toFont(labelOpts.font);\r\n    const {color: fontColor, padding} = labelOpts;\r\n    const fontSize = labelFont.size;\r\n    const halfFontSize = fontSize / 2;\r\n    let cursor;\r\n    this.drawTitle();\r\n    ctx.textAlign = rtlHelper.textAlign('left');\r\n    ctx.textBaseline = 'middle';\r\n    ctx.lineWidth = 0.5;\r\n    ctx.font = labelFont.string;\r\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\r\n    const drawLegendBox = function(x, y, legendItem) {\r\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\r\n        return;\r\n      }\r\n      ctx.save();\r\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\r\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\r\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\r\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\r\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\r\n      ctx.lineWidth = lineWidth;\r\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\r\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\r\n      if (labelOpts.usePointStyle) {\r\n        const drawOptions = {\r\n          radius: boxWidth * Math.SQRT2 / 2,\r\n          pointStyle: legendItem.pointStyle,\r\n          rotation: legendItem.rotation,\r\n          borderWidth: lineWidth\r\n        };\r\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\r\n        const centerY = y + halfFontSize;\r\n        drawPoint(ctx, drawOptions, centerX, centerY);\r\n      } else {\r\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\r\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\r\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\r\n        ctx.beginPath();\r\n        if (Object.values(borderRadius).some(v => v !== 0)) {\r\n          addRoundedRectPath(ctx, {\r\n            x: xBoxLeft,\r\n            y: yBoxTop,\r\n            w: boxWidth,\r\n            h: boxHeight,\r\n            radius: borderRadius,\r\n          });\r\n        } else {\r\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\r\n        }\r\n        ctx.fill();\r\n        if (lineWidth !== 0) {\r\n          ctx.stroke();\r\n        }\r\n      }\r\n      ctx.restore();\r\n    };\r\n    const fillText = function(x, y, legendItem) {\r\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\r\n        strikethrough: legendItem.hidden,\r\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\r\n      });\r\n    };\r\n    const isHorizontal = this.isHorizontal();\r\n    const titleHeight = this._computeTitleHeight();\r\n    if (isHorizontal) {\r\n      cursor = {\r\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\r\n        y: this.top + padding + titleHeight,\r\n        line: 0\r\n      };\r\n    } else {\r\n      cursor = {\r\n        x: this.left + padding,\r\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\r\n        line: 0\r\n      };\r\n    }\r\n    overrideTextDirection(this.ctx, opts.textDirection);\r\n    const lineHeight = itemHeight + padding;\r\n    this.legendItems.forEach((legendItem, i) => {\r\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\r\n      ctx.fillStyle = legendItem.fontColor || fontColor;\r\n      const textWidth = ctx.measureText(legendItem.text).width;\r\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\r\n      const width = boxWidth + halfFontSize + textWidth;\r\n      let x = cursor.x;\r\n      let y = cursor.y;\r\n      rtlHelper.setWidth(this.width);\r\n      if (isHorizontal) {\r\n        if (i > 0 && x + width + padding > this.right) {\r\n          y = cursor.y += lineHeight;\r\n          cursor.line++;\r\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\r\n        }\r\n      } else if (i > 0 && y + lineHeight > this.bottom) {\r\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\r\n        cursor.line++;\r\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\r\n      }\r\n      const realX = rtlHelper.x(x);\r\n      drawLegendBox(realX, y, legendItem);\r\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\r\n      fillText(rtlHelper.x(x), y, legendItem);\r\n      if (isHorizontal) {\r\n        cursor.x += width + padding;\r\n      } else {\r\n        cursor.y += lineHeight;\r\n      }\r\n    });\r\n    restoreTextDirection(this.ctx, opts.textDirection);\r\n  }\r\n  drawTitle() {\r\n    const opts = this.options;\r\n    const titleOpts = opts.title;\r\n    const titleFont = toFont(titleOpts.font);\r\n    const titlePadding = toPadding(titleOpts.padding);\r\n    if (!titleOpts.display) {\r\n      return;\r\n    }\r\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\r\n    const ctx = this.ctx;\r\n    const position = titleOpts.position;\r\n    const halfFontSize = titleFont.size / 2;\r\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\r\n    let y;\r\n    let left = this.left;\r\n    let maxWidth = this.width;\r\n    if (this.isHorizontal()) {\r\n      maxWidth = Math.max(...this.lineWidths);\r\n      y = this.top + topPaddingPlusHalfFontSize;\r\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\r\n    } else {\r\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\r\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\r\n    }\r\n    const x = _alignStartEnd(position, left, left + maxWidth);\r\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\r\n    ctx.textBaseline = 'middle';\r\n    ctx.strokeStyle = titleOpts.color;\r\n    ctx.fillStyle = titleOpts.color;\r\n    ctx.font = titleFont.string;\r\n    renderText(ctx, titleOpts.text, x, y, titleFont);\r\n  }\r\n  _computeTitleHeight() {\r\n    const titleOpts = this.options.title;\r\n    const titleFont = toFont(titleOpts.font);\r\n    const titlePadding = toPadding(titleOpts.padding);\r\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\r\n  }\r\n  _getLegendItemAt(x, y) {\r\n    let i, hitBox, lh;\r\n    if (_isBetween(x, this.left, this.right)\r\n      && _isBetween(y, this.top, this.bottom)) {\r\n      lh = this.legendHitBoxes;\r\n      for (i = 0; i < lh.length; ++i) {\r\n        hitBox = lh[i];\r\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\r\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\r\n          return this.legendItems[i];\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  handleEvent(e) {\r\n    const opts = this.options;\r\n    if (!isListened(e.type, opts)) {\r\n      return;\r\n    }\r\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\r\n    if (e.type === 'mousemove') {\r\n      const previous = this._hoveredItem;\r\n      const sameItem = itemsEqual(previous, hoveredItem);\r\n      if (previous && !sameItem) {\r\n        callback(opts.onLeave, [e, previous, this], this);\r\n      }\r\n      this._hoveredItem = hoveredItem;\r\n      if (hoveredItem && !sameItem) {\r\n        callback(opts.onHover, [e, hoveredItem, this], this);\r\n      }\r\n    } else if (hoveredItem) {\r\n      callback(opts.onClick, [e, hoveredItem, this], this);\r\n    }\r\n  }\r\n}\r\nfunction isListened(type, opts) {\r\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\r\n    return true;\r\n  }\r\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nvar plugin_legend = {\r\n  id: 'legend',\r\n  _element: Legend,\r\n  start(chart, _args, options) {\r\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\r\n    layouts.configure(chart, legend, options);\r\n    layouts.addBox(chart, legend);\r\n  },\r\n  stop(chart) {\r\n    layouts.removeBox(chart, chart.legend);\r\n    delete chart.legend;\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    const legend = chart.legend;\r\n    layouts.configure(chart, legend, options);\r\n    legend.options = options;\r\n  },\r\n  afterUpdate(chart) {\r\n    const legend = chart.legend;\r\n    legend.buildLabels();\r\n    legend.adjustHitBoxes();\r\n  },\r\n  afterEvent(chart, args) {\r\n    if (!args.replay) {\r\n      chart.legend.handleEvent(args.event);\r\n    }\r\n  },\r\n  defaults: {\r\n    display: true,\r\n    position: 'top',\r\n    align: 'center',\r\n    fullSize: true,\r\n    reverse: false,\r\n    weight: 1000,\r\n    onClick(e, legendItem, legend) {\r\n      const index = legendItem.datasetIndex;\r\n      const ci = legend.chart;\r\n      if (ci.isDatasetVisible(index)) {\r\n        ci.hide(index);\r\n        legendItem.hidden = true;\r\n      } else {\r\n        ci.show(index);\r\n        legendItem.hidden = false;\r\n      }\r\n    },\r\n    onHover: null,\r\n    onLeave: null,\r\n    labels: {\r\n      color: (ctx) => ctx.chart.options.color,\r\n      boxWidth: 40,\r\n      padding: 10,\r\n      generateLabels(chart) {\r\n        const datasets = chart.data.datasets;\r\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\r\n        return chart._getSortedDatasetMetas().map((meta) => {\r\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\r\n          const borderWidth = toPadding(style.borderWidth);\r\n          return {\r\n            text: datasets[meta.index].label,\r\n            fillStyle: style.backgroundColor,\r\n            fontColor: color,\r\n            hidden: !meta.visible,\r\n            lineCap: style.borderCapStyle,\r\n            lineDash: style.borderDash,\r\n            lineDashOffset: style.borderDashOffset,\r\n            lineJoin: style.borderJoinStyle,\r\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\r\n            strokeStyle: style.borderColor,\r\n            pointStyle: pointStyle || style.pointStyle,\r\n            rotation: style.rotation,\r\n            textAlign: textAlign || style.textAlign,\r\n            borderRadius: 0,\r\n            datasetIndex: meta.index\r\n          };\r\n        }, this);\r\n      }\r\n    },\r\n    title: {\r\n      color: (ctx) => ctx.chart.options.color,\r\n      display: false,\r\n      position: 'center',\r\n      text: '',\r\n    }\r\n  },\r\n  descriptors: {\r\n    _scriptable: (name) => !name.startsWith('on'),\r\n    labels: {\r\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\r\n    }\r\n  },\r\n};\r\n\r\nclass Title extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this.chart = config.chart;\r\n    this.options = config.options;\r\n    this.ctx = config.ctx;\r\n    this._padding = undefined;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    this.position = undefined;\r\n    this.weight = undefined;\r\n    this.fullSize = undefined;\r\n  }\r\n  update(maxWidth, maxHeight) {\r\n    const opts = this.options;\r\n    this.left = 0;\r\n    this.top = 0;\r\n    if (!opts.display) {\r\n      this.width = this.height = this.right = this.bottom = 0;\r\n      return;\r\n    }\r\n    this.width = this.right = maxWidth;\r\n    this.height = this.bottom = maxHeight;\r\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\r\n    this._padding = toPadding(opts.padding);\r\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\r\n    if (this.isHorizontal()) {\r\n      this.height = textSize;\r\n    } else {\r\n      this.width = textSize;\r\n    }\r\n  }\r\n  isHorizontal() {\r\n    const pos = this.options.position;\r\n    return pos === 'top' || pos === 'bottom';\r\n  }\r\n  _drawArgs(offset) {\r\n    const {top, left, bottom, right, options} = this;\r\n    const align = options.align;\r\n    let rotation = 0;\r\n    let maxWidth, titleX, titleY;\r\n    if (this.isHorizontal()) {\r\n      titleX = _alignStartEnd(align, left, right);\r\n      titleY = top + offset;\r\n      maxWidth = right - left;\r\n    } else {\r\n      if (options.position === 'left') {\r\n        titleX = left + offset;\r\n        titleY = _alignStartEnd(align, bottom, top);\r\n        rotation = PI * -0.5;\r\n      } else {\r\n        titleX = right - offset;\r\n        titleY = _alignStartEnd(align, top, bottom);\r\n        rotation = PI * 0.5;\r\n      }\r\n      maxWidth = bottom - top;\r\n    }\r\n    return {titleX, titleY, maxWidth, rotation};\r\n  }\r\n  draw() {\r\n    const ctx = this.ctx;\r\n    const opts = this.options;\r\n    if (!opts.display) {\r\n      return;\r\n    }\r\n    const fontOpts = toFont(opts.font);\r\n    const lineHeight = fontOpts.lineHeight;\r\n    const offset = lineHeight / 2 + this._padding.top;\r\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\r\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\r\n      color: opts.color,\r\n      maxWidth,\r\n      rotation,\r\n      textAlign: _toLeftRightCenter(opts.align),\r\n      textBaseline: 'middle',\r\n      translation: [titleX, titleY],\r\n    });\r\n  }\r\n}\r\nfunction createTitle(chart, titleOpts) {\r\n  const title = new Title({\r\n    ctx: chart.ctx,\r\n    options: titleOpts,\r\n    chart\r\n  });\r\n  layouts.configure(chart, title, titleOpts);\r\n  layouts.addBox(chart, title);\r\n  chart.titleBlock = title;\r\n}\r\nvar plugin_title = {\r\n  id: 'title',\r\n  _element: Title,\r\n  start(chart, _args, options) {\r\n    createTitle(chart, options);\r\n  },\r\n  stop(chart) {\r\n    const titleBlock = chart.titleBlock;\r\n    layouts.removeBox(chart, titleBlock);\r\n    delete chart.titleBlock;\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    const title = chart.titleBlock;\r\n    layouts.configure(chart, title, options);\r\n    title.options = options;\r\n  },\r\n  defaults: {\r\n    align: 'center',\r\n    display: false,\r\n    font: {\r\n      weight: 'bold',\r\n    },\r\n    fullSize: true,\r\n    padding: 10,\r\n    position: 'top',\r\n    text: '',\r\n    weight: 2000\r\n  },\r\n  defaultRoutes: {\r\n    color: 'color'\r\n  },\r\n  descriptors: {\r\n    _scriptable: true,\r\n    _indexable: false,\r\n  },\r\n};\r\n\r\nconst map = new WeakMap();\r\nvar plugin_subtitle = {\r\n  id: 'subtitle',\r\n  start(chart, _args, options) {\r\n    const title = new Title({\r\n      ctx: chart.ctx,\r\n      options,\r\n      chart\r\n    });\r\n    layouts.configure(chart, title, options);\r\n    layouts.addBox(chart, title);\r\n    map.set(chart, title);\r\n  },\r\n  stop(chart) {\r\n    layouts.removeBox(chart, map.get(chart));\r\n    map.delete(chart);\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    const title = map.get(chart);\r\n    layouts.configure(chart, title, options);\r\n    title.options = options;\r\n  },\r\n  defaults: {\r\n    align: 'center',\r\n    display: false,\r\n    font: {\r\n      weight: 'normal',\r\n    },\r\n    fullSize: true,\r\n    padding: 0,\r\n    position: 'top',\r\n    text: '',\r\n    weight: 1500\r\n  },\r\n  defaultRoutes: {\r\n    color: 'color'\r\n  },\r\n  descriptors: {\r\n    _scriptable: true,\r\n    _indexable: false,\r\n  },\r\n};\r\n\r\nconst positioners = {\r\n  average(items) {\r\n    if (!items.length) {\r\n      return false;\r\n    }\r\n    let i, len;\r\n    let x = 0;\r\n    let y = 0;\r\n    let count = 0;\r\n    for (i = 0, len = items.length; i < len; ++i) {\r\n      const el = items[i].element;\r\n      if (el && el.hasValue()) {\r\n        const pos = el.tooltipPosition();\r\n        x += pos.x;\r\n        y += pos.y;\r\n        ++count;\r\n      }\r\n    }\r\n    return {\r\n      x: x / count,\r\n      y: y / count\r\n    };\r\n  },\r\n  nearest(items, eventPosition) {\r\n    if (!items.length) {\r\n      return false;\r\n    }\r\n    let x = eventPosition.x;\r\n    let y = eventPosition.y;\r\n    let minDistance = Number.POSITIVE_INFINITY;\r\n    let i, len, nearestElement;\r\n    for (i = 0, len = items.length; i < len; ++i) {\r\n      const el = items[i].element;\r\n      if (el && el.hasValue()) {\r\n        const center = el.getCenterPoint();\r\n        const d = distanceBetweenPoints(eventPosition, center);\r\n        if (d < minDistance) {\r\n          minDistance = d;\r\n          nearestElement = el;\r\n        }\r\n      }\r\n    }\r\n    if (nearestElement) {\r\n      const tp = nearestElement.tooltipPosition();\r\n      x = tp.x;\r\n      y = tp.y;\r\n    }\r\n    return {\r\n      x,\r\n      y\r\n    };\r\n  }\r\n};\r\nfunction pushOrConcat(base, toPush) {\r\n  if (toPush) {\r\n    if (isArray(toPush)) {\r\n      Array.prototype.push.apply(base, toPush);\r\n    } else {\r\n      base.push(toPush);\r\n    }\r\n  }\r\n  return base;\r\n}\r\nfunction splitNewlines(str) {\r\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\r\n    return str.split('\\n');\r\n  }\r\n  return str;\r\n}\r\nfunction createTooltipItem(chart, item) {\r\n  const {element, datasetIndex, index} = item;\r\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\r\n  const {label, value} = controller.getLabelAndValue(index);\r\n  return {\r\n    chart,\r\n    label,\r\n    parsed: controller.getParsed(index),\r\n    raw: chart.data.datasets[datasetIndex].data[index],\r\n    formattedValue: value,\r\n    dataset: controller.getDataset(),\r\n    dataIndex: index,\r\n    datasetIndex,\r\n    element\r\n  };\r\n}\r\nfunction getTooltipSize(tooltip, options) {\r\n  const ctx = tooltip.chart.ctx;\r\n  const {body, footer, title} = tooltip;\r\n  const {boxWidth, boxHeight} = options;\r\n  const bodyFont = toFont(options.bodyFont);\r\n  const titleFont = toFont(options.titleFont);\r\n  const footerFont = toFont(options.footerFont);\r\n  const titleLineCount = title.length;\r\n  const footerLineCount = footer.length;\r\n  const bodyLineItemCount = body.length;\r\n  const padding = toPadding(options.padding);\r\n  let height = padding.height;\r\n  let width = 0;\r\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\r\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\r\n  if (titleLineCount) {\r\n    height += titleLineCount * titleFont.lineHeight\r\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\r\n\t\t\t+ options.titleMarginBottom;\r\n  }\r\n  if (combinedBodyLength) {\r\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\r\n    height += bodyLineItemCount * bodyLineHeight\r\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\r\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\r\n  }\r\n  if (footerLineCount) {\r\n    height += options.footerMarginTop\r\n\t\t\t+ footerLineCount * footerFont.lineHeight\r\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\r\n  }\r\n  let widthPadding = 0;\r\n  const maxLineWidth = function(line) {\r\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\r\n  };\r\n  ctx.save();\r\n  ctx.font = titleFont.string;\r\n  each(tooltip.title, maxLineWidth);\r\n  ctx.font = bodyFont.string;\r\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\r\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\r\n  each(body, (bodyItem) => {\r\n    each(bodyItem.before, maxLineWidth);\r\n    each(bodyItem.lines, maxLineWidth);\r\n    each(bodyItem.after, maxLineWidth);\r\n  });\r\n  widthPadding = 0;\r\n  ctx.font = footerFont.string;\r\n  each(tooltip.footer, maxLineWidth);\r\n  ctx.restore();\r\n  width += padding.width;\r\n  return {width, height};\r\n}\r\nfunction determineYAlign(chart, size) {\r\n  const {y, height} = size;\r\n  if (y < height / 2) {\r\n    return 'top';\r\n  } else if (y > (chart.height - height / 2)) {\r\n    return 'bottom';\r\n  }\r\n  return 'center';\r\n}\r\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\r\n  const {x, width} = size;\r\n  const caret = options.caretSize + options.caretPadding;\r\n  if (xAlign === 'left' && x + width + caret > chart.width) {\r\n    return true;\r\n  }\r\n  if (xAlign === 'right' && x - width - caret < 0) {\r\n    return true;\r\n  }\r\n}\r\nfunction determineXAlign(chart, options, size, yAlign) {\r\n  const {x, width} = size;\r\n  const {width: chartWidth, chartArea: {left, right}} = chart;\r\n  let xAlign = 'center';\r\n  if (yAlign === 'center') {\r\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\r\n  } else if (x <= width / 2) {\r\n    xAlign = 'left';\r\n  } else if (x >= chartWidth - width / 2) {\r\n    xAlign = 'right';\r\n  }\r\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\r\n    xAlign = 'center';\r\n  }\r\n  return xAlign;\r\n}\r\nfunction determineAlignment(chart, options, size) {\r\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\r\n  return {\r\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\r\n    yAlign\r\n  };\r\n}\r\nfunction alignX(size, xAlign) {\r\n  let {x, width} = size;\r\n  if (xAlign === 'right') {\r\n    x -= width;\r\n  } else if (xAlign === 'center') {\r\n    x -= (width / 2);\r\n  }\r\n  return x;\r\n}\r\nfunction alignY(size, yAlign, paddingAndSize) {\r\n  let {y, height} = size;\r\n  if (yAlign === 'top') {\r\n    y += paddingAndSize;\r\n  } else if (yAlign === 'bottom') {\r\n    y -= height + paddingAndSize;\r\n  } else {\r\n    y -= (height / 2);\r\n  }\r\n  return y;\r\n}\r\nfunction getBackgroundPoint(options, size, alignment, chart) {\r\n  const {caretSize, caretPadding, cornerRadius} = options;\r\n  const {xAlign, yAlign} = alignment;\r\n  const paddingAndSize = caretSize + caretPadding;\r\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\r\n  let x = alignX(size, xAlign);\r\n  const y = alignY(size, yAlign, paddingAndSize);\r\n  if (yAlign === 'center') {\r\n    if (xAlign === 'left') {\r\n      x += paddingAndSize;\r\n    } else if (xAlign === 'right') {\r\n      x -= paddingAndSize;\r\n    }\r\n  } else if (xAlign === 'left') {\r\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\r\n  } else if (xAlign === 'right') {\r\n    x += Math.max(topRight, bottomRight) + caretSize;\r\n  }\r\n  return {\r\n    x: _limitValue(x, 0, chart.width - size.width),\r\n    y: _limitValue(y, 0, chart.height - size.height)\r\n  };\r\n}\r\nfunction getAlignedX(tooltip, align, options) {\r\n  const padding = toPadding(options.padding);\r\n  return align === 'center'\r\n    ? tooltip.x + tooltip.width / 2\r\n    : align === 'right'\r\n      ? tooltip.x + tooltip.width - padding.right\r\n      : tooltip.x + padding.left;\r\n}\r\nfunction getBeforeAfterBodyLines(callback) {\r\n  return pushOrConcat([], splitNewlines(callback));\r\n}\r\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\r\n  return createContext(parent, {\r\n    tooltip,\r\n    tooltipItems,\r\n    type: 'tooltip'\r\n  });\r\n}\r\nfunction overrideCallbacks(callbacks, context) {\r\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\r\n  return override ? callbacks.override(override) : callbacks;\r\n}\r\nclass Tooltip extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this.opacity = 0;\r\n    this._active = [];\r\n    this._eventPosition = undefined;\r\n    this._size = undefined;\r\n    this._cachedAnimations = undefined;\r\n    this._tooltipItems = [];\r\n    this.$animations = undefined;\r\n    this.$context = undefined;\r\n    this.chart = config.chart || config._chart;\r\n    this._chart = this.chart;\r\n    this.options = config.options;\r\n    this.dataPoints = undefined;\r\n    this.title = undefined;\r\n    this.beforeBody = undefined;\r\n    this.body = undefined;\r\n    this.afterBody = undefined;\r\n    this.footer = undefined;\r\n    this.xAlign = undefined;\r\n    this.yAlign = undefined;\r\n    this.x = undefined;\r\n    this.y = undefined;\r\n    this.height = undefined;\r\n    this.width = undefined;\r\n    this.caretX = undefined;\r\n    this.caretY = undefined;\r\n    this.labelColors = undefined;\r\n    this.labelPointStyles = undefined;\r\n    this.labelTextColors = undefined;\r\n  }\r\n  initialize(options) {\r\n    this.options = options;\r\n    this._cachedAnimations = undefined;\r\n    this.$context = undefined;\r\n  }\r\n  _resolveAnimations() {\r\n    const cached = this._cachedAnimations;\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    const chart = this.chart;\r\n    const options = this.options.setContext(this.getContext());\r\n    const opts = options.enabled && chart.options.animation && options.animations;\r\n    const animations = new Animations(this.chart, opts);\r\n    if (opts._cacheable) {\r\n      this._cachedAnimations = Object.freeze(animations);\r\n    }\r\n    return animations;\r\n  }\r\n  getContext() {\r\n    return this.$context ||\r\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\r\n  }\r\n  getTitle(context, options) {\r\n    const {callbacks} = options;\r\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\r\n    const title = callbacks.title.apply(this, [context]);\r\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\r\n    let lines = [];\r\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\r\n    lines = pushOrConcat(lines, splitNewlines(title));\r\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\r\n    return lines;\r\n  }\r\n  getBeforeBody(tooltipItems, options) {\r\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\r\n  }\r\n  getBody(tooltipItems, options) {\r\n    const {callbacks} = options;\r\n    const bodyItems = [];\r\n    each(tooltipItems, (context) => {\r\n      const bodyItem = {\r\n        before: [],\r\n        lines: [],\r\n        after: []\r\n      };\r\n      const scoped = overrideCallbacks(callbacks, context);\r\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\r\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\r\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\r\n      bodyItems.push(bodyItem);\r\n    });\r\n    return bodyItems;\r\n  }\r\n  getAfterBody(tooltipItems, options) {\r\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\r\n  }\r\n  getFooter(tooltipItems, options) {\r\n    const {callbacks} = options;\r\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\r\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\r\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\r\n    let lines = [];\r\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\r\n    lines = pushOrConcat(lines, splitNewlines(footer));\r\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\r\n    return lines;\r\n  }\r\n  _createItems(options) {\r\n    const active = this._active;\r\n    const data = this.chart.data;\r\n    const labelColors = [];\r\n    const labelPointStyles = [];\r\n    const labelTextColors = [];\r\n    let tooltipItems = [];\r\n    let i, len;\r\n    for (i = 0, len = active.length; i < len; ++i) {\r\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\r\n    }\r\n    if (options.filter) {\r\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\r\n    }\r\n    if (options.itemSort) {\r\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\r\n    }\r\n    each(tooltipItems, (context) => {\r\n      const scoped = overrideCallbacks(options.callbacks, context);\r\n      labelColors.push(scoped.labelColor.call(this, context));\r\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\r\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\r\n    });\r\n    this.labelColors = labelColors;\r\n    this.labelPointStyles = labelPointStyles;\r\n    this.labelTextColors = labelTextColors;\r\n    this.dataPoints = tooltipItems;\r\n    return tooltipItems;\r\n  }\r\n  update(changed, replay) {\r\n    const options = this.options.setContext(this.getContext());\r\n    const active = this._active;\r\n    let properties;\r\n    let tooltipItems = [];\r\n    if (!active.length) {\r\n      if (this.opacity !== 0) {\r\n        properties = {\r\n          opacity: 0\r\n        };\r\n      }\r\n    } else {\r\n      const position = positioners[options.position].call(this, active, this._eventPosition);\r\n      tooltipItems = this._createItems(options);\r\n      this.title = this.getTitle(tooltipItems, options);\r\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\r\n      this.body = this.getBody(tooltipItems, options);\r\n      this.afterBody = this.getAfterBody(tooltipItems, options);\r\n      this.footer = this.getFooter(tooltipItems, options);\r\n      const size = this._size = getTooltipSize(this, options);\r\n      const positionAndSize = Object.assign({}, position, size);\r\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\r\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\r\n      this.xAlign = alignment.xAlign;\r\n      this.yAlign = alignment.yAlign;\r\n      properties = {\r\n        opacity: 1,\r\n        x: backgroundPoint.x,\r\n        y: backgroundPoint.y,\r\n        width: size.width,\r\n        height: size.height,\r\n        caretX: position.x,\r\n        caretY: position.y\r\n      };\r\n    }\r\n    this._tooltipItems = tooltipItems;\r\n    this.$context = undefined;\r\n    if (properties) {\r\n      this._resolveAnimations().update(this, properties);\r\n    }\r\n    if (changed && options.external) {\r\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\r\n    }\r\n  }\r\n  drawCaret(tooltipPoint, ctx, size, options) {\r\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\r\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\r\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\r\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\r\n  }\r\n  getCaretPosition(tooltipPoint, size, options) {\r\n    const {xAlign, yAlign} = this;\r\n    const {caretSize, cornerRadius} = options;\r\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\r\n    const {x: ptX, y: ptY} = tooltipPoint;\r\n    const {width, height} = size;\r\n    let x1, x2, x3, y1, y2, y3;\r\n    if (yAlign === 'center') {\r\n      y2 = ptY + (height / 2);\r\n      if (xAlign === 'left') {\r\n        x1 = ptX;\r\n        x2 = x1 - caretSize;\r\n        y1 = y2 + caretSize;\r\n        y3 = y2 - caretSize;\r\n      } else {\r\n        x1 = ptX + width;\r\n        x2 = x1 + caretSize;\r\n        y1 = y2 - caretSize;\r\n        y3 = y2 + caretSize;\r\n      }\r\n      x3 = x1;\r\n    } else {\r\n      if (xAlign === 'left') {\r\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\r\n      } else if (xAlign === 'right') {\r\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\r\n      } else {\r\n        x2 = this.caretX;\r\n      }\r\n      if (yAlign === 'top') {\r\n        y1 = ptY;\r\n        y2 = y1 - caretSize;\r\n        x1 = x2 - caretSize;\r\n        x3 = x2 + caretSize;\r\n      } else {\r\n        y1 = ptY + height;\r\n        y2 = y1 + caretSize;\r\n        x1 = x2 + caretSize;\r\n        x3 = x2 - caretSize;\r\n      }\r\n      y3 = y1;\r\n    }\r\n    return {x1, x2, x3, y1, y2, y3};\r\n  }\r\n  drawTitle(pt, ctx, options) {\r\n    const title = this.title;\r\n    const length = title.length;\r\n    let titleFont, titleSpacing, i;\r\n    if (length) {\r\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\r\n      pt.x = getAlignedX(this, options.titleAlign, options);\r\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\r\n      ctx.textBaseline = 'middle';\r\n      titleFont = toFont(options.titleFont);\r\n      titleSpacing = options.titleSpacing;\r\n      ctx.fillStyle = options.titleColor;\r\n      ctx.font = titleFont.string;\r\n      for (i = 0; i < length; ++i) {\r\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\r\n        pt.y += titleFont.lineHeight + titleSpacing;\r\n        if (i + 1 === length) {\r\n          pt.y += options.titleMarginBottom - titleSpacing;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\r\n    const labelColors = this.labelColors[i];\r\n    const labelPointStyle = this.labelPointStyles[i];\r\n    const {boxHeight, boxWidth, boxPadding} = options;\r\n    const bodyFont = toFont(options.bodyFont);\r\n    const colorX = getAlignedX(this, 'left', options);\r\n    const rtlColorX = rtlHelper.x(colorX);\r\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\r\n    const colorY = pt.y + yOffSet;\r\n    if (options.usePointStyle) {\r\n      const drawOptions = {\r\n        radius: Math.min(boxWidth, boxHeight) / 2,\r\n        pointStyle: labelPointStyle.pointStyle,\r\n        rotation: labelPointStyle.rotation,\r\n        borderWidth: 1\r\n      };\r\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\r\n      const centerY = colorY + boxHeight / 2;\r\n      ctx.strokeStyle = options.multiKeyBackground;\r\n      ctx.fillStyle = options.multiKeyBackground;\r\n      drawPoint(ctx, drawOptions, centerX, centerY);\r\n      ctx.strokeStyle = labelColors.borderColor;\r\n      ctx.fillStyle = labelColors.backgroundColor;\r\n      drawPoint(ctx, drawOptions, centerX, centerY);\r\n    } else {\r\n      ctx.lineWidth = labelColors.borderWidth || 1;\r\n      ctx.strokeStyle = labelColors.borderColor;\r\n      ctx.setLineDash(labelColors.borderDash || []);\r\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\r\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\r\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\r\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\r\n      if (Object.values(borderRadius).some(v => v !== 0)) {\r\n        ctx.beginPath();\r\n        ctx.fillStyle = options.multiKeyBackground;\r\n        addRoundedRectPath(ctx, {\r\n          x: outerX,\r\n          y: colorY,\r\n          w: boxWidth,\r\n          h: boxHeight,\r\n          radius: borderRadius,\r\n        });\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        ctx.fillStyle = labelColors.backgroundColor;\r\n        ctx.beginPath();\r\n        addRoundedRectPath(ctx, {\r\n          x: innerX,\r\n          y: colorY + 1,\r\n          w: boxWidth - 2,\r\n          h: boxHeight - 2,\r\n          radius: borderRadius,\r\n        });\r\n        ctx.fill();\r\n      } else {\r\n        ctx.fillStyle = options.multiKeyBackground;\r\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\r\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\r\n        ctx.fillStyle = labelColors.backgroundColor;\r\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\r\n      }\r\n    }\r\n    ctx.fillStyle = this.labelTextColors[i];\r\n  }\r\n  drawBody(pt, ctx, options) {\r\n    const {body} = this;\r\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\r\n    const bodyFont = toFont(options.bodyFont);\r\n    let bodyLineHeight = bodyFont.lineHeight;\r\n    let xLinePadding = 0;\r\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\r\n    const fillLineOfText = function(line) {\r\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\r\n      pt.y += bodyLineHeight + bodySpacing;\r\n    };\r\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\r\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\r\n    ctx.textAlign = bodyAlign;\r\n    ctx.textBaseline = 'middle';\r\n    ctx.font = bodyFont.string;\r\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\r\n    ctx.fillStyle = options.bodyColor;\r\n    each(this.beforeBody, fillLineOfText);\r\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\r\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\r\n      : 0;\r\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\r\n      bodyItem = body[i];\r\n      textColor = this.labelTextColors[i];\r\n      ctx.fillStyle = textColor;\r\n      each(bodyItem.before, fillLineOfText);\r\n      lines = bodyItem.lines;\r\n      if (displayColors && lines.length) {\r\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\r\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\r\n      }\r\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\r\n        fillLineOfText(lines[j]);\r\n        bodyLineHeight = bodyFont.lineHeight;\r\n      }\r\n      each(bodyItem.after, fillLineOfText);\r\n    }\r\n    xLinePadding = 0;\r\n    bodyLineHeight = bodyFont.lineHeight;\r\n    each(this.afterBody, fillLineOfText);\r\n    pt.y -= bodySpacing;\r\n  }\r\n  drawFooter(pt, ctx, options) {\r\n    const footer = this.footer;\r\n    const length = footer.length;\r\n    let footerFont, i;\r\n    if (length) {\r\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\r\n      pt.x = getAlignedX(this, options.footerAlign, options);\r\n      pt.y += options.footerMarginTop;\r\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\r\n      ctx.textBaseline = 'middle';\r\n      footerFont = toFont(options.footerFont);\r\n      ctx.fillStyle = options.footerColor;\r\n      ctx.font = footerFont.string;\r\n      for (i = 0; i < length; ++i) {\r\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\r\n        pt.y += footerFont.lineHeight + options.footerSpacing;\r\n      }\r\n    }\r\n  }\r\n  drawBackground(pt, ctx, tooltipSize, options) {\r\n    const {xAlign, yAlign} = this;\r\n    const {x, y} = pt;\r\n    const {width, height} = tooltipSize;\r\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\r\n    ctx.fillStyle = options.backgroundColor;\r\n    ctx.strokeStyle = options.borderColor;\r\n    ctx.lineWidth = options.borderWidth;\r\n    ctx.beginPath();\r\n    ctx.moveTo(x + topLeft, y);\r\n    if (yAlign === 'top') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + width - topRight, y);\r\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\r\n    if (yAlign === 'center' && xAlign === 'right') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + width, y + height - bottomRight);\r\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\r\n    if (yAlign === 'bottom') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + bottomLeft, y + height);\r\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\r\n    if (yAlign === 'center' && xAlign === 'left') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x, y + topLeft);\r\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    if (options.borderWidth > 0) {\r\n      ctx.stroke();\r\n    }\r\n  }\r\n  _updateAnimationTarget(options) {\r\n    const chart = this.chart;\r\n    const anims = this.$animations;\r\n    const animX = anims && anims.x;\r\n    const animY = anims && anims.y;\r\n    if (animX || animY) {\r\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\r\n      if (!position) {\r\n        return;\r\n      }\r\n      const size = this._size = getTooltipSize(this, options);\r\n      const positionAndSize = Object.assign({}, position, this._size);\r\n      const alignment = determineAlignment(chart, options, positionAndSize);\r\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\r\n      if (animX._to !== point.x || animY._to !== point.y) {\r\n        this.xAlign = alignment.xAlign;\r\n        this.yAlign = alignment.yAlign;\r\n        this.width = size.width;\r\n        this.height = size.height;\r\n        this.caretX = position.x;\r\n        this.caretY = position.y;\r\n        this._resolveAnimations().update(this, point);\r\n      }\r\n    }\r\n  }\r\n  draw(ctx) {\r\n    const options = this.options.setContext(this.getContext());\r\n    let opacity = this.opacity;\r\n    if (!opacity) {\r\n      return;\r\n    }\r\n    this._updateAnimationTarget(options);\r\n    const tooltipSize = {\r\n      width: this.width,\r\n      height: this.height\r\n    };\r\n    const pt = {\r\n      x: this.x,\r\n      y: this.y\r\n    };\r\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\r\n    const padding = toPadding(options.padding);\r\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\r\n    if (options.enabled && hasTooltipContent) {\r\n      ctx.save();\r\n      ctx.globalAlpha = opacity;\r\n      this.drawBackground(pt, ctx, tooltipSize, options);\r\n      overrideTextDirection(ctx, options.textDirection);\r\n      pt.y += padding.top;\r\n      this.drawTitle(pt, ctx, options);\r\n      this.drawBody(pt, ctx, options);\r\n      this.drawFooter(pt, ctx, options);\r\n      restoreTextDirection(ctx, options.textDirection);\r\n      ctx.restore();\r\n    }\r\n  }\r\n  getActiveElements() {\r\n    return this._active || [];\r\n  }\r\n  setActiveElements(activeElements, eventPosition) {\r\n    const lastActive = this._active;\r\n    const active = activeElements.map(({datasetIndex, index}) => {\r\n      const meta = this.chart.getDatasetMeta(datasetIndex);\r\n      if (!meta) {\r\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\r\n      }\r\n      return {\r\n        datasetIndex,\r\n        element: meta.data[index],\r\n        index,\r\n      };\r\n    });\r\n    const changed = !_elementsEqual(lastActive, active);\r\n    const positionChanged = this._positionChanged(active, eventPosition);\r\n    if (changed || positionChanged) {\r\n      this._active = active;\r\n      this._eventPosition = eventPosition;\r\n      this._ignoreReplayEvents = true;\r\n      this.update(true);\r\n    }\r\n  }\r\n  handleEvent(e, replay, inChartArea = true) {\r\n    if (replay && this._ignoreReplayEvents) {\r\n      return false;\r\n    }\r\n    this._ignoreReplayEvents = false;\r\n    const options = this.options;\r\n    const lastActive = this._active || [];\r\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\r\n    const positionChanged = this._positionChanged(active, e);\r\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\r\n    if (changed) {\r\n      this._active = active;\r\n      if (options.enabled || options.external) {\r\n        this._eventPosition = {\r\n          x: e.x,\r\n          y: e.y\r\n        };\r\n        this.update(true, replay);\r\n      }\r\n    }\r\n    return changed;\r\n  }\r\n  _getActiveElements(e, lastActive, replay, inChartArea) {\r\n    const options = this.options;\r\n    if (e.type === 'mouseout') {\r\n      return [];\r\n    }\r\n    if (!inChartArea) {\r\n      return lastActive;\r\n    }\r\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\r\n    if (options.reverse) {\r\n      active.reverse();\r\n    }\r\n    return active;\r\n  }\r\n  _positionChanged(active, e) {\r\n    const {caretX, caretY, options} = this;\r\n    const position = positioners[options.position].call(this, active, e);\r\n    return position !== false && (caretX !== position.x || caretY !== position.y);\r\n  }\r\n}\r\nTooltip.positioners = positioners;\r\nvar plugin_tooltip = {\r\n  id: 'tooltip',\r\n  _element: Tooltip,\r\n  positioners,\r\n  afterInit(chart, _args, options) {\r\n    if (options) {\r\n      chart.tooltip = new Tooltip({chart, options});\r\n    }\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    if (chart.tooltip) {\r\n      chart.tooltip.initialize(options);\r\n    }\r\n  },\r\n  reset(chart, _args, options) {\r\n    if (chart.tooltip) {\r\n      chart.tooltip.initialize(options);\r\n    }\r\n  },\r\n  afterDraw(chart) {\r\n    const tooltip = chart.tooltip;\r\n    const args = {\r\n      tooltip\r\n    };\r\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\r\n      return;\r\n    }\r\n    if (tooltip) {\r\n      tooltip.draw(chart.ctx);\r\n    }\r\n    chart.notifyPlugins('afterTooltipDraw', args);\r\n  },\r\n  afterEvent(chart, args) {\r\n    if (chart.tooltip) {\r\n      const useFinalPosition = args.replay;\r\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\r\n        args.changed = true;\r\n      }\r\n    }\r\n  },\r\n  defaults: {\r\n    enabled: true,\r\n    external: null,\r\n    position: 'average',\r\n    backgroundColor: 'rgba(0,0,0,0.8)',\r\n    titleColor: '#fff',\r\n    titleFont: {\r\n      weight: 'bold',\r\n    },\r\n    titleSpacing: 2,\r\n    titleMarginBottom: 6,\r\n    titleAlign: 'left',\r\n    bodyColor: '#fff',\r\n    bodySpacing: 2,\r\n    bodyFont: {\r\n    },\r\n    bodyAlign: 'left',\r\n    footerColor: '#fff',\r\n    footerSpacing: 2,\r\n    footerMarginTop: 6,\r\n    footerFont: {\r\n      weight: 'bold',\r\n    },\r\n    footerAlign: 'left',\r\n    padding: 6,\r\n    caretPadding: 2,\r\n    caretSize: 5,\r\n    cornerRadius: 6,\r\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\r\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\r\n    multiKeyBackground: '#fff',\r\n    displayColors: true,\r\n    boxPadding: 0,\r\n    borderColor: 'rgba(0,0,0,0)',\r\n    borderWidth: 0,\r\n    animation: {\r\n      duration: 400,\r\n      easing: 'easeOutQuart',\r\n    },\r\n    animations: {\r\n      numbers: {\r\n        type: 'number',\r\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\r\n      },\r\n      opacity: {\r\n        easing: 'linear',\r\n        duration: 200\r\n      }\r\n    },\r\n    callbacks: {\r\n      beforeTitle: noop,\r\n      title(tooltipItems) {\r\n        if (tooltipItems.length > 0) {\r\n          const item = tooltipItems[0];\r\n          const labels = item.chart.data.labels;\r\n          const labelCount = labels ? labels.length : 0;\r\n          if (this && this.options && this.options.mode === 'dataset') {\r\n            return item.dataset.label || '';\r\n          } else if (item.label) {\r\n            return item.label;\r\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\r\n            return labels[item.dataIndex];\r\n          }\r\n        }\r\n        return '';\r\n      },\r\n      afterTitle: noop,\r\n      beforeBody: noop,\r\n      beforeLabel: noop,\r\n      label(tooltipItem) {\r\n        if (this && this.options && this.options.mode === 'dataset') {\r\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\r\n        }\r\n        let label = tooltipItem.dataset.label || '';\r\n        if (label) {\r\n          label += ': ';\r\n        }\r\n        const value = tooltipItem.formattedValue;\r\n        if (!isNullOrUndef(value)) {\r\n          label += value;\r\n        }\r\n        return label;\r\n      },\r\n      labelColor(tooltipItem) {\r\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\r\n        return {\r\n          borderColor: options.borderColor,\r\n          backgroundColor: options.backgroundColor,\r\n          borderWidth: options.borderWidth,\r\n          borderDash: options.borderDash,\r\n          borderDashOffset: options.borderDashOffset,\r\n          borderRadius: 0,\r\n        };\r\n      },\r\n      labelTextColor() {\r\n        return this.options.bodyColor;\r\n      },\r\n      labelPointStyle(tooltipItem) {\r\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\r\n        return {\r\n          pointStyle: options.pointStyle,\r\n          rotation: options.rotation,\r\n        };\r\n      },\r\n      afterLabel: noop,\r\n      afterBody: noop,\r\n      beforeFooter: noop,\r\n      footer: noop,\r\n      afterFooter: noop\r\n    }\r\n  },\r\n  defaultRoutes: {\r\n    bodyFont: 'font',\r\n    footerFont: 'font',\r\n    titleFont: 'font'\r\n  },\r\n  descriptors: {\r\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\r\n    _indexable: false,\r\n    callbacks: {\r\n      _scriptable: false,\r\n      _indexable: false,\r\n    },\r\n    animation: {\r\n      _fallback: false\r\n    },\r\n    animations: {\r\n      _fallback: 'animation'\r\n    }\r\n  },\r\n  additionalOptionScopes: ['interaction']\r\n};\r\n\r\nvar plugins = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nDecimation: plugin_decimation,\r\nFiller: plugin_filler,\r\nLegend: plugin_legend,\r\nSubTitle: plugin_subtitle,\r\nTitle: plugin_title,\r\nTooltip: plugin_tooltip\r\n});\r\n\r\nconst addIfString = (labels, raw, index, addedLabels) => {\r\n  if (typeof raw === 'string') {\r\n    index = labels.push(raw) - 1;\r\n    addedLabels.unshift({index, label: raw});\r\n  } else if (isNaN(raw)) {\r\n    index = null;\r\n  }\r\n  return index;\r\n};\r\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\r\n  const first = labels.indexOf(raw);\r\n  if (first === -1) {\r\n    return addIfString(labels, raw, index, addedLabels);\r\n  }\r\n  const last = labels.lastIndexOf(raw);\r\n  return first !== last ? index : first;\r\n}\r\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\r\nclass CategoryScale extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this._startValue = undefined;\r\n    this._valueRange = 0;\r\n    this._addedLabels = [];\r\n  }\r\n  init(scaleOptions) {\r\n    const added = this._addedLabels;\r\n    if (added.length) {\r\n      const labels = this.getLabels();\r\n      for (const {index, label} of added) {\r\n        if (labels[index] === label) {\r\n          labels.splice(index, 1);\r\n        }\r\n      }\r\n      this._addedLabels = [];\r\n    }\r\n    super.init(scaleOptions);\r\n  }\r\n  parse(raw, index) {\r\n    if (isNullOrUndef(raw)) {\r\n      return null;\r\n    }\r\n    const labels = this.getLabels();\r\n    index = isFinite(index) && labels[index] === raw ? index\r\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\r\n    return validIndex(index, labels.length - 1);\r\n  }\r\n  determineDataLimits() {\r\n    const {minDefined, maxDefined} = this.getUserBounds();\r\n    let {min, max} = this.getMinMax(true);\r\n    if (this.options.bounds === 'ticks') {\r\n      if (!minDefined) {\r\n        min = 0;\r\n      }\r\n      if (!maxDefined) {\r\n        max = this.getLabels().length - 1;\r\n      }\r\n    }\r\n    this.min = min;\r\n    this.max = max;\r\n  }\r\n  buildTicks() {\r\n    const min = this.min;\r\n    const max = this.max;\r\n    const offset = this.options.offset;\r\n    const ticks = [];\r\n    let labels = this.getLabels();\r\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\r\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\r\n    this._startValue = this.min - (offset ? 0.5 : 0);\r\n    for (let value = min; value <= max; value++) {\r\n      ticks.push({value});\r\n    }\r\n    return ticks;\r\n  }\r\n  getLabelForValue(value) {\r\n    const labels = this.getLabels();\r\n    if (value >= 0 && value < labels.length) {\r\n      return labels[value];\r\n    }\r\n    return value;\r\n  }\r\n  configure() {\r\n    super.configure();\r\n    if (!this.isHorizontal()) {\r\n      this._reversePixels = !this._reversePixels;\r\n    }\r\n  }\r\n  getPixelForValue(value) {\r\n    if (typeof value !== 'number') {\r\n      value = this.parse(value);\r\n    }\r\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\r\n  }\r\n  getPixelForTick(index) {\r\n    const ticks = this.ticks;\r\n    if (index < 0 || index > ticks.length - 1) {\r\n      return null;\r\n    }\r\n    return this.getPixelForValue(ticks[index].value);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\r\n  }\r\n  getBasePixel() {\r\n    return this.bottom;\r\n  }\r\n}\r\nCategoryScale.id = 'category';\r\nCategoryScale.defaults = {\r\n  ticks: {\r\n    callback: CategoryScale.prototype.getLabelForValue\r\n  }\r\n};\r\n\r\nfunction generateTicks$1(generationOptions, dataRange) {\r\n  const ticks = [];\r\n  const MIN_SPACING = 1e-14;\r\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\r\n  const unit = step || 1;\r\n  const maxSpaces = maxTicks - 1;\r\n  const {min: rmin, max: rmax} = dataRange;\r\n  const minDefined = !isNullOrUndef(min);\r\n  const maxDefined = !isNullOrUndef(max);\r\n  const countDefined = !isNullOrUndef(count);\r\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\r\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\r\n  let factor, niceMin, niceMax, numSpaces;\r\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\r\n    return [{value: rmin}, {value: rmax}];\r\n  }\r\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\r\n  if (numSpaces > maxSpaces) {\r\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\r\n  }\r\n  if (!isNullOrUndef(precision)) {\r\n    factor = Math.pow(10, precision);\r\n    spacing = Math.ceil(spacing * factor) / factor;\r\n  }\r\n  if (bounds === 'ticks') {\r\n    niceMin = Math.floor(rmin / spacing) * spacing;\r\n    niceMax = Math.ceil(rmax / spacing) * spacing;\r\n  } else {\r\n    niceMin = rmin;\r\n    niceMax = rmax;\r\n  }\r\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\r\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\r\n    spacing = (max - min) / numSpaces;\r\n    niceMin = min;\r\n    niceMax = max;\r\n  } else if (countDefined) {\r\n    niceMin = minDefined ? min : niceMin;\r\n    niceMax = maxDefined ? max : niceMax;\r\n    numSpaces = count - 1;\r\n    spacing = (niceMax - niceMin) / numSpaces;\r\n  } else {\r\n    numSpaces = (niceMax - niceMin) / spacing;\r\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n      numSpaces = Math.round(numSpaces);\r\n    } else {\r\n      numSpaces = Math.ceil(numSpaces);\r\n    }\r\n  }\r\n  const decimalPlaces = Math.max(\r\n    _decimalPlaces(spacing),\r\n    _decimalPlaces(niceMin)\r\n  );\r\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\r\n  niceMin = Math.round(niceMin * factor) / factor;\r\n  niceMax = Math.round(niceMax * factor) / factor;\r\n  let j = 0;\r\n  if (minDefined) {\r\n    if (includeBounds && niceMin !== min) {\r\n      ticks.push({value: min});\r\n      if (niceMin < min) {\r\n        j++;\r\n      }\r\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\r\n        j++;\r\n      }\r\n    } else if (niceMin < min) {\r\n      j++;\r\n    }\r\n  }\r\n  for (; j < numSpaces; ++j) {\r\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\r\n  }\r\n  if (maxDefined && includeBounds && niceMax !== max) {\r\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\r\n      ticks[ticks.length - 1].value = max;\r\n    } else {\r\n      ticks.push({value: max});\r\n    }\r\n  } else if (!maxDefined || niceMax === max) {\r\n    ticks.push({value: niceMax});\r\n  }\r\n  return ticks;\r\n}\r\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\r\n  const rad = toRadians(minRotation);\r\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\r\n  const length = 0.75 * minSpacing * ('' + value).length;\r\n  return Math.min(minSpacing / ratio, length);\r\n}\r\nclass LinearScaleBase extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.start = undefined;\r\n    this.end = undefined;\r\n    this._startValue = undefined;\r\n    this._endValue = undefined;\r\n    this._valueRange = 0;\r\n  }\r\n  parse(raw, index) {\r\n    if (isNullOrUndef(raw)) {\r\n      return null;\r\n    }\r\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\r\n      return null;\r\n    }\r\n    return +raw;\r\n  }\r\n  handleTickRangeOptions() {\r\n    const {beginAtZero} = this.options;\r\n    const {minDefined, maxDefined} = this.getUserBounds();\r\n    let {min, max} = this;\r\n    const setMin = v => (min = minDefined ? min : v);\r\n    const setMax = v => (max = maxDefined ? max : v);\r\n    if (beginAtZero) {\r\n      const minSign = sign(min);\r\n      const maxSign = sign(max);\r\n      if (minSign < 0 && maxSign < 0) {\r\n        setMax(0);\r\n      } else if (minSign > 0 && maxSign > 0) {\r\n        setMin(0);\r\n      }\r\n    }\r\n    if (min === max) {\r\n      let offset = 1;\r\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\r\n        offset = Math.abs(max * 0.05);\r\n      }\r\n      setMax(max + offset);\r\n      if (!beginAtZero) {\r\n        setMin(min - offset);\r\n      }\r\n    }\r\n    this.min = min;\r\n    this.max = max;\r\n  }\r\n  getTickLimit() {\r\n    const tickOpts = this.options.ticks;\r\n    let {maxTicksLimit, stepSize} = tickOpts;\r\n    let maxTicks;\r\n    if (stepSize) {\r\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\r\n      if (maxTicks > 1000) {\r\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\r\n        maxTicks = 1000;\r\n      }\r\n    } else {\r\n      maxTicks = this.computeTickLimit();\r\n      maxTicksLimit = maxTicksLimit || 11;\r\n    }\r\n    if (maxTicksLimit) {\r\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\r\n    }\r\n    return maxTicks;\r\n  }\r\n  computeTickLimit() {\r\n    return Number.POSITIVE_INFINITY;\r\n  }\r\n  buildTicks() {\r\n    const opts = this.options;\r\n    const tickOpts = opts.ticks;\r\n    let maxTicks = this.getTickLimit();\r\n    maxTicks = Math.max(2, maxTicks);\r\n    const numericGeneratorOptions = {\r\n      maxTicks,\r\n      bounds: opts.bounds,\r\n      min: opts.min,\r\n      max: opts.max,\r\n      precision: tickOpts.precision,\r\n      step: tickOpts.stepSize,\r\n      count: tickOpts.count,\r\n      maxDigits: this._maxDigits(),\r\n      horizontal: this.isHorizontal(),\r\n      minRotation: tickOpts.minRotation || 0,\r\n      includeBounds: tickOpts.includeBounds !== false\r\n    };\r\n    const dataRange = this._range || this;\r\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\r\n    if (opts.bounds === 'ticks') {\r\n      _setMinAndMaxByKey(ticks, this, 'value');\r\n    }\r\n    if (opts.reverse) {\r\n      ticks.reverse();\r\n      this.start = this.max;\r\n      this.end = this.min;\r\n    } else {\r\n      this.start = this.min;\r\n      this.end = this.max;\r\n    }\r\n    return ticks;\r\n  }\r\n  configure() {\r\n    const ticks = this.ticks;\r\n    let start = this.min;\r\n    let end = this.max;\r\n    super.configure();\r\n    if (this.options.offset && ticks.length) {\r\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\r\n      start -= offset;\r\n      end += offset;\r\n    }\r\n    this._startValue = start;\r\n    this._endValue = end;\r\n    this._valueRange = end - start;\r\n  }\r\n  getLabelForValue(value) {\r\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\r\n  }\r\n}\r\n\r\nclass LinearScale extends LinearScaleBase {\r\n  determineDataLimits() {\r\n    const {min, max} = this.getMinMax(true);\r\n    this.min = isNumberFinite(min) ? min : 0;\r\n    this.max = isNumberFinite(max) ? max : 1;\r\n    this.handleTickRangeOptions();\r\n  }\r\n  computeTickLimit() {\r\n    const horizontal = this.isHorizontal();\r\n    const length = horizontal ? this.width : this.height;\r\n    const minRotation = toRadians(this.options.ticks.minRotation);\r\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\r\n    const tickFont = this._resolveTickFontOptions(0);\r\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\r\n  }\r\n  getPixelForValue(value) {\r\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\r\n  }\r\n}\r\nLinearScale.id = 'linear';\r\nLinearScale.defaults = {\r\n  ticks: {\r\n    callback: Ticks.formatters.numeric\r\n  }\r\n};\r\n\r\nfunction isMajor(tickVal) {\r\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\r\n  return remain === 1;\r\n}\r\nfunction generateTicks(generationOptions, dataRange) {\r\n  const endExp = Math.floor(log10(dataRange.max));\r\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\r\n  const ticks = [];\r\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\r\n  let exp = Math.floor(log10(tickVal));\r\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\r\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\r\n  do {\r\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\r\n    ++significand;\r\n    if (significand === 10) {\r\n      significand = 1;\r\n      ++exp;\r\n      precision = exp >= 0 ? 1 : precision;\r\n    }\r\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\r\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\r\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\r\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\r\n  return ticks;\r\n}\r\nclass LogarithmicScale extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.start = undefined;\r\n    this.end = undefined;\r\n    this._startValue = undefined;\r\n    this._valueRange = 0;\r\n  }\r\n  parse(raw, index) {\r\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\r\n    if (value === 0) {\r\n      this._zero = true;\r\n      return undefined;\r\n    }\r\n    return isNumberFinite(value) && value > 0 ? value : null;\r\n  }\r\n  determineDataLimits() {\r\n    const {min, max} = this.getMinMax(true);\r\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\r\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\r\n    if (this.options.beginAtZero) {\r\n      this._zero = true;\r\n    }\r\n    this.handleTickRangeOptions();\r\n  }\r\n  handleTickRangeOptions() {\r\n    const {minDefined, maxDefined} = this.getUserBounds();\r\n    let min = this.min;\r\n    let max = this.max;\r\n    const setMin = v => (min = minDefined ? min : v);\r\n    const setMax = v => (max = maxDefined ? max : v);\r\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\r\n    if (min === max) {\r\n      if (min <= 0) {\r\n        setMin(1);\r\n        setMax(10);\r\n      } else {\r\n        setMin(exp(min, -1));\r\n        setMax(exp(max, +1));\r\n      }\r\n    }\r\n    if (min <= 0) {\r\n      setMin(exp(max, -1));\r\n    }\r\n    if (max <= 0) {\r\n      setMax(exp(min, +1));\r\n    }\r\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\r\n      setMin(exp(min, -1));\r\n    }\r\n    this.min = min;\r\n    this.max = max;\r\n  }\r\n  buildTicks() {\r\n    const opts = this.options;\r\n    const generationOptions = {\r\n      min: this._userMin,\r\n      max: this._userMax\r\n    };\r\n    const ticks = generateTicks(generationOptions, this);\r\n    if (opts.bounds === 'ticks') {\r\n      _setMinAndMaxByKey(ticks, this, 'value');\r\n    }\r\n    if (opts.reverse) {\r\n      ticks.reverse();\r\n      this.start = this.max;\r\n      this.end = this.min;\r\n    } else {\r\n      this.start = this.min;\r\n      this.end = this.max;\r\n    }\r\n    return ticks;\r\n  }\r\n  getLabelForValue(value) {\r\n    return value === undefined\r\n      ? '0'\r\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\r\n  }\r\n  configure() {\r\n    const start = this.min;\r\n    super.configure();\r\n    this._startValue = log10(start);\r\n    this._valueRange = log10(this.max) - log10(start);\r\n  }\r\n  getPixelForValue(value) {\r\n    if (value === undefined || value === 0) {\r\n      value = this.min;\r\n    }\r\n    if (value === null || isNaN(value)) {\r\n      return NaN;\r\n    }\r\n    return this.getPixelForDecimal(value === this.min\r\n      ? 0\r\n      : (log10(value) - this._startValue) / this._valueRange);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const decimal = this.getDecimalForPixel(pixel);\r\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\r\n  }\r\n}\r\nLogarithmicScale.id = 'logarithmic';\r\nLogarithmicScale.defaults = {\r\n  ticks: {\r\n    callback: Ticks.formatters.logarithmic,\r\n    major: {\r\n      enabled: true\r\n    }\r\n  }\r\n};\r\n\r\nfunction getTickBackdropHeight(opts) {\r\n  const tickOpts = opts.ticks;\r\n  if (tickOpts.display && opts.display) {\r\n    const padding = toPadding(tickOpts.backdropPadding);\r\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\r\n  }\r\n  return 0;\r\n}\r\nfunction measureLabelSize(ctx, font, label) {\r\n  label = isArray(label) ? label : [label];\r\n  return {\r\n    w: _longestText(ctx, font.string, label),\r\n    h: label.length * font.lineHeight\r\n  };\r\n}\r\nfunction determineLimits(angle, pos, size, min, max) {\r\n  if (angle === min || angle === max) {\r\n    return {\r\n      start: pos - (size / 2),\r\n      end: pos + (size / 2)\r\n    };\r\n  } else if (angle < min || angle > max) {\r\n    return {\r\n      start: pos - size,\r\n      end: pos\r\n    };\r\n  }\r\n  return {\r\n    start: pos,\r\n    end: pos + size\r\n  };\r\n}\r\nfunction fitWithPointLabels(scale) {\r\n  const orig = {\r\n    l: scale.left + scale._padding.left,\r\n    r: scale.right - scale._padding.right,\r\n    t: scale.top + scale._padding.top,\r\n    b: scale.bottom - scale._padding.bottom\r\n  };\r\n  const limits = Object.assign({}, orig);\r\n  const labelSizes = [];\r\n  const padding = [];\r\n  const valueCount = scale._pointLabels.length;\r\n  const pointLabelOpts = scale.options.pointLabels;\r\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\r\n  for (let i = 0; i < valueCount; i++) {\r\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\r\n    padding[i] = opts.padding;\r\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\r\n    const plFont = toFont(opts.font);\r\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\r\n    labelSizes[i] = textSize;\r\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\r\n    const angle = Math.round(toDegrees(angleRadians));\r\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\r\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\r\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\r\n  }\r\n  scale.setCenterPoint(\r\n    orig.l - limits.l,\r\n    limits.r - orig.r,\r\n    orig.t - limits.t,\r\n    limits.b - orig.b\r\n  );\r\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\r\n}\r\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\r\n  const sin = Math.abs(Math.sin(angle));\r\n  const cos = Math.abs(Math.cos(angle));\r\n  let x = 0;\r\n  let y = 0;\r\n  if (hLimits.start < orig.l) {\r\n    x = (orig.l - hLimits.start) / sin;\r\n    limits.l = Math.min(limits.l, orig.l - x);\r\n  } else if (hLimits.end > orig.r) {\r\n    x = (hLimits.end - orig.r) / sin;\r\n    limits.r = Math.max(limits.r, orig.r + x);\r\n  }\r\n  if (vLimits.start < orig.t) {\r\n    y = (orig.t - vLimits.start) / cos;\r\n    limits.t = Math.min(limits.t, orig.t - y);\r\n  } else if (vLimits.end > orig.b) {\r\n    y = (vLimits.end - orig.b) / cos;\r\n    limits.b = Math.max(limits.b, orig.b + y);\r\n  }\r\n}\r\nfunction buildPointLabelItems(scale, labelSizes, padding) {\r\n  const items = [];\r\n  const valueCount = scale._pointLabels.length;\r\n  const opts = scale.options;\r\n  const extra = getTickBackdropHeight(opts) / 2;\r\n  const outerDistance = scale.drawingArea;\r\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\r\n  for (let i = 0; i < valueCount; i++) {\r\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\r\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\r\n    const size = labelSizes[i];\r\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\r\n    const textAlign = getTextAlignForAngle(angle);\r\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\r\n    items.push({\r\n      x: pointLabelPosition.x,\r\n      y,\r\n      textAlign,\r\n      left,\r\n      top: y,\r\n      right: left + size.w,\r\n      bottom: y + size.h\r\n    });\r\n  }\r\n  return items;\r\n}\r\nfunction getTextAlignForAngle(angle) {\r\n  if (angle === 0 || angle === 180) {\r\n    return 'center';\r\n  } else if (angle < 180) {\r\n    return 'left';\r\n  }\r\n  return 'right';\r\n}\r\nfunction leftForTextAlign(x, w, align) {\r\n  if (align === 'right') {\r\n    x -= w;\r\n  } else if (align === 'center') {\r\n    x -= (w / 2);\r\n  }\r\n  return x;\r\n}\r\nfunction yForAngle(y, h, angle) {\r\n  if (angle === 90 || angle === 270) {\r\n    y -= (h / 2);\r\n  } else if (angle > 270 || angle < 90) {\r\n    y -= h;\r\n  }\r\n  return y;\r\n}\r\nfunction drawPointLabels(scale, labelCount) {\r\n  const {ctx, options: {pointLabels}} = scale;\r\n  for (let i = labelCount - 1; i >= 0; i--) {\r\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\r\n    const plFont = toFont(optsAtIndex.font);\r\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\r\n    const {backdropColor} = optsAtIndex;\r\n    if (!isNullOrUndef(backdropColor)) {\r\n      const padding = toPadding(optsAtIndex.backdropPadding);\r\n      ctx.fillStyle = backdropColor;\r\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\r\n    }\r\n    renderText(\r\n      ctx,\r\n      scale._pointLabels[i],\r\n      x,\r\n      y + (plFont.lineHeight / 2),\r\n      plFont,\r\n      {\r\n        color: optsAtIndex.color,\r\n        textAlign: textAlign,\r\n        textBaseline: 'middle'\r\n      }\r\n    );\r\n  }\r\n}\r\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\r\n  const {ctx} = scale;\r\n  if (circular) {\r\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\r\n  } else {\r\n    let pointPosition = scale.getPointPosition(0, radius);\r\n    ctx.moveTo(pointPosition.x, pointPosition.y);\r\n    for (let i = 1; i < labelCount; i++) {\r\n      pointPosition = scale.getPointPosition(i, radius);\r\n      ctx.lineTo(pointPosition.x, pointPosition.y);\r\n    }\r\n  }\r\n}\r\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\r\n  const ctx = scale.ctx;\r\n  const circular = gridLineOpts.circular;\r\n  const {color, lineWidth} = gridLineOpts;\r\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\r\n    return;\r\n  }\r\n  ctx.save();\r\n  ctx.strokeStyle = color;\r\n  ctx.lineWidth = lineWidth;\r\n  ctx.setLineDash(gridLineOpts.borderDash);\r\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\r\n  ctx.beginPath();\r\n  pathRadiusLine(scale, radius, circular, labelCount);\r\n  ctx.closePath();\r\n  ctx.stroke();\r\n  ctx.restore();\r\n}\r\nfunction createPointLabelContext(parent, index, label) {\r\n  return createContext(parent, {\r\n    label,\r\n    index,\r\n    type: 'pointLabel'\r\n  });\r\n}\r\nclass RadialLinearScale extends LinearScaleBase {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.xCenter = undefined;\r\n    this.yCenter = undefined;\r\n    this.drawingArea = undefined;\r\n    this._pointLabels = [];\r\n    this._pointLabelItems = [];\r\n  }\r\n  setDimensions() {\r\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\r\n    const w = this.width = this.maxWidth - padding.width;\r\n    const h = this.height = this.maxHeight - padding.height;\r\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\r\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\r\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\r\n  }\r\n  determineDataLimits() {\r\n    const {min, max} = this.getMinMax(false);\r\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\r\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\r\n    this.handleTickRangeOptions();\r\n  }\r\n  computeTickLimit() {\r\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\r\n  }\r\n  generateTickLabels(ticks) {\r\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\r\n    this._pointLabels = this.getLabels()\r\n      .map((value, index) => {\r\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\r\n        return label || label === 0 ? label : '';\r\n      })\r\n      .filter((v, i) => this.chart.getDataVisibility(i));\r\n  }\r\n  fit() {\r\n    const opts = this.options;\r\n    if (opts.display && opts.pointLabels.display) {\r\n      fitWithPointLabels(this);\r\n    } else {\r\n      this.setCenterPoint(0, 0, 0, 0);\r\n    }\r\n  }\r\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\r\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\r\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\r\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\r\n  }\r\n  getIndexAngle(index) {\r\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\r\n    const startAngle = this.options.startAngle || 0;\r\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\r\n  }\r\n  getDistanceFromCenterForValue(value) {\r\n    if (isNullOrUndef(value)) {\r\n      return NaN;\r\n    }\r\n    const scalingFactor = this.drawingArea / (this.max - this.min);\r\n    if (this.options.reverse) {\r\n      return (this.max - value) * scalingFactor;\r\n    }\r\n    return (value - this.min) * scalingFactor;\r\n  }\r\n  getValueForDistanceFromCenter(distance) {\r\n    if (isNullOrUndef(distance)) {\r\n      return NaN;\r\n    }\r\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\r\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\r\n  }\r\n  getPointLabelContext(index) {\r\n    const pointLabels = this._pointLabels || [];\r\n    if (index >= 0 && index < pointLabels.length) {\r\n      const pointLabel = pointLabels[index];\r\n      return createPointLabelContext(this.getContext(), index, pointLabel);\r\n    }\r\n  }\r\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\r\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\r\n    return {\r\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\r\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\r\n      angle\r\n    };\r\n  }\r\n  getPointPositionForValue(index, value) {\r\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\r\n  }\r\n  getBasePosition(index) {\r\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\r\n  }\r\n  getPointLabelPosition(index) {\r\n    const {left, top, right, bottom} = this._pointLabelItems[index];\r\n    return {\r\n      left,\r\n      top,\r\n      right,\r\n      bottom,\r\n    };\r\n  }\r\n  drawBackground() {\r\n    const {backgroundColor, grid: {circular}} = this.options;\r\n    if (backgroundColor) {\r\n      const ctx = this.ctx;\r\n      ctx.save();\r\n      ctx.beginPath();\r\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\r\n      ctx.closePath();\r\n      ctx.fillStyle = backgroundColor;\r\n      ctx.fill();\r\n      ctx.restore();\r\n    }\r\n  }\r\n  drawGrid() {\r\n    const ctx = this.ctx;\r\n    const opts = this.options;\r\n    const {angleLines, grid} = opts;\r\n    const labelCount = this._pointLabels.length;\r\n    let i, offset, position;\r\n    if (opts.pointLabels.display) {\r\n      drawPointLabels(this, labelCount);\r\n    }\r\n    if (grid.display) {\r\n      this.ticks.forEach((tick, index) => {\r\n        if (index !== 0) {\r\n          offset = this.getDistanceFromCenterForValue(tick.value);\r\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\r\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\r\n        }\r\n      });\r\n    }\r\n    if (angleLines.display) {\r\n      ctx.save();\r\n      for (i = labelCount - 1; i >= 0; i--) {\r\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\r\n        const {color, lineWidth} = optsAtIndex;\r\n        if (!lineWidth || !color) {\r\n          continue;\r\n        }\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.strokeStyle = color;\r\n        ctx.setLineDash(optsAtIndex.borderDash);\r\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\r\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\r\n        position = this.getPointPosition(i, offset);\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.xCenter, this.yCenter);\r\n        ctx.lineTo(position.x, position.y);\r\n        ctx.stroke();\r\n      }\r\n      ctx.restore();\r\n    }\r\n  }\r\n  drawBorder() {}\r\n  drawLabels() {\r\n    const ctx = this.ctx;\r\n    const opts = this.options;\r\n    const tickOpts = opts.ticks;\r\n    if (!tickOpts.display) {\r\n      return;\r\n    }\r\n    const startAngle = this.getIndexAngle(0);\r\n    let offset, width;\r\n    ctx.save();\r\n    ctx.translate(this.xCenter, this.yCenter);\r\n    ctx.rotate(startAngle);\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n    this.ticks.forEach((tick, index) => {\r\n      if (index === 0 && !opts.reverse) {\r\n        return;\r\n      }\r\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\r\n      const tickFont = toFont(optsAtIndex.font);\r\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\r\n      if (optsAtIndex.showLabelBackdrop) {\r\n        ctx.font = tickFont.string;\r\n        width = ctx.measureText(tick.label).width;\r\n        ctx.fillStyle = optsAtIndex.backdropColor;\r\n        const padding = toPadding(optsAtIndex.backdropPadding);\r\n        ctx.fillRect(\r\n          -width / 2 - padding.left,\r\n          -offset - tickFont.size / 2 - padding.top,\r\n          width + padding.width,\r\n          tickFont.size + padding.height\r\n        );\r\n      }\r\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\r\n        color: optsAtIndex.color,\r\n      });\r\n    });\r\n    ctx.restore();\r\n  }\r\n  drawTitle() {}\r\n}\r\nRadialLinearScale.id = 'radialLinear';\r\nRadialLinearScale.defaults = {\r\n  display: true,\r\n  animate: true,\r\n  position: 'chartArea',\r\n  angleLines: {\r\n    display: true,\r\n    lineWidth: 1,\r\n    borderDash: [],\r\n    borderDashOffset: 0.0\r\n  },\r\n  grid: {\r\n    circular: false\r\n  },\r\n  startAngle: 0,\r\n  ticks: {\r\n    showLabelBackdrop: true,\r\n    callback: Ticks.formatters.numeric\r\n  },\r\n  pointLabels: {\r\n    backdropColor: undefined,\r\n    backdropPadding: 2,\r\n    display: true,\r\n    font: {\r\n      size: 10\r\n    },\r\n    callback(label) {\r\n      return label;\r\n    },\r\n    padding: 5,\r\n    centerPointLabels: false\r\n  }\r\n};\r\nRadialLinearScale.defaultRoutes = {\r\n  'angleLines.color': 'borderColor',\r\n  'pointLabels.color': 'color',\r\n  'ticks.color': 'color'\r\n};\r\nRadialLinearScale.descriptors = {\r\n  angleLines: {\r\n    _fallback: 'grid'\r\n  }\r\n};\r\n\r\nconst INTERVALS = {\r\n  millisecond: {common: true, size: 1, steps: 1000},\r\n  second: {common: true, size: 1000, steps: 60},\r\n  minute: {common: true, size: 60000, steps: 60},\r\n  hour: {common: true, size: 3600000, steps: 24},\r\n  day: {common: true, size: 86400000, steps: 30},\r\n  week: {common: false, size: 604800000, steps: 4},\r\n  month: {common: true, size: 2.628e9, steps: 12},\r\n  quarter: {common: false, size: 7.884e9, steps: 4},\r\n  year: {common: true, size: 3.154e10}\r\n};\r\nconst UNITS = (Object.keys(INTERVALS));\r\nfunction sorter(a, b) {\r\n  return a - b;\r\n}\r\nfunction parse(scale, input) {\r\n  if (isNullOrUndef(input)) {\r\n    return null;\r\n  }\r\n  const adapter = scale._adapter;\r\n  const {parser, round, isoWeekday} = scale._parseOpts;\r\n  let value = input;\r\n  if (typeof parser === 'function') {\r\n    value = parser(value);\r\n  }\r\n  if (!isNumberFinite(value)) {\r\n    value = typeof parser === 'string'\r\n      ? adapter.parse(value, parser)\r\n      : adapter.parse(value);\r\n  }\r\n  if (value === null) {\r\n    return null;\r\n  }\r\n  if (round) {\r\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\r\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\r\n      : adapter.startOf(value, round);\r\n  }\r\n  return +value;\r\n}\r\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\r\n  const ilen = UNITS.length;\r\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\r\n    const interval = INTERVALS[UNITS[i]];\r\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\r\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\r\n      return UNITS[i];\r\n    }\r\n  }\r\n  return UNITS[ilen - 1];\r\n}\r\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\r\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\r\n    const unit = UNITS[i];\r\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\r\n      return unit;\r\n    }\r\n  }\r\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\r\n}\r\nfunction determineMajorUnit(unit) {\r\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\r\n    if (INTERVALS[UNITS[i]].common) {\r\n      return UNITS[i];\r\n    }\r\n  }\r\n}\r\nfunction addTick(ticks, time, timestamps) {\r\n  if (!timestamps) {\r\n    ticks[time] = true;\r\n  } else if (timestamps.length) {\r\n    const {lo, hi} = _lookup(timestamps, time);\r\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\r\n    ticks[timestamp] = true;\r\n  }\r\n}\r\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\r\n  const adapter = scale._adapter;\r\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\r\n  const last = ticks[ticks.length - 1].value;\r\n  let major, index;\r\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\r\n    index = map[major];\r\n    if (index >= 0) {\r\n      ticks[index].major = true;\r\n    }\r\n  }\r\n  return ticks;\r\n}\r\nfunction ticksFromTimestamps(scale, values, majorUnit) {\r\n  const ticks = [];\r\n  const map = {};\r\n  const ilen = values.length;\r\n  let i, value;\r\n  for (i = 0; i < ilen; ++i) {\r\n    value = values[i];\r\n    map[value] = i;\r\n    ticks.push({\r\n      value,\r\n      major: false\r\n    });\r\n  }\r\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\r\n}\r\nclass TimeScale extends Scale {\r\n  constructor(props) {\r\n    super(props);\r\n    this._cache = {\r\n      data: [],\r\n      labels: [],\r\n      all: []\r\n    };\r\n    this._unit = 'day';\r\n    this._majorUnit = undefined;\r\n    this._offsets = {};\r\n    this._normalized = false;\r\n    this._parseOpts = undefined;\r\n  }\r\n  init(scaleOpts, opts) {\r\n    const time = scaleOpts.time || (scaleOpts.time = {});\r\n    const adapter = this._adapter = new _adapters._date(scaleOpts.adapters.date);\r\n    mergeIf(time.displayFormats, adapter.formats());\r\n    this._parseOpts = {\r\n      parser: time.parser,\r\n      round: time.round,\r\n      isoWeekday: time.isoWeekday\r\n    };\r\n    super.init(scaleOpts);\r\n    this._normalized = opts.normalized;\r\n  }\r\n  parse(raw, index) {\r\n    if (raw === undefined) {\r\n      return null;\r\n    }\r\n    return parse(this, raw);\r\n  }\r\n  beforeLayout() {\r\n    super.beforeLayout();\r\n    this._cache = {\r\n      data: [],\r\n      labels: [],\r\n      all: []\r\n    };\r\n  }\r\n  determineDataLimits() {\r\n    const options = this.options;\r\n    const adapter = this._adapter;\r\n    const unit = options.time.unit || 'day';\r\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\r\n    function _applyBounds(bounds) {\r\n      if (!minDefined && !isNaN(bounds.min)) {\r\n        min = Math.min(min, bounds.min);\r\n      }\r\n      if (!maxDefined && !isNaN(bounds.max)) {\r\n        max = Math.max(max, bounds.max);\r\n      }\r\n    }\r\n    if (!minDefined || !maxDefined) {\r\n      _applyBounds(this._getLabelBounds());\r\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\r\n        _applyBounds(this.getMinMax(false));\r\n      }\r\n    }\r\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\r\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\r\n    this.min = Math.min(min, max - 1);\r\n    this.max = Math.max(min + 1, max);\r\n  }\r\n  _getLabelBounds() {\r\n    const arr = this.getLabelTimestamps();\r\n    let min = Number.POSITIVE_INFINITY;\r\n    let max = Number.NEGATIVE_INFINITY;\r\n    if (arr.length) {\r\n      min = arr[0];\r\n      max = arr[arr.length - 1];\r\n    }\r\n    return {min, max};\r\n  }\r\n  buildTicks() {\r\n    const options = this.options;\r\n    const timeOpts = options.time;\r\n    const tickOpts = options.ticks;\r\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\r\n    if (options.bounds === 'ticks' && timestamps.length) {\r\n      this.min = this._userMin || timestamps[0];\r\n      this.max = this._userMax || timestamps[timestamps.length - 1];\r\n    }\r\n    const min = this.min;\r\n    const max = this.max;\r\n    const ticks = _filterBetween(timestamps, min, max);\r\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\r\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\r\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\r\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\r\n      : determineMajorUnit(this._unit);\r\n    this.initOffsets(timestamps);\r\n    if (options.reverse) {\r\n      ticks.reverse();\r\n    }\r\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\r\n  }\r\n  initOffsets(timestamps) {\r\n    let start = 0;\r\n    let end = 0;\r\n    let first, last;\r\n    if (this.options.offset && timestamps.length) {\r\n      first = this.getDecimalForValue(timestamps[0]);\r\n      if (timestamps.length === 1) {\r\n        start = 1 - first;\r\n      } else {\r\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\r\n      }\r\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\r\n      if (timestamps.length === 1) {\r\n        end = last;\r\n      } else {\r\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\r\n      }\r\n    }\r\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\r\n    start = _limitValue(start, 0, limit);\r\n    end = _limitValue(end, 0, limit);\r\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\r\n  }\r\n  _generate() {\r\n    const adapter = this._adapter;\r\n    const min = this.min;\r\n    const max = this.max;\r\n    const options = this.options;\r\n    const timeOpts = options.time;\r\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\r\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\r\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\r\n    const hasWeekday = isNumber(weekday) || weekday === true;\r\n    const ticks = {};\r\n    let first = min;\r\n    let time, count;\r\n    if (hasWeekday) {\r\n      first = +adapter.startOf(first, 'isoWeek', weekday);\r\n    }\r\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\r\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\r\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\r\n    }\r\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\r\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\r\n      addTick(ticks, time, timestamps);\r\n    }\r\n    if (time === max || options.bounds === 'ticks' || count === 1) {\r\n      addTick(ticks, time, timestamps);\r\n    }\r\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\r\n  }\r\n  getLabelForValue(value) {\r\n    const adapter = this._adapter;\r\n    const timeOpts = this.options.time;\r\n    if (timeOpts.tooltipFormat) {\r\n      return adapter.format(value, timeOpts.tooltipFormat);\r\n    }\r\n    return adapter.format(value, timeOpts.displayFormats.datetime);\r\n  }\r\n  _tickFormatFunction(time, index, ticks, format) {\r\n    const options = this.options;\r\n    const formats = options.time.displayFormats;\r\n    const unit = this._unit;\r\n    const majorUnit = this._majorUnit;\r\n    const minorFormat = unit && formats[unit];\r\n    const majorFormat = majorUnit && formats[majorUnit];\r\n    const tick = ticks[index];\r\n    const major = majorUnit && majorFormat && tick && tick.major;\r\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\r\n    const formatter = options.ticks.callback;\r\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\r\n  }\r\n  generateTickLabels(ticks) {\r\n    let i, ilen, tick;\r\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n      tick = ticks[i];\r\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\r\n    }\r\n  }\r\n  getDecimalForValue(value) {\r\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\r\n  }\r\n  getPixelForValue(value) {\r\n    const offsets = this._offsets;\r\n    const pos = this.getDecimalForValue(value);\r\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const offsets = this._offsets;\r\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\r\n    return this.min + pos * (this.max - this.min);\r\n  }\r\n  _getLabelSize(label) {\r\n    const ticksOpts = this.options.ticks;\r\n    const tickLabelWidth = this.ctx.measureText(label).width;\r\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\r\n    const cosRotation = Math.cos(angle);\r\n    const sinRotation = Math.sin(angle);\r\n    const tickFontSize = this._resolveTickFontOptions(0).size;\r\n    return {\r\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\r\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\r\n    };\r\n  }\r\n  _getLabelCapacity(exampleTime) {\r\n    const timeOpts = this.options.time;\r\n    const displayFormats = timeOpts.displayFormats;\r\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\r\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\r\n    const size = this._getLabelSize(exampleLabel);\r\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\r\n    return capacity > 0 ? capacity : 1;\r\n  }\r\n  getDataTimestamps() {\r\n    let timestamps = this._cache.data || [];\r\n    let i, ilen;\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const metas = this.getMatchingVisibleMetas();\r\n    if (this._normalized && metas.length) {\r\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\r\n    }\r\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\r\n    }\r\n    return (this._cache.data = this.normalize(timestamps));\r\n  }\r\n  getLabelTimestamps() {\r\n    const timestamps = this._cache.labels || [];\r\n    let i, ilen;\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const labels = this.getLabels();\r\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\r\n      timestamps.push(parse(this, labels[i]));\r\n    }\r\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\r\n  }\r\n  normalize(values) {\r\n    return _arrayUnique(values.sort(sorter));\r\n  }\r\n}\r\nTimeScale.id = 'time';\r\nTimeScale.defaults = {\r\n  bounds: 'data',\r\n  adapters: {},\r\n  time: {\r\n    parser: false,\r\n    unit: false,\r\n    round: false,\r\n    isoWeekday: false,\r\n    minUnit: 'millisecond',\r\n    displayFormats: {}\r\n  },\r\n  ticks: {\r\n    source: 'auto',\r\n    major: {\r\n      enabled: false\r\n    }\r\n  }\r\n};\r\n\r\nfunction interpolate(table, val, reverse) {\r\n  let lo = 0;\r\n  let hi = table.length - 1;\r\n  let prevSource, nextSource, prevTarget, nextTarget;\r\n  if (reverse) {\r\n    if (val >= table[lo].pos && val <= table[hi].pos) {\r\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\r\n    }\r\n    ({pos: prevSource, time: prevTarget} = table[lo]);\r\n    ({pos: nextSource, time: nextTarget} = table[hi]);\r\n  } else {\r\n    if (val >= table[lo].time && val <= table[hi].time) {\r\n      ({lo, hi} = _lookupByKey(table, 'time', val));\r\n    }\r\n    ({time: prevSource, pos: prevTarget} = table[lo]);\r\n    ({time: nextSource, pos: nextTarget} = table[hi]);\r\n  }\r\n  const span = nextSource - prevSource;\r\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\r\n}\r\nclass TimeSeriesScale extends TimeScale {\r\n  constructor(props) {\r\n    super(props);\r\n    this._table = [];\r\n    this._minPos = undefined;\r\n    this._tableRange = undefined;\r\n  }\r\n  initOffsets() {\r\n    const timestamps = this._getTimestampsForTable();\r\n    const table = this._table = this.buildLookupTable(timestamps);\r\n    this._minPos = interpolate(table, this.min);\r\n    this._tableRange = interpolate(table, this.max) - this._minPos;\r\n    super.initOffsets(timestamps);\r\n  }\r\n  buildLookupTable(timestamps) {\r\n    const {min, max} = this;\r\n    const items = [];\r\n    const table = [];\r\n    let i, ilen, prev, curr, next;\r\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\r\n      curr = timestamps[i];\r\n      if (curr >= min && curr <= max) {\r\n        items.push(curr);\r\n      }\r\n    }\r\n    if (items.length < 2) {\r\n      return [\r\n        {time: min, pos: 0},\r\n        {time: max, pos: 1}\r\n      ];\r\n    }\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      next = items[i + 1];\r\n      prev = items[i - 1];\r\n      curr = items[i];\r\n      if (Math.round((next + prev) / 2) !== curr) {\r\n        table.push({time: curr, pos: i / (ilen - 1)});\r\n      }\r\n    }\r\n    return table;\r\n  }\r\n  _getTimestampsForTable() {\r\n    let timestamps = this._cache.all || [];\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const data = this.getDataTimestamps();\r\n    const label = this.getLabelTimestamps();\r\n    if (data.length && label.length) {\r\n      timestamps = this.normalize(data.concat(label));\r\n    } else {\r\n      timestamps = data.length ? data : label;\r\n    }\r\n    timestamps = this._cache.all = timestamps;\r\n    return timestamps;\r\n  }\r\n  getDecimalForValue(value) {\r\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const offsets = this._offsets;\r\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\r\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\r\n  }\r\n}\r\nTimeSeriesScale.id = 'timeseries';\r\nTimeSeriesScale.defaults = TimeScale.defaults;\r\n\r\nvar scales = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nCategoryScale: CategoryScale,\r\nLinearScale: LinearScale,\r\nLogarithmicScale: LogarithmicScale,\r\nRadialLinearScale: RadialLinearScale,\r\nTimeScale: TimeScale,\r\nTimeSeriesScale: TimeSeriesScale\r\n});\r\n\r\nChart.register(controllers, scales, elements, plugins);\r\nChart.helpers = {...helpers};\r\nChart._adapters = _adapters;\r\nChart.Animation = Animation;\r\nChart.Animations = Animations;\r\nChart.animator = animator;\r\nChart.controllers = registry.controllers.items;\r\nChart.DatasetController = DatasetController;\r\nChart.Element = Element;\r\nChart.elements = elements;\r\nChart.Interaction = Interaction;\r\nChart.layouts = layouts;\r\nChart.platforms = platforms;\r\nChart.Scale = Scale;\r\nChart.Ticks = Ticks;\r\nObject.assign(Chart, controllers, scales, elements, plugins, platforms);\r\nChart.Chart = Chart;\r\nif (typeof window !== 'undefined') {\r\n  window.Chart = Chart;\r\n}\r\n\r\nreturn Chart;\r\n\r\n}));\r\n/*! Select2 4.1.0-rc.0 | https://github.com/select2/select2/blob/master/LICENSE.md */\r\n!function(n){\"function\"==typeof define&&define.amd?define([\"jquery\"],n):\"object\"==typeof module&&module.exports?module.exports=function(e,t){return void 0===t&&(t=\"undefined\"!=typeof window?require(\"jquery\"):require(\"jquery\")(e)),n(t),t}:n(jQuery)}(function(t){var e,n,s,p,r,o,h,f,g,m,y,v,i,a,_,s=((u=t&&t.fn&&t.fn.select2&&t.fn.select2.amd?t.fn.select2.amd:u)&&u.requirejs||(u?n=u:u={},g={},m={},y={},v={},i=Object.prototype.hasOwnProperty,a=[].slice,_=/\\.js$/,h=function(e,t){var n,s,i=c(e),r=i[0],t=t[1];return e=i[1],r&&(n=x(r=l(r,t))),r?e=n&&n.normalize?n.normalize(e,(s=t,function(e){return l(e,s)})):l(e,t):(r=(i=c(e=l(e,t)))[0],e=i[1],r&&(n=x(r))),{f:r?r+\"!\"+e:e,n:e,pr:r,p:n}},f={require:function(e){return w(e)},exports:function(e){var t=g[e];return void 0!==t?t:g[e]={}},module:function(e){return{id:e,uri:\"\",exports:g[e],config:(t=e,function(){return y&&y.config&&y.config[t]||{}})};var t}},r=function(e,t,n,s){var i,r,o,a,l,c=[],u=typeof n,d=A(s=s||e);if(\"undefined\"==u||\"function\"==u){for(t=!t.length&&n.length?[\"require\",\"exports\",\"module\"]:t,a=0;a<t.length;a+=1)if(\"require\"===(r=(o=h(t[a],d)).f))c[a]=f.require(e);else if(\"exports\"===r)c[a]=f.exports(e),l=!0;else if(\"module\"===r)i=c[a]=f.module(e);else if(b(g,r)||b(m,r)||b(v,r))c[a]=x(r);else{if(!o.p)throw new Error(e+\" missing \"+r);o.p.load(o.n,w(s,!0),function(t){return function(e){g[t]=e}}(r),{}),c[a]=g[r]}u=n?n.apply(g[e],c):void 0,e&&(i&&i.exports!==p&&i.exports!==g[e]?g[e]=i.exports:u===p&&l||(g[e]=u))}else e&&(g[e]=n)},e=n=o=function(e,t,n,s,i){if(\"string\"==typeof e)return f[e]?f[e](t):x(h(e,A(t)).f);if(!e.splice){if((y=e).deps&&o(y.deps,y.callback),!t)return;t.splice?(e=t,t=n,n=null):e=p}return t=t||function(){},\"function\"==typeof n&&(n=s,s=i),s?r(p,e,t,n):setTimeout(function(){r(p,e,t,n)},4),o},o.config=function(e){return o(e)},e._defined=g,(s=function(e,t,n){if(\"string\"!=typeof e)throw new Error(\"See almond README: incorrect module build, no module name\");t.splice||(n=t,t=[]),b(g,e)||b(m,e)||(m[e]=[e,t,n])}).amd={jQuery:!0},u.requirejs=e,u.require=n,u.define=s),u.define(\"almond\",function(){}),u.define(\"jquery\",[],function(){var e=t||$;return null==e&&console&&console.error&&console.error(\"Select2: An instance of jQuery or a jQuery-compatible library was not found. Make sure that you are including jQuery before Select2 on your web page.\"),e}),u.define(\"select2/utils\",[\"jquery\"],function(r){var s={};function c(e){var t,n=e.prototype,s=[];for(t in n)\"function\"==typeof n[t]&&\"constructor\"!==t&&s.push(t);return s}s.Extend=function(e,t){var n,s={}.hasOwnProperty;function i(){this.constructor=e}for(n in t)s.call(t,n)&&(e[n]=t[n]);return i.prototype=t.prototype,e.prototype=new i,e.__super__=t.prototype,e},s.Decorate=function(s,i){var e=c(i),t=c(s);function r(){var e=Array.prototype.unshift,t=i.prototype.constructor.length,n=s.prototype.constructor;0<t&&(e.call(arguments,s.prototype.constructor),n=i.prototype.constructor),n.apply(this,arguments)}i.displayName=s.displayName,r.prototype=new function(){this.constructor=r};for(var n=0;n<t.length;n++){var o=t[n];r.prototype[o]=s.prototype[o]}for(var a=0;a<e.length;a++){var l=e[a];r.prototype[l]=function(e){var t=function(){};e in r.prototype&&(t=r.prototype[e]);var n=i.prototype[e];return function(){return Array.prototype.unshift.call(arguments,t),n.apply(this,arguments)}}(l)}return r};function e(){this.listeners={}}e.prototype.on=function(e,t){this.listeners=this.listeners||{},e in this.listeners?this.listeners[e].push(t):this.listeners[e]=[t]},e.prototype.trigger=function(e){var t=Array.prototype.slice,n=t.call(arguments,1);this.listeners=this.listeners||{},0===(n=null==n?[]:n).length&&n.push({}),(n[0]._type=e)in this.listeners&&this.invoke(this.listeners[e],t.call(arguments,1)),\"*\"in this.listeners&&this.invoke(this.listeners[\"*\"],arguments)},e.prototype.invoke=function(e,t){for(var n=0,s=e.length;n<s;n++)e[n].apply(this,t)},s.Observable=e,s.generateChars=function(e){for(var t=\"\",n=0;n<e;n++)t+=Math.floor(36*Math.random()).toString(36);return t},s.bind=function(e,t){return function(){e.apply(t,arguments)}},s._convertData=function(e){for(var t in e){var n=t.split(\"-\"),s=e;if(1!==n.length){for(var i=0;i<n.length;i++){var r=n[i];(r=r.substring(0,1).toLowerCase()+r.substring(1))in s||(s[r]={}),i==n.length-1&&(s[r]=e[t]),s=s[r]}delete e[t]}}return e},s.hasScroll=function(e,t){var n=r(t),s=t.style.overflowX,i=t.style.overflowY;return(s!==i||\"hidden\"!==i&&\"visible\"!==i)&&(\"scroll\"===s||\"scroll\"===i||(n.innerHeight()<t.scrollHeight||n.innerWidth()<t.scrollWidth))},s.escapeMarkup=function(e){var t={\"\\\\\":\"&#92;\",\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#39;\",\"/\":\"&#47;\"};return\"string\"!=typeof e?e:String(e).replace(/[&<>\"'\\/\\\\]/g,function(e){return t[e]})},s.__cache={};var n=0;return s.GetUniqueElementId=function(e){var t=e.getAttribute(\"data-select2-id\");return null!=t||(t=e.id?\"select2-data-\"+e.id:\"select2-data-\"+(++n).toString()+\"-\"+s.generateChars(4),e.setAttribute(\"data-select2-id\",t)),t},s.StoreData=function(e,t,n){e=s.GetUniqueElementId(e);s.__cache[e]||(s.__cache[e]={}),s.__cache[e][t]=n},s.GetData=function(e,t){var n=s.GetUniqueElementId(e);return t?s.__cache[n]&&null!=s.__cache[n][t]?s.__cache[n][t]:r(e).data(t):s.__cache[n]},s.RemoveData=function(e){var t=s.GetUniqueElementId(e);null!=s.__cache[t]&&delete s.__cache[t],e.removeAttribute(\"data-select2-id\")},s.copyNonInternalCssClasses=function(e,t){var n=(n=e.getAttribute(\"class\").trim().split(/\\s+/)).filter(function(e){return 0===e.indexOf(\"select2-\")}),t=(t=t.getAttribute(\"class\").trim().split(/\\s+/)).filter(function(e){return 0!==e.indexOf(\"select2-\")}),t=n.concat(t);e.setAttribute(\"class\",t.join(\" \"))},s}),u.define(\"select2/results\",[\"jquery\",\"./utils\"],function(d,p){function s(e,t,n){this.$element=e,this.data=n,this.options=t,s.__super__.constructor.call(this)}return p.Extend(s,p.Observable),s.prototype.render=function(){var e=d('<ul class=\"select2-results__options\" role=\"listbox\"></ul>');return this.options.get(\"multiple\")&&e.attr(\"aria-multiselectable\",\"true\"),this.$results=e},s.prototype.clear=function(){this.$results.empty()},s.prototype.displayMessage=function(e){var t=this.options.get(\"escapeMarkup\");this.clear(),this.hideLoading();var n=d('<li role=\"alert\" aria-live=\"assertive\" class=\"select2-results__option\"></li>'),s=this.options.get(\"translations\").get(e.message);n.append(t(s(e.args))),n[0].className+=\" select2-results__message\",this.$results.append(n)},s.prototype.hideMessages=function(){this.$results.find(\".select2-results__message\").remove()},s.prototype.append=function(e){this.hideLoading();var t=[];if(null!=e.results&&0!==e.results.length){e.results=this.sort(e.results);for(var n=0;n<e.results.length;n++){var s=e.results[n],s=this.option(s);t.push(s)}this.$results.append(t)}else 0===this.$results.children().length&&this.trigger(\"results:message\",{message:\"noResults\"})},s.prototype.position=function(e,t){t.find(\".select2-results\").append(e)},s.prototype.sort=function(e){return this.options.get(\"sorter\")(e)},s.prototype.highlightFirstItem=function(){var e=this.$results.find(\".select2-results__option--selectable\"),t=e.filter(\".select2-results__option--selected\");(0<t.length?t:e).first().trigger(\"mouseenter\"),this.ensureHighlightVisible()},s.prototype.setClasses=function(){var t=this;this.data.current(function(e){var s=e.map(function(e){return e.id.toString()});t.$results.find(\".select2-results__option--selectable\").each(function(){var e=d(this),t=p.GetData(this,\"data\"),n=\"\"+t.id;null!=t.element&&t.element.selected||null==t.element&&-1<s.indexOf(n)?(this.classList.add(\"select2-results__option--selected\"),e.attr(\"aria-selected\",\"true\")):(this.classList.remove(\"select2-results__option--selected\"),e.attr(\"aria-selected\",\"false\"))})})},s.prototype.showLoading=function(e){this.hideLoading();e={disabled:!0,loading:!0,text:this.options.get(\"translations\").get(\"searching\")(e)},e=this.option(e);e.className+=\" loading-results\",this.$results.prepend(e)},s.prototype.hideLoading=function(){this.$results.find(\".loading-results\").remove()},s.prototype.option=function(e){var t=document.createElement(\"li\");t.classList.add(\"select2-results__option\"),t.classList.add(\"select2-results__option--selectable\");var n,s={role:\"option\"},i=window.Element.prototype.matches||window.Element.prototype.msMatchesSelector||window.Element.prototype.webkitMatchesSelector;for(n in(null!=e.element&&i.call(e.element,\":disabled\")||null==e.element&&e.disabled)&&(s[\"aria-disabled\"]=\"true\",t.classList.remove(\"select2-results__option--selectable\"),t.classList.add(\"select2-results__option--disabled\")),null==e.id&&t.classList.remove(\"select2-results__option--selectable\"),null!=e._resultId&&(t.id=e._resultId),e.title&&(t.title=e.title),e.children&&(s.role=\"group\",s[\"aria-label\"]=e.text,t.classList.remove(\"select2-results__option--selectable\"),t.classList.add(\"select2-results__option--group\")),s){var r=s[n];t.setAttribute(n,r)}if(e.children){var o=d(t),a=document.createElement(\"strong\");a.className=\"select2-results__group\",this.template(e,a);for(var l=[],c=0;c<e.children.length;c++){var u=e.children[c],u=this.option(u);l.push(u)}i=d(\"<ul></ul>\",{class:\"select2-results__options select2-results__options--nested\",role:\"none\"});i.append(l),o.append(a),o.append(i)}else this.template(e,t);return p.StoreData(t,\"data\",e),t},s.prototype.bind=function(t,e){var i=this,n=t.id+\"-results\";this.$results.attr(\"id\",n),t.on(\"results:all\",function(e){i.clear(),i.append(e.data),t.isOpen()&&(i.setClasses(),i.highlightFirstItem())}),t.on(\"results:append\",function(e){i.append(e.data),t.isOpen()&&i.setClasses()}),t.on(\"query\",function(e){i.hideMessages(),i.showLoading(e)}),t.on(\"select\",function(){t.isOpen()&&(i.setClasses(),i.options.get(\"scrollAfterSelect\")&&i.highlightFirstItem())}),t.on(\"unselect\",function(){t.isOpen()&&(i.setClasses(),i.options.get(\"scrollAfterSelect\")&&i.highlightFirstItem())}),t.on(\"open\",function(){i.$results.attr(\"aria-expanded\",\"true\"),i.$results.attr(\"aria-hidden\",\"false\"),i.setClasses(),i.ensureHighlightVisible()}),t.on(\"close\",function(){i.$results.attr(\"aria-expanded\",\"false\"),i.$results.attr(\"aria-hidden\",\"true\"),i.$results.removeAttr(\"aria-activedescendant\")}),t.on(\"results:toggle\",function(){var e=i.getHighlightedResults();0!==e.length&&e.trigger(\"mouseup\")}),t.on(\"results:select\",function(){var e,t=i.getHighlightedResults();0!==t.length&&(e=p.GetData(t[0],\"data\"),t.hasClass(\"select2-results__option--selected\")?i.trigger(\"close\",{}):i.trigger(\"select\",{data:e}))}),t.on(\"results:previous\",function(){var e,t=i.getHighlightedResults(),n=i.$results.find(\".select2-results__option--selectable\"),s=n.index(t);s<=0||(e=s-1,0===t.length&&(e=0),(s=n.eq(e)).trigger(\"mouseenter\"),t=i.$results.offset().top,n=s.offset().top,s=i.$results.scrollTop()+(n-t),0===e?i.$results.scrollTop(0):n-t<0&&i.$results.scrollTop(s))}),t.on(\"results:next\",function(){var e,t=i.getHighlightedResults(),n=i.$results.find(\".select2-results__option--selectable\"),s=n.index(t)+1;s>=n.length||((e=n.eq(s)).trigger(\"mouseenter\"),t=i.$results.offset().top+i.$results.outerHeight(!1),n=e.offset().top+e.outerHeight(!1),e=i.$results.scrollTop()+n-t,0===s?i.$results.scrollTop(0):t<n&&i.$results.scrollTop(e))}),t.on(\"results:focus\",function(e){e.element[0].classList.add(\"select2-results__option--highlighted\"),e.element[0].setAttribute(\"aria-selected\",\"true\")}),t.on(\"results:message\",function(e){i.displayMessage(e)}),d.fn.mousewheel&&this.$results.on(\"mousewheel\",function(e){var t=i.$results.scrollTop(),n=i.$results.get(0).scrollHeight-t+e.deltaY,t=0<e.deltaY&&t-e.deltaY<=0,n=e.deltaY<0&&n<=i.$results.height();t?(i.$results.scrollTop(0),e.preventDefault(),e.stopPropagation()):n&&(i.$results.scrollTop(i.$results.get(0).scrollHeight-i.$results.height()),e.preventDefault(),e.stopPropagation())}),this.$results.on(\"mouseup\",\".select2-results__option--selectable\",function(e){var t=d(this),n=p.GetData(this,\"data\");t.hasClass(\"select2-results__option--selected\")?i.options.get(\"multiple\")?i.trigger(\"unselect\",{originalEvent:e,data:n}):i.trigger(\"close\",{}):i.trigger(\"select\",{originalEvent:e,data:n})}),this.$results.on(\"mouseenter\",\".select2-results__option--selectable\",function(e){var t=p.GetData(this,\"data\");i.getHighlightedResults().removeClass(\"select2-results__option--highlighted\").attr(\"aria-selected\",\"false\"),i.trigger(\"results:focus\",{data:t,element:d(this)})})},s.prototype.getHighlightedResults=function(){return this.$results.find(\".select2-results__option--highlighted\")},s.prototype.destroy=function(){this.$results.remove()},s.prototype.ensureHighlightVisible=function(){var e,t,n,s,i=this.getHighlightedResults();0!==i.length&&(e=this.$results.find(\".select2-results__option--selectable\").index(i),s=this.$results.offset().top,t=i.offset().top,n=this.$results.scrollTop()+(t-s),s=t-s,n-=2*i.outerHeight(!1),e<=2?this.$results.scrollTop(0):(s>this.$results.outerHeight()||s<0)&&this.$results.scrollTop(n))},s.prototype.template=function(e,t){var n=this.options.get(\"templateResult\"),s=this.options.get(\"escapeMarkup\"),e=n(e,t);null==e?t.style.display=\"none\":\"string\"==typeof e?t.innerHTML=s(e):d(t).append(e)},s}),u.define(\"select2/keys\",[],function(){return{BACKSPACE:8,TAB:9,ENTER:13,SHIFT:16,CTRL:17,ALT:18,ESC:27,SPACE:32,PAGE_UP:33,PAGE_DOWN:34,END:35,HOME:36,LEFT:37,UP:38,RIGHT:39,DOWN:40,DELETE:46}}),u.define(\"select2/selection/base\",[\"jquery\",\"../utils\",\"../keys\"],function(n,s,i){function r(e,t){this.$element=e,this.options=t,r.__super__.constructor.call(this)}return s.Extend(r,s.Observable),r.prototype.render=function(){var e=n('<span class=\"select2-selection\" role=\"combobox\"  aria-haspopup=\"true\" aria-expanded=\"false\"></span>');return this._tabindex=0,null!=s.GetData(this.$element[0],\"old-tabindex\")?this._tabindex=s.GetData(this.$element[0],\"old-tabindex\"):null!=this.$element.attr(\"tabindex\")&&(this._tabindex=this.$element.attr(\"tabindex\")),e.attr(\"title\",this.$element.attr(\"title\")),e.attr(\"tabindex\",this._tabindex),e.attr(\"aria-disabled\",\"false\"),this.$selection=e},r.prototype.bind=function(e,t){var n=this,s=e.id+\"-results\";this.container=e,this.$selection.on(\"focus\",function(e){n.trigger(\"focus\",e)}),this.$selection.on(\"blur\",function(e){n._handleBlur(e)}),this.$selection.on(\"keydown\",function(e){n.trigger(\"keypress\",e),e.which===i.SPACE&&e.preventDefault()}),e.on(\"results:focus\",function(e){n.$selection.attr(\"aria-activedescendant\",e.data._resultId)}),e.on(\"selection:update\",function(e){n.update(e.data)}),e.on(\"open\",function(){n.$selection.attr(\"aria-expanded\",\"true\"),n.$selection.attr(\"aria-owns\",s),n._attachCloseHandler(e)}),e.on(\"close\",function(){n.$selection.attr(\"aria-expanded\",\"false\"),n.$selection.removeAttr(\"aria-activedescendant\"),n.$selection.removeAttr(\"aria-owns\"),n.$selection.trigger(\"focus\"),n._detachCloseHandler(e)}),e.on(\"enable\",function(){n.$selection.attr(\"tabindex\",n._tabindex),n.$selection.attr(\"aria-disabled\",\"false\")}),e.on(\"disable\",function(){n.$selection.attr(\"tabindex\",\"-1\"),n.$selection.attr(\"aria-disabled\",\"true\")})},r.prototype._handleBlur=function(e){var t=this;window.setTimeout(function(){document.activeElement==t.$selection[0]||n.contains(t.$selection[0],document.activeElement)||t.trigger(\"blur\",e)},1)},r.prototype._attachCloseHandler=function(e){n(document.body).on(\"mousedown.select2.\"+e.id,function(e){var t=n(e.target).closest(\".select2\");n(\".select2.select2-container--open\").each(function(){this!=t[0]&&s.GetData(this,\"element\").select2(\"close\")})})},r.prototype._detachCloseHandler=function(e){n(document.body).off(\"mousedown.select2.\"+e.id)},r.prototype.position=function(e,t){t.find(\".selection\").append(e)},r.prototype.destroy=function(){this._detachCloseHandler(this.container)},r.prototype.update=function(e){throw new Error(\"The `update` method must be defined in child classes.\")},r.prototype.isEnabled=function(){return!this.isDisabled()},r.prototype.isDisabled=function(){return this.options.get(\"disabled\")},r}),u.define(\"select2/selection/single\",[\"jquery\",\"./base\",\"../utils\",\"../keys\"],function(e,t,n,s){function i(){i.__super__.constructor.apply(this,arguments)}return n.Extend(i,t),i.prototype.render=function(){var e=i.__super__.render.call(this);return e[0].classList.add(\"select2-selection--single\"),e.html('<span class=\"select2-selection__rendered\"></span><span class=\"select2-selection__arrow\" role=\"presentation\"><b role=\"presentation\"></b></span>'),e},i.prototype.bind=function(t,e){var n=this;i.__super__.bind.apply(this,arguments);var s=t.id+\"-container\";this.$selection.find(\".select2-selection__rendered\").attr(\"id\",s).attr(\"role\",\"textbox\").attr(\"aria-readonly\",\"true\"),this.$selection.attr(\"aria-labelledby\",s),this.$selection.attr(\"aria-controls\",s),this.$selection.on(\"mousedown\",function(e){1===e.which&&n.trigger(\"toggle\",{originalEvent:e})}),this.$selection.on(\"focus\",function(e){}),this.$selection.on(\"blur\",function(e){}),t.on(\"focus\",function(e){t.isOpen()||n.$selection.trigger(\"focus\")})},i.prototype.clear=function(){var e=this.$selection.find(\".select2-selection__rendered\");e.empty(),e.removeAttr(\"title\")},i.prototype.display=function(e,t){var n=this.options.get(\"templateSelection\");return this.options.get(\"escapeMarkup\")(n(e,t))},i.prototype.selectionContainer=function(){return e(\"<span></span>\")},i.prototype.update=function(e){var t,n;0!==e.length?(n=e[0],t=this.$selection.find(\".select2-selection__rendered\"),e=this.display(n,t),t.empty().append(e),(n=n.title||n.text)?t.attr(\"title\",n):t.removeAttr(\"title\")):this.clear()},i}),u.define(\"select2/selection/multiple\",[\"jquery\",\"./base\",\"../utils\"],function(i,e,c){function r(e,t){r.__super__.constructor.apply(this,arguments)}return c.Extend(r,e),r.prototype.render=function(){var e=r.__super__.render.call(this);return e[0].classList.add(\"select2-selection--multiple\"),e.html('<ul class=\"select2-selection__rendered\"></ul>'),e},r.prototype.bind=function(e,t){var n=this;r.__super__.bind.apply(this,arguments);var s=e.id+\"-container\";this.$selection.find(\".select2-selection__rendered\").attr(\"id\",s),this.$selection.on(\"click\",function(e){n.trigger(\"toggle\",{originalEvent:e})}),this.$selection.on(\"click\",\".select2-selection__choice__remove\",function(e){var t;n.isDisabled()||(t=i(this).parent(),t=c.GetData(t[0],\"data\"),n.trigger(\"unselect\",{originalEvent:e,data:t}))}),this.$selection.on(\"keydown\",\".select2-selection__choice__remove\",function(e){n.isDisabled()||e.stopPropagation()})},r.prototype.clear=function(){var e=this.$selection.find(\".select2-selection__rendered\");e.empty(),e.removeAttr(\"title\")},r.prototype.display=function(e,t){var n=this.options.get(\"templateSelection\");return this.options.get(\"escapeMarkup\")(n(e,t))},r.prototype.selectionContainer=function(){return i('<li class=\"select2-selection__choice\"><button type=\"button\" class=\"select2-selection__choice__remove\" tabindex=\"-1\"><span aria-hidden=\"true\">&times;</span></button><span class=\"select2-selection__choice__display\"></span></li>')},r.prototype.update=function(e){if(this.clear(),0!==e.length){for(var t=[],n=this.$selection.find(\".select2-selection__rendered\").attr(\"id\")+\"-choice-\",s=0;s<e.length;s++){var i=e[s],r=this.selectionContainer(),o=this.display(i,r),a=n+c.generateChars(4)+\"-\";i.id?a+=i.id:a+=c.generateChars(4),r.find(\".select2-selection__choice__display\").append(o).attr(\"id\",a);var l=i.title||i.text;l&&r.attr(\"title\",l);o=this.options.get(\"translations\").get(\"removeItem\"),l=r.find(\".select2-selection__choice__remove\");l.attr(\"title\",o()),l.attr(\"aria-label\",o()),l.attr(\"aria-describedby\",a),c.StoreData(r[0],\"data\",i),t.push(r)}this.$selection.find(\".select2-selection__rendered\").append(t)}},r}),u.define(\"select2/selection/placeholder\",[],function(){function e(e,t,n){this.placeholder=this.normalizePlaceholder(n.get(\"placeholder\")),e.call(this,t,n)}return e.prototype.normalizePlaceholder=function(e,t){return t=\"string\"==typeof t?{id:\"\",text:t}:t},e.prototype.createPlaceholder=function(e,t){var n=this.selectionContainer();n.html(this.display(t)),n[0].classList.add(\"select2-selection__placeholder\"),n[0].classList.remove(\"select2-selection__choice\");t=t.title||t.text||n.text();return this.$selection.find(\".select2-selection__rendered\").attr(\"title\",t),n},e.prototype.update=function(e,t){var n=1==t.length&&t[0].id!=this.placeholder.id;if(1<t.length||n)return e.call(this,t);this.clear();t=this.createPlaceholder(this.placeholder);this.$selection.find(\".select2-selection__rendered\").append(t)},e}),u.define(\"select2/selection/allowClear\",[\"jquery\",\"../keys\",\"../utils\"],function(i,s,a){function e(){}return e.prototype.bind=function(e,t,n){var s=this;e.call(this,t,n),null==this.placeholder&&this.options.get(\"debug\")&&window.console&&console.error&&console.error(\"Select2: The `allowClear` option should be used in combination with the `placeholder` option.\"),this.$selection.on(\"mousedown\",\".select2-selection__clear\",function(e){s._handleClear(e)}),t.on(\"keypress\",function(e){s._handleKeyboardClear(e,t)})},e.prototype._handleClear=function(e,t){if(!this.isDisabled()){var n=this.$selection.find(\".select2-selection__clear\");if(0!==n.length){t.stopPropagation();var s=a.GetData(n[0],\"data\"),i=this.$element.val();this.$element.val(this.placeholder.id);var r={data:s};if(this.trigger(\"clear\",r),r.prevented)this.$element.val(i);else{for(var o=0;o<s.length;o++)if(r={data:s[o]},this.trigger(\"unselect\",r),r.prevented)return void this.$element.val(i);this.$element.trigger(\"input\").trigger(\"change\"),this.trigger(\"toggle\",{})}}}},e.prototype._handleKeyboardClear=function(e,t,n){n.isOpen()||t.which!=s.DELETE&&t.which!=s.BACKSPACE||this._handleClear(t)},e.prototype.update=function(e,t){var n,s;e.call(this,t),this.$selection.find(\".select2-selection__clear\").remove(),this.$selection[0].classList.remove(\"select2-selection--clearable\"),0<this.$selection.find(\".select2-selection__placeholder\").length||0===t.length||(n=this.$selection.find(\".select2-selection__rendered\").attr(\"id\"),s=this.options.get(\"translations\").get(\"removeAllItems\"),(e=i('<button type=\"button\" class=\"select2-selection__clear\" tabindex=\"-1\"><span aria-hidden=\"true\">&times;</span></button>')).attr(\"title\",s()),e.attr(\"aria-label\",s()),e.attr(\"aria-describedby\",n),a.StoreData(e[0],\"data\",t),this.$selection.prepend(e),this.$selection[0].classList.add(\"select2-selection--clearable\"))},e}),u.define(\"select2/selection/search\",[\"jquery\",\"../utils\",\"../keys\"],function(s,a,l){function e(e,t,n){e.call(this,t,n)}return e.prototype.render=function(e){var t=this.options.get(\"translations\").get(\"search\"),n=s('<span class=\"select2-search select2-search--inline\"><textarea class=\"select2-search__field\" type=\"search\" tabindex=\"-1\" autocorrect=\"off\" autocapitalize=\"none\" spellcheck=\"false\" role=\"searchbox\" aria-autocomplete=\"list\" ></textarea></span>');this.$searchContainer=n,this.$search=n.find(\"textarea\"),this.$search.prop(\"autocomplete\",this.options.get(\"autocomplete\")),this.$search.attr(\"aria-label\",t());e=e.call(this);return this._transferTabIndex(),e.append(this.$searchContainer),e},e.prototype.bind=function(e,t,n){var s=this,i=t.id+\"-results\",r=t.id+\"-container\";e.call(this,t,n),s.$search.attr(\"aria-describedby\",r),t.on(\"open\",function(){s.$search.attr(\"aria-controls\",i),s.$search.trigger(\"focus\")}),t.on(\"close\",function(){s.$search.val(\"\"),s.resizeSearch(),s.$search.removeAttr(\"aria-controls\"),s.$search.removeAttr(\"aria-activedescendant\"),s.$search.trigger(\"focus\")}),t.on(\"enable\",function(){s.$search.prop(\"disabled\",!1),s._transferTabIndex()}),t.on(\"disable\",function(){s.$search.prop(\"disabled\",!0)}),t.on(\"focus\",function(e){s.$search.trigger(\"focus\")}),t.on(\"results:focus\",function(e){e.data._resultId?s.$search.attr(\"aria-activedescendant\",e.data._resultId):s.$search.removeAttr(\"aria-activedescendant\")}),this.$selection.on(\"focusin\",\".select2-search--inline\",function(e){s.trigger(\"focus\",e)}),this.$selection.on(\"focusout\",\".select2-search--inline\",function(e){s._handleBlur(e)}),this.$selection.on(\"keydown\",\".select2-search--inline\",function(e){var t;e.stopPropagation(),s.trigger(\"keypress\",e),s._keyUpPrevented=e.isDefaultPrevented(),e.which!==l.BACKSPACE||\"\"!==s.$search.val()||0<(t=s.$selection.find(\".select2-selection__choice\").last()).length&&(t=a.GetData(t[0],\"data\"),s.searchRemoveChoice(t),e.preventDefault())}),this.$selection.on(\"click\",\".select2-search--inline\",function(e){s.$search.val()&&e.stopPropagation()});var t=document.documentMode,o=t&&t<=11;this.$selection.on(\"input.searchcheck\",\".select2-search--inline\",function(e){o?s.$selection.off(\"input.search input.searchcheck\"):s.$selection.off(\"keyup.search\")}),this.$selection.on(\"keyup.search input.search\",\".select2-search--inline\",function(e){var t;o&&\"input\"===e.type?s.$selection.off(\"input.search input.searchcheck\"):(t=e.which)!=l.SHIFT&&t!=l.CTRL&&t!=l.ALT&&t!=l.TAB&&s.handleSearch(e)})},e.prototype._transferTabIndex=function(e){this.$search.attr(\"tabindex\",this.$selection.attr(\"tabindex\")),this.$selection.attr(\"tabindex\",\"-1\")},e.prototype.createPlaceholder=function(e,t){this.$search.attr(\"placeholder\",t.text)},e.prototype.update=function(e,t){var n=this.$search[0]==document.activeElement;this.$search.attr(\"placeholder\",\"\"),e.call(this,t),this.resizeSearch(),n&&this.$search.trigger(\"focus\")},e.prototype.handleSearch=function(){var e;this.resizeSearch(),this._keyUpPrevented||(e=this.$search.val(),this.trigger(\"query\",{term:e})),this._keyUpPrevented=!1},e.prototype.searchRemoveChoice=function(e,t){this.trigger(\"unselect\",{data:t}),this.$search.val(t.text),this.handleSearch()},e.prototype.resizeSearch=function(){this.$search.css(\"width\",\"25px\");var e=\"100%\";\"\"===this.$search.attr(\"placeholder\")&&(e=.75*(this.$search.val().length+1)+\"em\"),this.$search.css(\"width\",e)},e}),u.define(\"select2/selection/selectionCss\",[\"../utils\"],function(n){function e(){}return e.prototype.render=function(e){var t=e.call(this),e=this.options.get(\"selectionCssClass\")||\"\";return-1!==e.indexOf(\":all:\")&&(e=e.replace(\":all:\",\"\"),n.copyNonInternalCssClasses(t[0],this.$element[0])),t.addClass(e),t},e}),u.define(\"select2/selection/eventRelay\",[\"jquery\"],function(o){function e(){}return e.prototype.bind=function(e,t,n){var s=this,i=[\"open\",\"opening\",\"close\",\"closing\",\"select\",\"selecting\",\"unselect\",\"unselecting\",\"clear\",\"clearing\"],r=[\"opening\",\"closing\",\"selecting\",\"unselecting\",\"clearing\"];e.call(this,t,n),t.on(\"*\",function(e,t){var n;-1!==i.indexOf(e)&&(t=t||{},n=o.Event(\"select2:\"+e,{params:t}),s.$element.trigger(n),-1!==r.indexOf(e)&&(t.prevented=n.isDefaultPrevented()))})},e}),u.define(\"select2/translation\",[\"jquery\",\"require\"],function(t,n){function s(e){this.dict=e||{}}return s.prototype.all=function(){return this.dict},s.prototype.get=function(e){return this.dict[e]},s.prototype.extend=function(e){this.dict=t.extend({},e.all(),this.dict)},s._cache={},s.loadPath=function(e){var t;return e in s._cache||(t=n(e),s._cache[e]=t),new s(s._cache[e])},s}),u.define(\"select2/diacritics\",[],function(){return{\"Ⓐ\":\"A\",\"Ａ\":\"A\",\"À\":\"A\",\"Á\":\"A\",\"Â\":\"A\",\"Ầ\":\"A\",\"Ấ\":\"A\",\"Ẫ\":\"A\",\"Ẩ\":\"A\",\"Ã\":\"A\",\"Ā\":\"A\",\"Ă\":\"A\",\"Ằ\":\"A\",\"Ắ\":\"A\",\"Ẵ\":\"A\",\"Ẳ\":\"A\",\"Ȧ\":\"A\",\"Ǡ\":\"A\",\"Ä\":\"A\",\"Ǟ\":\"A\",\"Ả\":\"A\",\"Å\":\"A\",\"Ǻ\":\"A\",\"Ǎ\":\"A\",\"Ȁ\":\"A\",\"Ȃ\":\"A\",\"Ạ\":\"A\",\"Ậ\":\"A\",\"Ặ\":\"A\",\"Ḁ\":\"A\",\"Ą\":\"A\",\"Ⱥ\":\"A\",\"Ɐ\":\"A\",\"Ꜳ\":\"AA\",\"Æ\":\"AE\",\"Ǽ\":\"AE\",\"Ǣ\":\"AE\",\"Ꜵ\":\"AO\",\"Ꜷ\":\"AU\",\"Ꜹ\":\"AV\",\"Ꜻ\":\"AV\",\"Ꜽ\":\"AY\",\"Ⓑ\":\"B\",\"Ｂ\":\"B\",\"Ḃ\":\"B\",\"Ḅ\":\"B\",\"Ḇ\":\"B\",\"Ƀ\":\"B\",\"Ƃ\":\"B\",\"Ɓ\":\"B\",\"Ⓒ\":\"C\",\"Ｃ\":\"C\",\"Ć\":\"C\",\"Ĉ\":\"C\",\"Ċ\":\"C\",\"Č\":\"C\",\"Ç\":\"C\",\"Ḉ\":\"C\",\"Ƈ\":\"C\",\"Ȼ\":\"C\",\"Ꜿ\":\"C\",\"Ⓓ\":\"D\",\"Ｄ\":\"D\",\"Ḋ\":\"D\",\"Ď\":\"D\",\"Ḍ\":\"D\",\"Ḑ\":\"D\",\"Ḓ\":\"D\",\"Ḏ\":\"D\",\"Đ\":\"D\",\"Ƌ\":\"D\",\"Ɗ\":\"D\",\"Ɖ\":\"D\",\"Ꝺ\":\"D\",\"Ǳ\":\"DZ\",\"Ǆ\":\"DZ\",\"ǲ\":\"Dz\",\"ǅ\":\"Dz\",\"Ⓔ\":\"E\",\"Ｅ\":\"E\",\"È\":\"E\",\"É\":\"E\",\"Ê\":\"E\",\"Ề\":\"E\",\"Ế\":\"E\",\"Ễ\":\"E\",\"Ể\":\"E\",\"Ẽ\":\"E\",\"Ē\":\"E\",\"Ḕ\":\"E\",\"Ḗ\":\"E\",\"Ĕ\":\"E\",\"Ė\":\"E\",\"Ë\":\"E\",\"Ẻ\":\"E\",\"Ě\":\"E\",\"Ȅ\":\"E\",\"Ȇ\":\"E\",\"Ẹ\":\"E\",\"Ệ\":\"E\",\"Ȩ\":\"E\",\"Ḝ\":\"E\",\"Ę\":\"E\",\"Ḙ\":\"E\",\"Ḛ\":\"E\",\"Ɛ\":\"E\",\"Ǝ\":\"E\",\"Ⓕ\":\"F\",\"Ｆ\":\"F\",\"Ḟ\":\"F\",\"Ƒ\":\"F\",\"Ꝼ\":\"F\",\"Ⓖ\":\"G\",\"Ｇ\":\"G\",\"Ǵ\":\"G\",\"Ĝ\":\"G\",\"Ḡ\":\"G\",\"Ğ\":\"G\",\"Ġ\":\"G\",\"Ǧ\":\"G\",\"Ģ\":\"G\",\"Ǥ\":\"G\",\"Ɠ\":\"G\",\"Ꞡ\":\"G\",\"Ᵹ\":\"G\",\"Ꝿ\":\"G\",\"Ⓗ\":\"H\",\"Ｈ\":\"H\",\"Ĥ\":\"H\",\"Ḣ\":\"H\",\"Ḧ\":\"H\",\"Ȟ\":\"H\",\"Ḥ\":\"H\",\"Ḩ\":\"H\",\"Ḫ\":\"H\",\"Ħ\":\"H\",\"Ⱨ\":\"H\",\"Ⱶ\":\"H\",\"Ɥ\":\"H\",\"Ⓘ\":\"I\",\"Ｉ\":\"I\",\"Ì\":\"I\",\"Í\":\"I\",\"Î\":\"I\",\"Ĩ\":\"I\",\"Ī\":\"I\",\"Ĭ\":\"I\",\"İ\":\"I\",\"Ï\":\"I\",\"Ḯ\":\"I\",\"Ỉ\":\"I\",\"Ǐ\":\"I\",\"Ȉ\":\"I\",\"Ȋ\":\"I\",\"Ị\":\"I\",\"Į\":\"I\",\"Ḭ\":\"I\",\"Ɨ\":\"I\",\"Ⓙ\":\"J\",\"Ｊ\":\"J\",\"Ĵ\":\"J\",\"Ɉ\":\"J\",\"Ⓚ\":\"K\",\"Ｋ\":\"K\",\"Ḱ\":\"K\",\"Ǩ\":\"K\",\"Ḳ\":\"K\",\"Ķ\":\"K\",\"Ḵ\":\"K\",\"Ƙ\":\"K\",\"Ⱪ\":\"K\",\"Ꝁ\":\"K\",\"Ꝃ\":\"K\",\"Ꝅ\":\"K\",\"Ꞣ\":\"K\",\"Ⓛ\":\"L\",\"Ｌ\":\"L\",\"Ŀ\":\"L\",\"Ĺ\":\"L\",\"Ľ\":\"L\",\"Ḷ\":\"L\",\"Ḹ\":\"L\",\"Ļ\":\"L\",\"Ḽ\":\"L\",\"Ḻ\":\"L\",\"Ł\":\"L\",\"Ƚ\":\"L\",\"Ɫ\":\"L\",\"Ⱡ\":\"L\",\"Ꝉ\":\"L\",\"Ꝇ\":\"L\",\"Ꞁ\":\"L\",\"Ǉ\":\"LJ\",\"ǈ\":\"Lj\",\"Ⓜ\":\"M\",\"Ｍ\":\"M\",\"Ḿ\":\"M\",\"Ṁ\":\"M\",\"Ṃ\":\"M\",\"Ɱ\":\"M\",\"Ɯ\":\"M\",\"Ⓝ\":\"N\",\"Ｎ\":\"N\",\"Ǹ\":\"N\",\"Ń\":\"N\",\"Ñ\":\"N\",\"Ṅ\":\"N\",\"Ň\":\"N\",\"Ṇ\":\"N\",\"Ņ\":\"N\",\"Ṋ\":\"N\",\"Ṉ\":\"N\",\"Ƞ\":\"N\",\"Ɲ\":\"N\",\"Ꞑ\":\"N\",\"Ꞥ\":\"N\",\"Ǌ\":\"NJ\",\"ǋ\":\"Nj\",\"Ⓞ\":\"O\",\"Ｏ\":\"O\",\"Ò\":\"O\",\"Ó\":\"O\",\"Ô\":\"O\",\"Ồ\":\"O\",\"Ố\":\"O\",\"Ỗ\":\"O\",\"Ổ\":\"O\",\"Õ\":\"O\",\"Ṍ\":\"O\",\"Ȭ\":\"O\",\"Ṏ\":\"O\",\"Ō\":\"O\",\"Ṑ\":\"O\",\"Ṓ\":\"O\",\"Ŏ\":\"O\",\"Ȯ\":\"O\",\"Ȱ\":\"O\",\"Ö\":\"O\",\"Ȫ\":\"O\",\"Ỏ\":\"O\",\"Ő\":\"O\",\"Ǒ\":\"O\",\"Ȍ\":\"O\",\"Ȏ\":\"O\",\"Ơ\":\"O\",\"Ờ\":\"O\",\"Ớ\":\"O\",\"Ỡ\":\"O\",\"Ở\":\"O\",\"Ợ\":\"O\",\"Ọ\":\"O\",\"Ộ\":\"O\",\"Ǫ\":\"O\",\"Ǭ\":\"O\",\"Ø\":\"O\",\"Ǿ\":\"O\",\"Ɔ\":\"O\",\"Ɵ\":\"O\",\"Ꝋ\":\"O\",\"Ꝍ\":\"O\",\"Œ\":\"OE\",\"Ƣ\":\"OI\",\"Ꝏ\":\"OO\",\"Ȣ\":\"OU\",\"Ⓟ\":\"P\",\"Ｐ\":\"P\",\"Ṕ\":\"P\",\"Ṗ\":\"P\",\"Ƥ\":\"P\",\"Ᵽ\":\"P\",\"Ꝑ\":\"P\",\"Ꝓ\":\"P\",\"Ꝕ\":\"P\",\"Ⓠ\":\"Q\",\"Ｑ\":\"Q\",\"Ꝗ\":\"Q\",\"Ꝙ\":\"Q\",\"Ɋ\":\"Q\",\"Ⓡ\":\"R\",\"Ｒ\":\"R\",\"Ŕ\":\"R\",\"Ṙ\":\"R\",\"Ř\":\"R\",\"Ȑ\":\"R\",\"Ȓ\":\"R\",\"Ṛ\":\"R\",\"Ṝ\":\"R\",\"Ŗ\":\"R\",\"Ṟ\":\"R\",\"Ɍ\":\"R\",\"Ɽ\":\"R\",\"Ꝛ\":\"R\",\"Ꞧ\":\"R\",\"Ꞃ\":\"R\",\"Ⓢ\":\"S\",\"Ｓ\":\"S\",\"ẞ\":\"S\",\"Ś\":\"S\",\"Ṥ\":\"S\",\"Ŝ\":\"S\",\"Ṡ\":\"S\",\"Š\":\"S\",\"Ṧ\":\"S\",\"Ṣ\":\"S\",\"Ṩ\":\"S\",\"Ș\":\"S\",\"Ş\":\"S\",\"Ȿ\":\"S\",\"Ꞩ\":\"S\",\"Ꞅ\":\"S\",\"Ⓣ\":\"T\",\"Ｔ\":\"T\",\"Ṫ\":\"T\",\"Ť\":\"T\",\"Ṭ\":\"T\",\"Ț\":\"T\",\"Ţ\":\"T\",\"Ṱ\":\"T\",\"Ṯ\":\"T\",\"Ŧ\":\"T\",\"Ƭ\":\"T\",\"Ʈ\":\"T\",\"Ⱦ\":\"T\",\"Ꞇ\":\"T\",\"Ꜩ\":\"TZ\",\"Ⓤ\":\"U\",\"Ｕ\":\"U\",\"Ù\":\"U\",\"Ú\":\"U\",\"Û\":\"U\",\"Ũ\":\"U\",\"Ṹ\":\"U\",\"Ū\":\"U\",\"Ṻ\":\"U\",\"Ŭ\":\"U\",\"Ü\":\"U\",\"Ǜ\":\"U\",\"Ǘ\":\"U\",\"Ǖ\":\"U\",\"Ǚ\":\"U\",\"Ủ\":\"U\",\"Ů\":\"U\",\"Ű\":\"U\",\"Ǔ\":\"U\",\"Ȕ\":\"U\",\"Ȗ\":\"U\",\"Ư\":\"U\",\"Ừ\":\"U\",\"Ứ\":\"U\",\"Ữ\":\"U\",\"Ử\":\"U\",\"Ự\":\"U\",\"Ụ\":\"U\",\"Ṳ\":\"U\",\"Ų\":\"U\",\"Ṷ\":\"U\",\"Ṵ\":\"U\",\"Ʉ\":\"U\",\"Ⓥ\":\"V\",\"Ｖ\":\"V\",\"Ṽ\":\"V\",\"Ṿ\":\"V\",\"Ʋ\":\"V\",\"Ꝟ\":\"V\",\"Ʌ\":\"V\",\"Ꝡ\":\"VY\",\"Ⓦ\":\"W\",\"Ｗ\":\"W\",\"Ẁ\":\"W\",\"Ẃ\":\"W\",\"Ŵ\":\"W\",\"Ẇ\":\"W\",\"Ẅ\":\"W\",\"Ẉ\":\"W\",\"Ⱳ\":\"W\",\"Ⓧ\":\"X\",\"Ｘ\":\"X\",\"Ẋ\":\"X\",\"Ẍ\":\"X\",\"Ⓨ\":\"Y\",\"Ｙ\":\"Y\",\"Ỳ\":\"Y\",\"Ý\":\"Y\",\"Ŷ\":\"Y\",\"Ỹ\":\"Y\",\"Ȳ\":\"Y\",\"Ẏ\":\"Y\",\"Ÿ\":\"Y\",\"Ỷ\":\"Y\",\"Ỵ\":\"Y\",\"Ƴ\":\"Y\",\"Ɏ\":\"Y\",\"Ỿ\":\"Y\",\"Ⓩ\":\"Z\",\"Ｚ\":\"Z\",\"Ź\":\"Z\",\"Ẑ\":\"Z\",\"Ż\":\"Z\",\"Ž\":\"Z\",\"Ẓ\":\"Z\",\"Ẕ\":\"Z\",\"Ƶ\":\"Z\",\"Ȥ\":\"Z\",\"Ɀ\":\"Z\",\"Ⱬ\":\"Z\",\"Ꝣ\":\"Z\",\"ⓐ\":\"a\",\"ａ\":\"a\",\"ẚ\":\"a\",\"à\":\"a\",\"á\":\"a\",\"â\":\"a\",\"ầ\":\"a\",\"ấ\":\"a\",\"ẫ\":\"a\",\"ẩ\":\"a\",\"ã\":\"a\",\"ā\":\"a\",\"ă\":\"a\",\"ằ\":\"a\",\"ắ\":\"a\",\"ẵ\":\"a\",\"ẳ\":\"a\",\"ȧ\":\"a\",\"ǡ\":\"a\",\"ä\":\"a\",\"ǟ\":\"a\",\"ả\":\"a\",\"å\":\"a\",\"ǻ\":\"a\",\"ǎ\":\"a\",\"ȁ\":\"a\",\"ȃ\":\"a\",\"ạ\":\"a\",\"ậ\":\"a\",\"ặ\":\"a\",\"ḁ\":\"a\",\"ą\":\"a\",\"ⱥ\":\"a\",\"ɐ\":\"a\",\"ꜳ\":\"aa\",\"æ\":\"ae\",\"ǽ\":\"ae\",\"ǣ\":\"ae\",\"ꜵ\":\"ao\",\"ꜷ\":\"au\",\"ꜹ\":\"av\",\"ꜻ\":\"av\",\"ꜽ\":\"ay\",\"ⓑ\":\"b\",\"ｂ\":\"b\",\"ḃ\":\"b\",\"ḅ\":\"b\",\"ḇ\":\"b\",\"ƀ\":\"b\",\"ƃ\":\"b\",\"ɓ\":\"b\",\"ⓒ\":\"c\",\"ｃ\":\"c\",\"ć\":\"c\",\"ĉ\":\"c\",\"ċ\":\"c\",\"č\":\"c\",\"ç\":\"c\",\"ḉ\":\"c\",\"ƈ\":\"c\",\"ȼ\":\"c\",\"ꜿ\":\"c\",\"ↄ\":\"c\",\"ⓓ\":\"d\",\"ｄ\":\"d\",\"ḋ\":\"d\",\"ď\":\"d\",\"ḍ\":\"d\",\"ḑ\":\"d\",\"ḓ\":\"d\",\"ḏ\":\"d\",\"đ\":\"d\",\"ƌ\":\"d\",\"ɖ\":\"d\",\"ɗ\":\"d\",\"ꝺ\":\"d\",\"ǳ\":\"dz\",\"ǆ\":\"dz\",\"ⓔ\":\"e\",\"ｅ\":\"e\",\"è\":\"e\",\"é\":\"e\",\"ê\":\"e\",\"ề\":\"e\",\"ế\":\"e\",\"ễ\":\"e\",\"ể\":\"e\",\"ẽ\":\"e\",\"ē\":\"e\",\"ḕ\":\"e\",\"ḗ\":\"e\",\"ĕ\":\"e\",\"ė\":\"e\",\"ë\":\"e\",\"ẻ\":\"e\",\"ě\":\"e\",\"ȅ\":\"e\",\"ȇ\":\"e\",\"ẹ\":\"e\",\"ệ\":\"e\",\"ȩ\":\"e\",\"ḝ\":\"e\",\"ę\":\"e\",\"ḙ\":\"e\",\"ḛ\":\"e\",\"ɇ\":\"e\",\"ɛ\":\"e\",\"ǝ\":\"e\",\"ⓕ\":\"f\",\"ｆ\":\"f\",\"ḟ\":\"f\",\"ƒ\":\"f\",\"ꝼ\":\"f\",\"ⓖ\":\"g\",\"ｇ\":\"g\",\"ǵ\":\"g\",\"ĝ\":\"g\",\"ḡ\":\"g\",\"ğ\":\"g\",\"ġ\":\"g\",\"ǧ\":\"g\",\"ģ\":\"g\",\"ǥ\":\"g\",\"ɠ\":\"g\",\"ꞡ\":\"g\",\"ᵹ\":\"g\",\"ꝿ\":\"g\",\"ⓗ\":\"h\",\"ｈ\":\"h\",\"ĥ\":\"h\",\"ḣ\":\"h\",\"ḧ\":\"h\",\"ȟ\":\"h\",\"ḥ\":\"h\",\"ḩ\":\"h\",\"ḫ\":\"h\",\"ẖ\":\"h\",\"ħ\":\"h\",\"ⱨ\":\"h\",\"ⱶ\":\"h\",\"ɥ\":\"h\",\"ƕ\":\"hv\",\"ⓘ\":\"i\",\"ｉ\":\"i\",\"ì\":\"i\",\"í\":\"i\",\"î\":\"i\",\"ĩ\":\"i\",\"ī\":\"i\",\"ĭ\":\"i\",\"ï\":\"i\",\"ḯ\":\"i\",\"ỉ\":\"i\",\"ǐ\":\"i\",\"ȉ\":\"i\",\"ȋ\":\"i\",\"ị\":\"i\",\"į\":\"i\",\"ḭ\":\"i\",\"ɨ\":\"i\",\"ı\":\"i\",\"ⓙ\":\"j\",\"ｊ\":\"j\",\"ĵ\":\"j\",\"ǰ\":\"j\",\"ɉ\":\"j\",\"ⓚ\":\"k\",\"ｋ\":\"k\",\"ḱ\":\"k\",\"ǩ\":\"k\",\"ḳ\":\"k\",\"ķ\":\"k\",\"ḵ\":\"k\",\"ƙ\":\"k\",\"ⱪ\":\"k\",\"ꝁ\":\"k\",\"ꝃ\":\"k\",\"ꝅ\":\"k\",\"ꞣ\":\"k\",\"ⓛ\":\"l\",\"ｌ\":\"l\",\"ŀ\":\"l\",\"ĺ\":\"l\",\"ľ\":\"l\",\"ḷ\":\"l\",\"ḹ\":\"l\",\"ļ\":\"l\",\"ḽ\":\"l\",\"ḻ\":\"l\",\"ſ\":\"l\",\"ł\":\"l\",\"ƚ\":\"l\",\"ɫ\":\"l\",\"ⱡ\":\"l\",\"ꝉ\":\"l\",\"ꞁ\":\"l\",\"ꝇ\":\"l\",\"ǉ\":\"lj\",\"ⓜ\":\"m\",\"ｍ\":\"m\",\"ḿ\":\"m\",\"ṁ\":\"m\",\"ṃ\":\"m\",\"ɱ\":\"m\",\"ɯ\":\"m\",\"ⓝ\":\"n\",\"ｎ\":\"n\",\"ǹ\":\"n\",\"ń\":\"n\",\"ñ\":\"n\",\"ṅ\":\"n\",\"ň\":\"n\",\"ṇ\":\"n\",\"ņ\":\"n\",\"ṋ\":\"n\",\"ṉ\":\"n\",\"ƞ\":\"n\",\"ɲ\":\"n\",\"ŉ\":\"n\",\"ꞑ\":\"n\",\"ꞥ\":\"n\",\"ǌ\":\"nj\",\"ⓞ\":\"o\",\"ｏ\":\"o\",\"ò\":\"o\",\"ó\":\"o\",\"ô\":\"o\",\"ồ\":\"o\",\"ố\":\"o\",\"ỗ\":\"o\",\"ổ\":\"o\",\"õ\":\"o\",\"ṍ\":\"o\",\"ȭ\":\"o\",\"ṏ\":\"o\",\"ō\":\"o\",\"ṑ\":\"o\",\"ṓ\":\"o\",\"ŏ\":\"o\",\"ȯ\":\"o\",\"ȱ\":\"o\",\"ö\":\"o\",\"ȫ\":\"o\",\"ỏ\":\"o\",\"ő\":\"o\",\"ǒ\":\"o\",\"ȍ\":\"o\",\"ȏ\":\"o\",\"ơ\":\"o\",\"ờ\":\"o\",\"ớ\":\"o\",\"ỡ\":\"o\",\"ở\":\"o\",\"ợ\":\"o\",\"ọ\":\"o\",\"ộ\":\"o\",\"ǫ\":\"o\",\"ǭ\":\"o\",\"ø\":\"o\",\"ǿ\":\"o\",\"ɔ\":\"o\",\"ꝋ\":\"o\",\"ꝍ\":\"o\",\"ɵ\":\"o\",\"œ\":\"oe\",\"ƣ\":\"oi\",\"ȣ\":\"ou\",\"ꝏ\":\"oo\",\"ⓟ\":\"p\",\"ｐ\":\"p\",\"ṕ\":\"p\",\"ṗ\":\"p\",\"ƥ\":\"p\",\"ᵽ\":\"p\",\"ꝑ\":\"p\",\"ꝓ\":\"p\",\"ꝕ\":\"p\",\"ⓠ\":\"q\",\"ｑ\":\"q\",\"ɋ\":\"q\",\"ꝗ\":\"q\",\"ꝙ\":\"q\",\"ⓡ\":\"r\",\"ｒ\":\"r\",\"ŕ\":\"r\",\"ṙ\":\"r\",\"ř\":\"r\",\"ȑ\":\"r\",\"ȓ\":\"r\",\"ṛ\":\"r\",\"ṝ\":\"r\",\"ŗ\":\"r\",\"ṟ\":\"r\",\"ɍ\":\"r\",\"ɽ\":\"r\",\"ꝛ\":\"r\",\"ꞧ\":\"r\",\"ꞃ\":\"r\",\"ⓢ\":\"s\",\"ｓ\":\"s\",\"ß\":\"s\",\"ś\":\"s\",\"ṥ\":\"s\",\"ŝ\":\"s\",\"ṡ\":\"s\",\"š\":\"s\",\"ṧ\":\"s\",\"ṣ\":\"s\",\"ṩ\":\"s\",\"ș\":\"s\",\"ş\":\"s\",\"ȿ\":\"s\",\"ꞩ\":\"s\",\"ꞅ\":\"s\",\"ẛ\":\"s\",\"ⓣ\":\"t\",\"ｔ\":\"t\",\"ṫ\":\"t\",\"ẗ\":\"t\",\"ť\":\"t\",\"ṭ\":\"t\",\"ț\":\"t\",\"ţ\":\"t\",\"ṱ\":\"t\",\"ṯ\":\"t\",\"ŧ\":\"t\",\"ƭ\":\"t\",\"ʈ\":\"t\",\"ⱦ\":\"t\",\"ꞇ\":\"t\",\"ꜩ\":\"tz\",\"ⓤ\":\"u\",\"ｕ\":\"u\",\"ù\":\"u\",\"ú\":\"u\",\"û\":\"u\",\"ũ\":\"u\",\"ṹ\":\"u\",\"ū\":\"u\",\"ṻ\":\"u\",\"ŭ\":\"u\",\"ü\":\"u\",\"ǜ\":\"u\",\"ǘ\":\"u\",\"ǖ\":\"u\",\"ǚ\":\"u\",\"ủ\":\"u\",\"ů\":\"u\",\"ű\":\"u\",\"ǔ\":\"u\",\"ȕ\":\"u\",\"ȗ\":\"u\",\"ư\":\"u\",\"ừ\":\"u\",\"ứ\":\"u\",\"ữ\":\"u\",\"ử\":\"u\",\"ự\":\"u\",\"ụ\":\"u\",\"ṳ\":\"u\",\"ų\":\"u\",\"ṷ\":\"u\",\"ṵ\":\"u\",\"ʉ\":\"u\",\"ⓥ\":\"v\",\"ｖ\":\"v\",\"ṽ\":\"v\",\"ṿ\":\"v\",\"ʋ\":\"v\",\"ꝟ\":\"v\",\"ʌ\":\"v\",\"ꝡ\":\"vy\",\"ⓦ\":\"w\",\"ｗ\":\"w\",\"ẁ\":\"w\",\"ẃ\":\"w\",\"ŵ\":\"w\",\"ẇ\":\"w\",\"ẅ\":\"w\",\"ẘ\":\"w\",\"ẉ\":\"w\",\"ⱳ\":\"w\",\"ⓧ\":\"x\",\"ｘ\":\"x\",\"ẋ\":\"x\",\"ẍ\":\"x\",\"ⓨ\":\"y\",\"ｙ\":\"y\",\"ỳ\":\"y\",\"ý\":\"y\",\"ŷ\":\"y\",\"ỹ\":\"y\",\"ȳ\":\"y\",\"ẏ\":\"y\",\"ÿ\":\"y\",\"ỷ\":\"y\",\"ẙ\":\"y\",\"ỵ\":\"y\",\"ƴ\":\"y\",\"ɏ\":\"y\",\"ỿ\":\"y\",\"ⓩ\":\"z\",\"ｚ\":\"z\",\"ź\":\"z\",\"ẑ\":\"z\",\"ż\":\"z\",\"ž\":\"z\",\"ẓ\":\"z\",\"ẕ\":\"z\",\"ƶ\":\"z\",\"ȥ\":\"z\",\"ɀ\":\"z\",\"ⱬ\":\"z\",\"ꝣ\":\"z\",\"Ά\":\"Α\",\"Έ\":\"Ε\",\"Ή\":\"Η\",\"Ί\":\"Ι\",\"Ϊ\":\"Ι\",\"Ό\":\"Ο\",\"Ύ\":\"Υ\",\"Ϋ\":\"Υ\",\"Ώ\":\"Ω\",\"ά\":\"α\",\"έ\":\"ε\",\"ή\":\"η\",\"ί\":\"ι\",\"ϊ\":\"ι\",\"ΐ\":\"ι\",\"ό\":\"ο\",\"ύ\":\"υ\",\"ϋ\":\"υ\",\"ΰ\":\"υ\",\"ώ\":\"ω\",\"ς\":\"σ\",\"’\":\"'\"}}),u.define(\"select2/data/base\",[\"../utils\"],function(n){function s(e,t){s.__super__.constructor.call(this)}return n.Extend(s,n.Observable),s.prototype.current=function(e){throw new Error(\"The `current` method must be defined in child classes.\")},s.prototype.query=function(e,t){throw new Error(\"The `query` method must be defined in child classes.\")},s.prototype.bind=function(e,t){},s.prototype.destroy=function(){},s.prototype.generateResultId=function(e,t){e=e.id+\"-result-\";return e+=n.generateChars(4),null!=t.id?e+=\"-\"+t.id.toString():e+=\"-\"+n.generateChars(4),e},s}),u.define(\"select2/data/select\",[\"./base\",\"../utils\",\"jquery\"],function(e,a,l){function n(e,t){this.$element=e,this.options=t,n.__super__.constructor.call(this)}return a.Extend(n,e),n.prototype.current=function(e){var t=this;e(Array.prototype.map.call(this.$element[0].querySelectorAll(\":checked\"),function(e){return t.item(l(e))}))},n.prototype.select=function(i){var e,r=this;if(i.selected=!0,null!=i.element&&\"option\"===i.element.tagName.toLowerCase())return i.element.selected=!0,void this.$element.trigger(\"input\").trigger(\"change\");this.$element.prop(\"multiple\")?this.current(function(e){var t=[];(i=[i]).push.apply(i,e);for(var n=0;n<i.length;n++){var s=i[n].id;-1===t.indexOf(s)&&t.push(s)}r.$element.val(t),r.$element.trigger(\"input\").trigger(\"change\")}):(e=i.id,this.$element.val(e),this.$element.trigger(\"input\").trigger(\"change\"))},n.prototype.unselect=function(i){var r=this;if(this.$element.prop(\"multiple\")){if(i.selected=!1,null!=i.element&&\"option\"===i.element.tagName.toLowerCase())return i.element.selected=!1,void this.$element.trigger(\"input\").trigger(\"change\");this.current(function(e){for(var t=[],n=0;n<e.length;n++){var s=e[n].id;s!==i.id&&-1===t.indexOf(s)&&t.push(s)}r.$element.val(t),r.$element.trigger(\"input\").trigger(\"change\")})}},n.prototype.bind=function(e,t){var n=this;(this.container=e).on(\"select\",function(e){n.select(e.data)}),e.on(\"unselect\",function(e){n.unselect(e.data)})},n.prototype.destroy=function(){this.$element.find(\"*\").each(function(){a.RemoveData(this)})},n.prototype.query=function(t,e){var n=[],s=this;this.$element.children().each(function(){var e;\"option\"!==this.tagName.toLowerCase()&&\"optgroup\"!==this.tagName.toLowerCase()||(e=l(this),e=s.item(e),null!==(e=s.matches(t,e))&&n.push(e))}),e({results:n})},n.prototype.addOptions=function(e){this.$element.append(e)},n.prototype.option=function(e){var t;e.children?(t=document.createElement(\"optgroup\")).label=e.text:void 0!==(t=document.createElement(\"option\")).textContent?t.textContent=e.text:t.innerText=e.text,void 0!==e.id&&(t.value=e.id),e.disabled&&(t.disabled=!0),e.selected&&(t.selected=!0),e.title&&(t.title=e.title);e=this._normalizeItem(e);return e.element=t,a.StoreData(t,\"data\",e),l(t)},n.prototype.item=function(e){var t={};if(null!=(t=a.GetData(e[0],\"data\")))return t;var n=e[0];if(\"option\"===n.tagName.toLowerCase())t={id:e.val(),text:e.text(),disabled:e.prop(\"disabled\"),selected:e.prop(\"selected\"),title:e.prop(\"title\")};else if(\"optgroup\"===n.tagName.toLowerCase()){t={text:e.prop(\"label\"),children:[],title:e.prop(\"title\")};for(var s=e.children(\"option\"),i=[],r=0;r<s.length;r++){var o=l(s[r]),o=this.item(o);i.push(o)}t.children=i}return(t=this._normalizeItem(t)).element=e[0],a.StoreData(e[0],\"data\",t),t},n.prototype._normalizeItem=function(e){e!==Object(e)&&(e={id:e,text:e});return null!=(e=l.extend({},{text:\"\"},e)).id&&(e.id=e.id.toString()),null!=e.text&&(e.text=e.text.toString()),null==e._resultId&&e.id&&null!=this.container&&(e._resultId=this.generateResultId(this.container,e)),l.extend({},{selected:!1,disabled:!1},e)},n.prototype.matches=function(e,t){return this.options.get(\"matcher\")(e,t)},n}),u.define(\"select2/data/array\",[\"./select\",\"../utils\",\"jquery\"],function(e,t,c){function s(e,t){this._dataToConvert=t.get(\"data\")||[],s.__super__.constructor.call(this,e,t)}return t.Extend(s,e),s.prototype.bind=function(e,t){s.__super__.bind.call(this,e,t),this.addOptions(this.convertToOptions(this._dataToConvert))},s.prototype.select=function(n){var e=this.$element.find(\"option\").filter(function(e,t){return t.value==n.id.toString()});0===e.length&&(e=this.option(n),this.addOptions(e)),s.__super__.select.call(this,n)},s.prototype.convertToOptions=function(e){var t=this,n=this.$element.find(\"option\"),s=n.map(function(){return t.item(c(this)).id}).get(),i=[];for(var r=0;r<e.length;r++){var o,a,l=this._normalizeItem(e[r]);0<=s.indexOf(l.id)?(o=n.filter(function(e){return function(){return c(this).val()==e.id}}(l)),a=this.item(o),a=c.extend(!0,{},l,a),a=this.option(a),o.replaceWith(a)):(a=this.option(l),l.children&&(l=this.convertToOptions(l.children),a.append(l)),i.push(a))}return i},s}),u.define(\"select2/data/ajax\",[\"./array\",\"../utils\",\"jquery\"],function(e,t,r){function n(e,t){this.ajaxOptions=this._applyDefaults(t.get(\"ajax\")),null!=this.ajaxOptions.processResults&&(this.processResults=this.ajaxOptions.processResults),n.__super__.constructor.call(this,e,t)}return t.Extend(n,e),n.prototype._applyDefaults=function(e){var t={data:function(e){return r.extend({},e,{q:e.term})},transport:function(e,t,n){e=r.ajax(e);return e.then(t),e.fail(n),e}};return r.extend({},t,e,!0)},n.prototype.processResults=function(e){return e},n.prototype.query=function(t,n){var s=this;null!=this._request&&(\"function\"==typeof this._request.abort&&this._request.abort(),this._request=null);var i=r.extend({type:\"GET\"},this.ajaxOptions);function e(){var e=i.transport(i,function(e){e=s.processResults(e,t);s.options.get(\"debug\")&&window.console&&console.error&&(e&&e.results&&Array.isArray(e.results)||console.error(\"Select2: The AJAX results did not return an array in the `results` key of the response.\")),n(e)},function(){\"status\"in e&&(0===e.status||\"0\"===e.status)||s.trigger(\"results:message\",{message:\"errorLoading\"})});s._request=e}\"function\"==typeof i.url&&(i.url=i.url.call(this.$element,t)),\"function\"==typeof i.data&&(i.data=i.data.call(this.$element,t)),this.ajaxOptions.delay&&null!=t.term?(this._queryTimeout&&window.clearTimeout(this._queryTimeout),this._queryTimeout=window.setTimeout(e,this.ajaxOptions.delay)):e()},n}),u.define(\"select2/data/tags\",[\"jquery\"],function(t){function e(e,t,n){var s=n.get(\"tags\"),i=n.get(\"createTag\");void 0!==i&&(this.createTag=i);i=n.get(\"insertTag\");if(void 0!==i&&(this.insertTag=i),e.call(this,t,n),Array.isArray(s))for(var r=0;r<s.length;r++){var o=s[r],o=this._normalizeItem(o),o=this.option(o);this.$element.append(o)}}return e.prototype.query=function(e,c,u){var d=this;this._removeOldTags(),null!=c.term&&null==c.page?e.call(this,c,function e(t,n){for(var s=t.results,i=0;i<s.length;i++){var r=s[i],o=null!=r.children&&!e({results:r.children},!0);if((r.text||\"\").toUpperCase()===(c.term||\"\").toUpperCase()||o)return!n&&(t.data=s,void u(t))}if(n)return!0;var a,l=d.createTag(c);null!=l&&((a=d.option(l)).attr(\"data-select2-tag\",\"true\"),d.addOptions([a]),d.insertTag(s,l)),t.results=s,u(t)}):e.call(this,c,u)},e.prototype.createTag=function(e,t){if(null==t.term)return null;t=t.term.trim();return\"\"===t?null:{id:t,text:t}},e.prototype.insertTag=function(e,t,n){t.unshift(n)},e.prototype._removeOldTags=function(e){this.$element.find(\"option[data-select2-tag]\").each(function(){this.selected||t(this).remove()})},e}),u.define(\"select2/data/tokenizer\",[\"jquery\"],function(c){function e(e,t,n){var s=n.get(\"tokenizer\");void 0!==s&&(this.tokenizer=s),e.call(this,t,n)}return e.prototype.bind=function(e,t,n){e.call(this,t,n),this.$search=t.dropdown.$search||t.selection.$search||n.find(\".select2-search__field\")},e.prototype.query=function(e,t,n){var s=this;t.term=t.term||\"\";var i=this.tokenizer(t,this.options,function(e){var t,n=s._normalizeItem(e);s.$element.find(\"option\").filter(function(){return c(this).val()===n.id}).length||((t=s.option(n)).attr(\"data-select2-tag\",!0),s._removeOldTags(),s.addOptions([t])),t=n,s.trigger(\"select\",{data:t})});i.term!==t.term&&(this.$search.length&&(this.$search.val(i.term),this.$search.trigger(\"focus\")),t.term=i.term),e.call(this,t,n)},e.prototype.tokenizer=function(e,t,n,s){for(var i=n.get(\"tokenSeparators\")||[],r=t.term,o=0,a=this.createTag||function(e){return{id:e.term,text:e.term}};o<r.length;){var l=r[o];-1!==i.indexOf(l)?(l=r.substr(0,o),null!=(l=a(c.extend({},t,{term:l})))?(s(l),r=r.substr(o+1)||\"\",o=0):o++):o++}return{term:r}},e}),u.define(\"select2/data/minimumInputLength\",[],function(){function e(e,t,n){this.minimumInputLength=n.get(\"minimumInputLength\"),e.call(this,t,n)}return e.prototype.query=function(e,t,n){t.term=t.term||\"\",t.term.length<this.minimumInputLength?this.trigger(\"results:message\",{message:\"inputTooShort\",args:{minimum:this.minimumInputLength,input:t.term,params:t}}):e.call(this,t,n)},e}),u.define(\"select2/data/maximumInputLength\",[],function(){function e(e,t,n){this.maximumInputLength=n.get(\"maximumInputLength\"),e.call(this,t,n)}return e.prototype.query=function(e,t,n){t.term=t.term||\"\",0<this.maximumInputLength&&t.term.length>this.maximumInputLength?this.trigger(\"results:message\",{message:\"inputTooLong\",args:{maximum:this.maximumInputLength,input:t.term,params:t}}):e.call(this,t,n)},e}),u.define(\"select2/data/maximumSelectionLength\",[],function(){function e(e,t,n){this.maximumSelectionLength=n.get(\"maximumSelectionLength\"),e.call(this,t,n)}return e.prototype.bind=function(e,t,n){var s=this;e.call(this,t,n),t.on(\"select\",function(){s._checkIfMaximumSelected()})},e.prototype.query=function(e,t,n){var s=this;this._checkIfMaximumSelected(function(){e.call(s,t,n)})},e.prototype._checkIfMaximumSelected=function(e,t){var n=this;this.current(function(e){e=null!=e?e.length:0;0<n.maximumSelectionLength&&e>=n.maximumSelectionLength?n.trigger(\"results:message\",{message:\"maximumSelected\",args:{maximum:n.maximumSelectionLength}}):t&&t()})},e}),u.define(\"select2/dropdown\",[\"jquery\",\"./utils\"],function(t,e){function n(e,t){this.$element=e,this.options=t,n.__super__.constructor.call(this)}return e.Extend(n,e.Observable),n.prototype.render=function(){var e=t('<span class=\"select2-dropdown\"><span class=\"select2-results\"></span></span>');return e.attr(\"dir\",this.options.get(\"dir\")),this.$dropdown=e},n.prototype.bind=function(){},n.prototype.position=function(e,t){},n.prototype.destroy=function(){this.$dropdown.remove()},n}),u.define(\"select2/dropdown/search\",[\"jquery\"],function(r){function e(){}return e.prototype.render=function(e){var t=e.call(this),n=this.options.get(\"translations\").get(\"search\"),e=r('<span class=\"select2-search select2-search--dropdown\"><input class=\"select2-search__field\" type=\"search\" tabindex=\"-1\" autocorrect=\"off\" autocapitalize=\"none\" spellcheck=\"false\" role=\"searchbox\" aria-autocomplete=\"list\" /></span>');return this.$searchContainer=e,this.$search=e.find(\"input\"),this.$search.prop(\"autocomplete\",this.options.get(\"autocomplete\")),this.$search.attr(\"aria-label\",n()),t.prepend(e),t},e.prototype.bind=function(e,t,n){var s=this,i=t.id+\"-results\";e.call(this,t,n),this.$search.on(\"keydown\",function(e){s.trigger(\"keypress\",e),s._keyUpPrevented=e.isDefaultPrevented()}),this.$search.on(\"input\",function(e){r(this).off(\"keyup\")}),this.$search.on(\"keyup input\",function(e){s.handleSearch(e)}),t.on(\"open\",function(){s.$search.attr(\"tabindex\",0),s.$search.attr(\"aria-controls\",i),s.$search.trigger(\"focus\"),window.setTimeout(function(){s.$search.trigger(\"focus\")},0)}),t.on(\"close\",function(){s.$search.attr(\"tabindex\",-1),s.$search.removeAttr(\"aria-controls\"),s.$search.removeAttr(\"aria-activedescendant\"),s.$search.val(\"\"),s.$search.trigger(\"blur\")}),t.on(\"focus\",function(){t.isOpen()||s.$search.trigger(\"focus\")}),t.on(\"results:all\",function(e){null!=e.query.term&&\"\"!==e.query.term||(s.showSearch(e)?s.$searchContainer[0].classList.remove(\"select2-search--hide\"):s.$searchContainer[0].classList.add(\"select2-search--hide\"))}),t.on(\"results:focus\",function(e){e.data._resultId?s.$search.attr(\"aria-activedescendant\",e.data._resultId):s.$search.removeAttr(\"aria-activedescendant\")})},e.prototype.handleSearch=function(e){var t;this._keyUpPrevented||(t=this.$search.val(),this.trigger(\"query\",{term:t})),this._keyUpPrevented=!1},e.prototype.showSearch=function(e,t){return!0},e}),u.define(\"select2/dropdown/hidePlaceholder\",[],function(){function e(e,t,n,s){this.placeholder=this.normalizePlaceholder(n.get(\"placeholder\")),e.call(this,t,n,s)}return e.prototype.append=function(e,t){t.results=this.removePlaceholder(t.results),e.call(this,t)},e.prototype.normalizePlaceholder=function(e,t){return t=\"string\"==typeof t?{id:\"\",text:t}:t},e.prototype.removePlaceholder=function(e,t){for(var n=t.slice(0),s=t.length-1;0<=s;s--){var i=t[s];this.placeholder.id===i.id&&n.splice(s,1)}return n},e}),u.define(\"select2/dropdown/infiniteScroll\",[\"jquery\"],function(n){function e(e,t,n,s){this.lastParams={},e.call(this,t,n,s),this.$loadingMore=this.createLoadingMore(),this.loading=!1}return e.prototype.append=function(e,t){this.$loadingMore.remove(),this.loading=!1,e.call(this,t),this.showLoadingMore(t)&&(this.$results.append(this.$loadingMore),this.loadMoreIfNeeded())},e.prototype.bind=function(e,t,n){var s=this;e.call(this,t,n),t.on(\"query\",function(e){s.lastParams=e,s.loading=!0}),t.on(\"query:append\",function(e){s.lastParams=e,s.loading=!0}),this.$results.on(\"scroll\",this.loadMoreIfNeeded.bind(this))},e.prototype.loadMoreIfNeeded=function(){var e=n.contains(document.documentElement,this.$loadingMore[0]);!this.loading&&e&&(e=this.$results.offset().top+this.$results.outerHeight(!1),this.$loadingMore.offset().top+this.$loadingMore.outerHeight(!1)<=e+50&&this.loadMore())},e.prototype.loadMore=function(){this.loading=!0;var e=n.extend({},{page:1},this.lastParams);e.page++,this.trigger(\"query:append\",e)},e.prototype.showLoadingMore=function(e,t){return t.pagination&&t.pagination.more},e.prototype.createLoadingMore=function(){var e=n('<li class=\"select2-results__option select2-results__option--load-more\"role=\"option\" aria-disabled=\"true\"></li>'),t=this.options.get(\"translations\").get(\"loadingMore\");return e.html(t(this.lastParams)),e},e}),u.define(\"select2/dropdown/attachBody\",[\"jquery\",\"../utils\"],function(u,o){function e(e,t,n){this.$dropdownParent=u(n.get(\"dropdownParent\")||document.body),e.call(this,t,n)}return e.prototype.bind=function(e,t,n){var s=this;e.call(this,t,n),t.on(\"open\",function(){s._showDropdown(),s._attachPositioningHandler(t),s._bindContainerResultHandlers(t)}),t.on(\"close\",function(){s._hideDropdown(),s._detachPositioningHandler(t)}),this.$dropdownContainer.on(\"mousedown\",function(e){e.stopPropagation()})},e.prototype.destroy=function(e){e.call(this),this.$dropdownContainer.remove()},e.prototype.position=function(e,t,n){t.attr(\"class\",n.attr(\"class\")),t[0].classList.remove(\"select2\"),t[0].classList.add(\"select2-container--open\"),t.css({position:\"absolute\",top:-999999}),this.$container=n},e.prototype.render=function(e){var t=u(\"<span></span>\"),e=e.call(this);return t.append(e),this.$dropdownContainer=t},e.prototype._hideDropdown=function(e){this.$dropdownContainer.detach()},e.prototype._bindContainerResultHandlers=function(e,t){var n;this._containerResultsHandlersBound||(n=this,t.on(\"results:all\",function(){n._positionDropdown(),n._resizeDropdown()}),t.on(\"results:append\",function(){n._positionDropdown(),n._resizeDropdown()}),t.on(\"results:message\",function(){n._positionDropdown(),n._resizeDropdown()}),t.on(\"select\",function(){n._positionDropdown(),n._resizeDropdown()}),t.on(\"unselect\",function(){n._positionDropdown(),n._resizeDropdown()}),this._containerResultsHandlersBound=!0)},e.prototype._attachPositioningHandler=function(e,t){var n=this,s=\"scroll.select2.\"+t.id,i=\"resize.select2.\"+t.id,r=\"orientationchange.select2.\"+t.id,t=this.$container.parents().filter(o.hasScroll);t.each(function(){o.StoreData(this,\"select2-scroll-position\",{x:u(this).scrollLeft(),y:u(this).scrollTop()})}),t.on(s,function(e){var t=o.GetData(this,\"select2-scroll-position\");u(this).scrollTop(t.y)}),u(window).on(s+\" \"+i+\" \"+r,function(e){n._positionDropdown(),n._resizeDropdown()})},e.prototype._detachPositioningHandler=function(e,t){var n=\"scroll.select2.\"+t.id,s=\"resize.select2.\"+t.id,t=\"orientationchange.select2.\"+t.id;this.$container.parents().filter(o.hasScroll).off(n),u(window).off(n+\" \"+s+\" \"+t)},e.prototype._positionDropdown=function(){var e=u(window),t=this.$dropdown[0].classList.contains(\"select2-dropdown--above\"),n=this.$dropdown[0].classList.contains(\"select2-dropdown--below\"),s=null,i=this.$container.offset();i.bottom=i.top+this.$container.outerHeight(!1);var r={height:this.$container.outerHeight(!1)};r.top=i.top,r.bottom=i.top+r.height;var o=this.$dropdown.outerHeight(!1),a=e.scrollTop(),l=e.scrollTop()+e.height(),c=a<i.top-o,e=l>i.bottom+o,a={left:i.left,top:r.bottom},l=this.$dropdownParent;\"static\"===l.css(\"position\")&&(l=l.offsetParent());i={top:0,left:0};(u.contains(document.body,l[0])||l[0].isConnected)&&(i=l.offset()),a.top-=i.top,a.left-=i.left,t||n||(s=\"below\"),e||!c||t?!c&&e&&t&&(s=\"below\"):s=\"above\",(\"above\"==s||t&&\"below\"!==s)&&(a.top=r.top-i.top-o),null!=s&&(this.$dropdown[0].classList.remove(\"select2-dropdown--below\"),this.$dropdown[0].classList.remove(\"select2-dropdown--above\"),this.$dropdown[0].classList.add(\"select2-dropdown--\"+s),this.$container[0].classList.remove(\"select2-container--below\"),this.$container[0].classList.remove(\"select2-container--above\"),this.$container[0].classList.add(\"select2-container--\"+s)),this.$dropdownContainer.css(a)},e.prototype._resizeDropdown=function(){var e={width:this.$container.outerWidth(!1)+\"px\"};this.options.get(\"dropdownAutoWidth\")&&(e.minWidth=e.width,e.position=\"relative\",e.width=\"auto\"),this.$dropdown.css(e)},e.prototype._showDropdown=function(e){this.$dropdownContainer.appendTo(this.$dropdownParent),this._positionDropdown(),this._resizeDropdown()},e}),u.define(\"select2/dropdown/minimumResultsForSearch\",[],function(){function e(e,t,n,s){this.minimumResultsForSearch=n.get(\"minimumResultsForSearch\"),this.minimumResultsForSearch<0&&(this.minimumResultsForSearch=1/0),e.call(this,t,n,s)}return e.prototype.showSearch=function(e,t){return!(function e(t){for(var n=0,s=0;s<t.length;s++){var i=t[s];i.children?n+=e(i.children):n++}return n}(t.data.results)<this.minimumResultsForSearch)&&e.call(this,t)},e}),u.define(\"select2/dropdown/selectOnClose\",[\"../utils\"],function(s){function e(){}return e.prototype.bind=function(e,t,n){var s=this;e.call(this,t,n),t.on(\"close\",function(e){s._handleSelectOnClose(e)})},e.prototype._handleSelectOnClose=function(e,t){if(t&&null!=t.originalSelect2Event){var n=t.originalSelect2Event;if(\"select\"===n._type||\"unselect\"===n._type)return}n=this.getHighlightedResults();n.length<1||(null!=(n=s.GetData(n[0],\"data\")).element&&n.element.selected||null==n.element&&n.selected||this.trigger(\"select\",{data:n}))},e}),u.define(\"select2/dropdown/closeOnSelect\",[],function(){function e(){}return e.prototype.bind=function(e,t,n){var s=this;e.call(this,t,n),t.on(\"select\",function(e){s._selectTriggered(e)}),t.on(\"unselect\",function(e){s._selectTriggered(e)})},e.prototype._selectTriggered=function(e,t){var n=t.originalEvent;n&&(n.ctrlKey||n.metaKey)||this.trigger(\"close\",{originalEvent:n,originalSelect2Event:t})},e}),u.define(\"select2/dropdown/dropdownCss\",[\"../utils\"],function(n){function e(){}return e.prototype.render=function(e){var t=e.call(this),e=this.options.get(\"dropdownCssClass\")||\"\";return-1!==e.indexOf(\":all:\")&&(e=e.replace(\":all:\",\"\"),n.copyNonInternalCssClasses(t[0],this.$element[0])),t.addClass(e),t},e}),u.define(\"select2/dropdown/tagsSearchHighlight\",[\"../utils\"],function(s){function e(){}return e.prototype.highlightFirstItem=function(e){var t=this.$results.find(\".select2-results__option--selectable:not(.select2-results__option--selected)\");if(0<t.length){var n=t.first(),t=s.GetData(n[0],\"data\").element;if(t&&t.getAttribute&&\"true\"===t.getAttribute(\"data-select2-tag\"))return void n.trigger(\"mouseenter\")}e.call(this)},e}),u.define(\"select2/i18n/en\",[],function(){return{errorLoading:function(){return\"The results could not be loaded.\"},inputTooLong:function(e){var t=e.input.length-e.maximum,e=\"Please delete \"+t+\" character\";return 1!=t&&(e+=\"s\"),e},inputTooShort:function(e){return\"Please enter \"+(e.minimum-e.input.length)+\" or more characters\"},loadingMore:function(){return\"Loading more results…\"},maximumSelected:function(e){var t=\"You can only select \"+e.maximum+\" item\";return 1!=e.maximum&&(t+=\"s\"),t},noResults:function(){return\"No results found\"},searching:function(){return\"Searching…\"},removeAllItems:function(){return\"Remove all items\"},removeItem:function(){return\"Remove item\"},search:function(){return\"Search\"}}}),u.define(\"select2/defaults\",[\"jquery\",\"./results\",\"./selection/single\",\"./selection/multiple\",\"./selection/placeholder\",\"./selection/allowClear\",\"./selection/search\",\"./selection/selectionCss\",\"./selection/eventRelay\",\"./utils\",\"./translation\",\"./diacritics\",\"./data/select\",\"./data/array\",\"./data/ajax\",\"./data/tags\",\"./data/tokenizer\",\"./data/minimumInputLength\",\"./data/maximumInputLength\",\"./data/maximumSelectionLength\",\"./dropdown\",\"./dropdown/search\",\"./dropdown/hidePlaceholder\",\"./dropdown/infiniteScroll\",\"./dropdown/attachBody\",\"./dropdown/minimumResultsForSearch\",\"./dropdown/selectOnClose\",\"./dropdown/closeOnSelect\",\"./dropdown/dropdownCss\",\"./dropdown/tagsSearchHighlight\",\"./i18n/en\"],function(l,r,o,a,c,u,d,p,h,f,g,t,m,y,v,_,b,$,w,x,A,D,S,E,O,C,L,T,q,I,e){function n(){this.reset()}return n.prototype.apply=function(e){var t;null==(e=l.extend(!0,{},this.defaults,e)).dataAdapter&&(null!=e.ajax?e.dataAdapter=v:null!=e.data?e.dataAdapter=y:e.dataAdapter=m,0<e.minimumInputLength&&(e.dataAdapter=f.Decorate(e.dataAdapter,$)),0<e.maximumInputLength&&(e.dataAdapter=f.Decorate(e.dataAdapter,w)),0<e.maximumSelectionLength&&(e.dataAdapter=f.Decorate(e.dataAdapter,x)),e.tags&&(e.dataAdapter=f.Decorate(e.dataAdapter,_)),null==e.tokenSeparators&&null==e.tokenizer||(e.dataAdapter=f.Decorate(e.dataAdapter,b))),null==e.resultsAdapter&&(e.resultsAdapter=r,null!=e.ajax&&(e.resultsAdapter=f.Decorate(e.resultsAdapter,E)),null!=e.placeholder&&(e.resultsAdapter=f.Decorate(e.resultsAdapter,S)),e.selectOnClose&&(e.resultsAdapter=f.Decorate(e.resultsAdapter,L)),e.tags&&(e.resultsAdapter=f.Decorate(e.resultsAdapter,I))),null==e.dropdownAdapter&&(e.multiple?e.dropdownAdapter=A:(t=f.Decorate(A,D),e.dropdownAdapter=t),0!==e.minimumResultsForSearch&&(e.dropdownAdapter=f.Decorate(e.dropdownAdapter,C)),e.closeOnSelect&&(e.dropdownAdapter=f.Decorate(e.dropdownAdapter,T)),null!=e.dropdownCssClass&&(e.dropdownAdapter=f.Decorate(e.dropdownAdapter,q)),e.dropdownAdapter=f.Decorate(e.dropdownAdapter,O)),null==e.selectionAdapter&&(e.multiple?e.selectionAdapter=a:e.selectionAdapter=o,null!=e.placeholder&&(e.selectionAdapter=f.Decorate(e.selectionAdapter,c)),e.allowClear&&(e.selectionAdapter=f.Decorate(e.selectionAdapter,u)),e.multiple&&(e.selectionAdapter=f.Decorate(e.selectionAdapter,d)),null!=e.selectionCssClass&&(e.selectionAdapter=f.Decorate(e.selectionAdapter,p)),e.selectionAdapter=f.Decorate(e.selectionAdapter,h)),e.language=this._resolveLanguage(e.language),e.language.push(\"en\");for(var n=[],s=0;s<e.language.length;s++){var i=e.language[s];-1===n.indexOf(i)&&n.push(i)}return e.language=n,e.translations=this._processTranslations(e.language,e.debug),e},n.prototype.reset=function(){function a(e){return e.replace(/[^\\u0000-\\u007E]/g,function(e){return t[e]||e})}this.defaults={amdLanguageBase:\"./i18n/\",autocomplete:\"off\",closeOnSelect:!0,debug:!1,dropdownAutoWidth:!1,escapeMarkup:f.escapeMarkup,language:{},matcher:function e(t,n){if(null==t.term||\"\"===t.term.trim())return n;if(n.children&&0<n.children.length){for(var s=l.extend(!0,{},n),i=n.children.length-1;0<=i;i--)null==e(t,n.children[i])&&s.children.splice(i,1);return 0<s.children.length?s:e(t,s)}var r=a(n.text).toUpperCase(),o=a(t.term).toUpperCase();return-1<r.indexOf(o)?n:null},minimumInputLength:0,maximumInputLength:0,maximumSelectionLength:0,minimumResultsForSearch:0,selectOnClose:!1,scrollAfterSelect:!1,sorter:function(e){return e},templateResult:function(e){return e.text},templateSelection:function(e){return e.text},theme:\"default\",width:\"resolve\"}},n.prototype.applyFromElement=function(e,t){var n=e.language,s=this.defaults.language,i=t.prop(\"lang\"),t=t.closest(\"[lang]\").prop(\"lang\"),t=Array.prototype.concat.call(this._resolveLanguage(i),this._resolveLanguage(n),this._resolveLanguage(s),this._resolveLanguage(t));return e.language=t,e},n.prototype._resolveLanguage=function(e){if(!e)return[];if(l.isEmptyObject(e))return[];if(l.isPlainObject(e))return[e];for(var t,n=Array.isArray(e)?e:[e],s=[],i=0;i<n.length;i++)s.push(n[i]),\"string\"==typeof n[i]&&0<n[i].indexOf(\"-\")&&(t=n[i].split(\"-\")[0],s.push(t));return s},n.prototype._processTranslations=function(e,t){for(var n=new g,s=0;s<e.length;s++){var i=new g,r=e[s];if(\"string\"==typeof r)try{i=g.loadPath(r)}catch(e){try{r=this.defaults.amdLanguageBase+r,i=g.loadPath(r)}catch(e){t&&window.console&&console.warn&&console.warn('Select2: The language file for \"'+r+'\" could not be automatically loaded. A fallback will be used instead.')}}else i=l.isPlainObject(r)?new g(r):r;n.extend(i)}return n},n.prototype.set=function(e,t){var n={};n[l.camelCase(e)]=t;n=f._convertData(n);l.extend(!0,this.defaults,n)},new n}),u.define(\"select2/options\",[\"jquery\",\"./defaults\",\"./utils\"],function(c,n,u){function e(e,t){this.options=e,null!=t&&this.fromElement(t),null!=t&&(this.options=n.applyFromElement(this.options,t)),this.options=n.apply(this.options)}return e.prototype.fromElement=function(e){var t=[\"select2\"];null==this.options.multiple&&(this.options.multiple=e.prop(\"multiple\")),null==this.options.disabled&&(this.options.disabled=e.prop(\"disabled\")),null==this.options.autocomplete&&e.prop(\"autocomplete\")&&(this.options.autocomplete=e.prop(\"autocomplete\")),null==this.options.dir&&(e.prop(\"dir\")?this.options.dir=e.prop(\"dir\"):e.closest(\"[dir]\").prop(\"dir\")?this.options.dir=e.closest(\"[dir]\").prop(\"dir\"):this.options.dir=\"ltr\"),e.prop(\"disabled\",this.options.disabled),e.prop(\"multiple\",this.options.multiple),u.GetData(e[0],\"select2Tags\")&&(this.options.debug&&window.console&&console.warn&&console.warn('Select2: The `data-select2-tags` attribute has been changed to use the `data-data` and `data-tags=\"true\"` attributes and will be removed in future versions of Select2.'),u.StoreData(e[0],\"data\",u.GetData(e[0],\"select2Tags\")),u.StoreData(e[0],\"tags\",!0)),u.GetData(e[0],\"ajaxUrl\")&&(this.options.debug&&window.console&&console.warn&&console.warn(\"Select2: The `data-ajax-url` attribute has been changed to `data-ajax--url` and support for the old attribute will be removed in future versions of Select2.\"),e.attr(\"ajax--url\",u.GetData(e[0],\"ajaxUrl\")),u.StoreData(e[0],\"ajax-Url\",u.GetData(e[0],\"ajaxUrl\")));var n={};function s(e,t){return t.toUpperCase()}for(var i=0;i<e[0].attributes.length;i++){var r=e[0].attributes[i].name,o=\"data-\";r.substr(0,o.length)==o&&(r=r.substring(o.length),o=u.GetData(e[0],r),n[r.replace(/-([a-z])/g,s)]=o)}c.fn.jquery&&\"1.\"==c.fn.jquery.substr(0,2)&&e[0].dataset&&(n=c.extend(!0,{},e[0].dataset,n));var a,l=c.extend(!0,{},u.GetData(e[0]),n);for(a in l=u._convertData(l))-1<t.indexOf(a)||(c.isPlainObject(this.options[a])?c.extend(this.options[a],l[a]):this.options[a]=l[a]);return this},e.prototype.get=function(e){return this.options[e]},e.prototype.set=function(e,t){this.options[e]=t},e}),u.define(\"select2/core\",[\"jquery\",\"./options\",\"./utils\",\"./keys\"],function(t,i,r,s){var o=function(e,t){null!=r.GetData(e[0],\"select2\")&&r.GetData(e[0],\"select2\").destroy(),this.$element=e,this.id=this._generateId(e),t=t||{},this.options=new i(t,e),o.__super__.constructor.call(this);var n=e.attr(\"tabindex\")||0;r.StoreData(e[0],\"old-tabindex\",n),e.attr(\"tabindex\",\"-1\");t=this.options.get(\"dataAdapter\");this.dataAdapter=new t(e,this.options);n=this.render();this._placeContainer(n);t=this.options.get(\"selectionAdapter\");this.selection=new t(e,this.options),this.$selection=this.selection.render(),this.selection.position(this.$selection,n);t=this.options.get(\"dropdownAdapter\");this.dropdown=new t(e,this.options),this.$dropdown=this.dropdown.render(),this.dropdown.position(this.$dropdown,n);n=this.options.get(\"resultsAdapter\");this.results=new n(e,this.options,this.dataAdapter),this.$results=this.results.render(),this.results.position(this.$results,this.$dropdown);var s=this;this._bindAdapters(),this._registerDomEvents(),this._registerDataEvents(),this._registerSelectionEvents(),this._registerDropdownEvents(),this._registerResultsEvents(),this._registerEvents(),this.dataAdapter.current(function(e){s.trigger(\"selection:update\",{data:e})}),e[0].classList.add(\"select2-hidden-accessible\"),e.attr(\"aria-hidden\",\"true\"),this._syncAttributes(),r.StoreData(e[0],\"select2\",this),e.data(\"select2\",this)};return r.Extend(o,r.Observable),o.prototype._generateId=function(e){return\"select2-\"+(null!=e.attr(\"id\")?e.attr(\"id\"):null!=e.attr(\"name\")?e.attr(\"name\")+\"-\"+r.generateChars(2):r.generateChars(4)).replace(/(:|\\.|\\[|\\]|,)/g,\"\")},o.prototype._placeContainer=function(e){e.insertAfter(this.$element);var t=this._resolveWidth(this.$element,this.options.get(\"width\"));null!=t&&e.css(\"width\",t)},o.prototype._resolveWidth=function(e,t){var n=/^width:(([-+]?([0-9]*\\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i;if(\"resolve\"==t){var s=this._resolveWidth(e,\"style\");return null!=s?s:this._resolveWidth(e,\"element\")}if(\"element\"==t){s=e.outerWidth(!1);return s<=0?\"auto\":s+\"px\"}if(\"style\"!=t)return\"computedstyle\"!=t?t:window.getComputedStyle(e[0]).width;e=e.attr(\"style\");if(\"string\"!=typeof e)return null;for(var i=e.split(\";\"),r=0,o=i.length;r<o;r+=1){var a=i[r].replace(/\\s/g,\"\").match(n);if(null!==a&&1<=a.length)return a[1]}return null},o.prototype._bindAdapters=function(){this.dataAdapter.bind(this,this.$container),this.selection.bind(this,this.$container),this.dropdown.bind(this,this.$container),this.results.bind(this,this.$container)},o.prototype._registerDomEvents=function(){var t=this;this.$element.on(\"change.select2\",function(){t.dataAdapter.current(function(e){t.trigger(\"selection:update\",{data:e})})}),this.$element.on(\"focus.select2\",function(e){t.trigger(\"focus\",e)}),this._syncA=r.bind(this._syncAttributes,this),this._syncS=r.bind(this._syncSubtree,this),this._observer=new window.MutationObserver(function(e){t._syncA(),t._syncS(e)}),this._observer.observe(this.$element[0],{attributes:!0,childList:!0,subtree:!1})},o.prototype._registerDataEvents=function(){var n=this;this.dataAdapter.on(\"*\",function(e,t){n.trigger(e,t)})},o.prototype._registerSelectionEvents=function(){var n=this,s=[\"toggle\",\"focus\"];this.selection.on(\"toggle\",function(){n.toggleDropdown()}),this.selection.on(\"focus\",function(e){n.focus(e)}),this.selection.on(\"*\",function(e,t){-1===s.indexOf(e)&&n.trigger(e,t)})},o.prototype._registerDropdownEvents=function(){var n=this;this.dropdown.on(\"*\",function(e,t){n.trigger(e,t)})},o.prototype._registerResultsEvents=function(){var n=this;this.results.on(\"*\",function(e,t){n.trigger(e,t)})},o.prototype._registerEvents=function(){var n=this;this.on(\"open\",function(){n.$container[0].classList.add(\"select2-container--open\")}),this.on(\"close\",function(){n.$container[0].classList.remove(\"select2-container--open\")}),this.on(\"enable\",function(){n.$container[0].classList.remove(\"select2-container--disabled\")}),this.on(\"disable\",function(){n.$container[0].classList.add(\"select2-container--disabled\")}),this.on(\"blur\",function(){n.$container[0].classList.remove(\"select2-container--focus\")}),this.on(\"query\",function(t){n.isOpen()||n.trigger(\"open\",{}),this.dataAdapter.query(t,function(e){n.trigger(\"results:all\",{data:e,query:t})})}),this.on(\"query:append\",function(t){this.dataAdapter.query(t,function(e){n.trigger(\"results:append\",{data:e,query:t})})}),this.on(\"keypress\",function(e){var t=e.which;n.isOpen()?t===s.ESC||t===s.UP&&e.altKey?(n.close(e),e.preventDefault()):t===s.ENTER||t===s.TAB?(n.trigger(\"results:select\",{}),e.preventDefault()):t===s.SPACE&&e.ctrlKey?(n.trigger(\"results:toggle\",{}),e.preventDefault()):t===s.UP?(n.trigger(\"results:previous\",{}),e.preventDefault()):t===s.DOWN&&(n.trigger(\"results:next\",{}),e.preventDefault()):(t===s.ENTER||t===s.SPACE||t===s.DOWN&&e.altKey)&&(n.open(),e.preventDefault())})},o.prototype._syncAttributes=function(){this.options.set(\"disabled\",this.$element.prop(\"disabled\")),this.isDisabled()?(this.isOpen()&&this.close(),this.trigger(\"disable\",{})):this.trigger(\"enable\",{})},o.prototype._isChangeMutation=function(e){var t=this;if(e.addedNodes&&0<e.addedNodes.length){for(var n=0;n<e.addedNodes.length;n++)if(e.addedNodes[n].selected)return!0}else{if(e.removedNodes&&0<e.removedNodes.length)return!0;if(Array.isArray(e))return e.some(function(e){return t._isChangeMutation(e)})}return!1},o.prototype._syncSubtree=function(e){var e=this._isChangeMutation(e),t=this;e&&this.dataAdapter.current(function(e){t.trigger(\"selection:update\",{data:e})})},o.prototype.trigger=function(e,t){var n=o.__super__.trigger,s={open:\"opening\",close:\"closing\",select:\"selecting\",unselect:\"unselecting\",clear:\"clearing\"};if(void 0===t&&(t={}),e in s){var i=s[e],s={prevented:!1,name:e,args:t};if(n.call(this,i,s),s.prevented)return void(t.prevented=!0)}n.call(this,e,t)},o.prototype.toggleDropdown=function(){this.isDisabled()||(this.isOpen()?this.close():this.open())},o.prototype.open=function(){this.isOpen()||this.isDisabled()||this.trigger(\"query\",{})},o.prototype.close=function(e){this.isOpen()&&this.trigger(\"close\",{originalEvent:e})},o.prototype.isEnabled=function(){return!this.isDisabled()},o.prototype.isDisabled=function(){return this.options.get(\"disabled\")},o.prototype.isOpen=function(){return this.$container[0].classList.contains(\"select2-container--open\")},o.prototype.hasFocus=function(){return this.$container[0].classList.contains(\"select2-container--focus\")},o.prototype.focus=function(e){this.hasFocus()||(this.$container[0].classList.add(\"select2-container--focus\"),this.trigger(\"focus\",{}))},o.prototype.enable=function(e){this.options.get(\"debug\")&&window.console&&console.warn&&console.warn('Select2: The `select2(\"enable\")` method has been deprecated and will be removed in later Select2 versions. Use $element.prop(\"disabled\") instead.');e=!(e=null==e||0===e.length?[!0]:e)[0];this.$element.prop(\"disabled\",e)},o.prototype.data=function(){this.options.get(\"debug\")&&0<arguments.length&&window.console&&console.warn&&console.warn('Select2: Data can no longer be set using `select2(\"data\")`. You should consider setting the value instead using `$element.val()`.');var t=[];return this.dataAdapter.current(function(e){t=e}),t},o.prototype.val=function(e){if(this.options.get(\"debug\")&&window.console&&console.warn&&console.warn('Select2: The `select2(\"val\")` method has been deprecated and will be removed in later Select2 versions. Use $element.val() instead.'),null==e||0===e.length)return this.$element.val();e=e[0];Array.isArray(e)&&(e=e.map(function(e){return e.toString()})),this.$element.val(e).trigger(\"input\").trigger(\"change\")},o.prototype.destroy=function(){r.RemoveData(this.$container[0]),this.$container.remove(),this._observer.disconnect(),this._observer=null,this._syncA=null,this._syncS=null,this.$element.off(\".select2\"),this.$element.attr(\"tabindex\",r.GetData(this.$element[0],\"old-tabindex\")),this.$element[0].classList.remove(\"select2-hidden-accessible\"),this.$element.attr(\"aria-hidden\",\"false\"),r.RemoveData(this.$element[0]),this.$element.removeData(\"select2\"),this.dataAdapter.destroy(),this.selection.destroy(),this.dropdown.destroy(),this.results.destroy(),this.dataAdapter=null,this.selection=null,this.dropdown=null,this.results=null},o.prototype.render=function(){var e=t('<span class=\"select2 select2-container\"><span class=\"selection\"></span><span class=\"dropdown-wrapper\" aria-hidden=\"true\"></span></span>');return e.attr(\"dir\",this.options.get(\"dir\")),this.$container=e,this.$container[0].classList.add(\"select2-container--\"+this.options.get(\"theme\")),r.StoreData(e[0],\"element\",this.$element),e},o}),u.define(\"jquery-mousewheel\",[\"jquery\"],function(e){return e}),u.define(\"jquery.select2\",[\"jquery\",\"jquery-mousewheel\",\"./select2/core\",\"./select2/defaults\",\"./select2/utils\"],function(i,e,r,t,o){var a;return null==i.fn.select2&&(a=[\"open\",\"close\",\"destroy\"],i.fn.select2=function(t){if(\"object\"==typeof(t=t||{}))return this.each(function(){var e=i.extend(!0,{},t);new r(i(this),e)}),this;if(\"string\"!=typeof t)throw new Error(\"Invalid arguments for Select2: \"+t);var n,s=Array.prototype.slice.call(arguments,1);return this.each(function(){var e=o.GetData(this,\"select2\");null==e&&window.console&&console.error&&console.error(\"The select2('\"+t+\"') method was called on an element that is not using Select2.\"),n=e[t].apply(e,s)}),-1<a.indexOf(t)?this:n}),null==i.fn.select2.defaults&&(i.fn.select2.defaults=t),r}),{define:u.define,require:u.require});function b(e,t){return i.call(e,t)}function l(e,t){var n,s,i,r,o,a,l,c,u,d,p=t&&t.split(\"/\"),h=y.map,f=h&&h[\"*\"]||{};if(e){for(t=(e=e.split(\"/\")).length-1,y.nodeIdCompat&&_.test(e[t])&&(e[t]=e[t].replace(_,\"\")),\".\"===e[0].charAt(0)&&p&&(e=p.slice(0,p.length-1).concat(e)),c=0;c<e.length;c++)\".\"===(d=e[c])?(e.splice(c,1),--c):\"..\"===d&&(0===c||1===c&&\"..\"===e[2]||\"..\"===e[c-1]||0<c&&(e.splice(c-1,2),c-=2));e=e.join(\"/\")}if((p||f)&&h){for(c=(n=e.split(\"/\")).length;0<c;--c){if(s=n.slice(0,c).join(\"/\"),p)for(u=p.length;0<u;--u)if(i=h[p.slice(0,u).join(\"/\")],i=i&&i[s]){r=i,o=c;break}if(r)break;!a&&f&&f[s]&&(a=f[s],l=c)}!r&&a&&(r=a,o=l),r&&(n.splice(0,o,r),e=n.join(\"/\"))}return e}function w(t,n){return function(){var e=a.call(arguments,0);return\"string\"!=typeof e[0]&&1===e.length&&e.push(null),o.apply(p,e.concat([t,n]))}}function x(e){var t;if(b(m,e)&&(t=m[e],delete m[e],v[e]=!0,r.apply(p,t)),!b(g,e)&&!b(v,e))throw new Error(\"No \"+e);return g[e]}function c(e){var t,n=e?e.indexOf(\"!\"):-1;return-1<n&&(t=e.substring(0,n),e=e.substring(n+1,e.length)),[t,e]}function A(e){return e?c(e):[]}var u=s.require(\"jquery.select2\");return t.fn.select2.amd=s,u});\r\n(function (global, factory) {\r\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\r\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\r\n\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.IMask = {}));\r\n})(this, (function (exports) { 'use strict';\r\n\r\n\tvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\r\n\r\n\tvar check = function (it) {\r\n\t  return it && it.Math == Math && it;\r\n\t}; // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\r\n\r\n\r\n\tvar global$p = // eslint-disable-next-line es/no-global-this -- safe\r\n\tcheck(typeof globalThis == 'object' && globalThis) || check(typeof window == 'object' && window) || // eslint-disable-next-line no-restricted-globals -- safe\r\n\tcheck(typeof self == 'object' && self) || check(typeof commonjsGlobal == 'object' && commonjsGlobal) || // eslint-disable-next-line no-new-func -- fallback\r\n\tfunction () {\r\n\t  return this;\r\n\t}() || Function('return this')();\r\n\r\n\tvar objectGetOwnPropertyDescriptor = {};\r\n\r\n\tvar fails$8 = function (exec) {\r\n\t  try {\r\n\t    return !!exec();\r\n\t  } catch (error) {\r\n\t    return true;\r\n\t  }\r\n\t};\r\n\r\n\tvar fails$7 = fails$8; // Detect IE8's incomplete defineProperty implementation\r\n\r\n\r\n\tvar descriptors = !fails$7(function () {\r\n\t  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\r\n\t  return Object.defineProperty({}, 1, {\r\n\t    get: function () {\r\n\t      return 7;\r\n\t    }\r\n\t  })[1] != 7;\r\n\t});\r\n\r\n\tvar fails$6 = fails$8;\r\n\r\n\tvar functionBindNative = !fails$6(function () {\r\n\t  var test = function () {\r\n\t    /* empty */\r\n\t  }.bind(); // eslint-disable-next-line no-prototype-builtins -- safe\r\n\r\n\r\n\t  return typeof test != 'function' || test.hasOwnProperty('prototype');\r\n\t});\r\n\r\n\tvar NATIVE_BIND$1 = functionBindNative;\r\n\r\n\tvar call$5 = Function.prototype.call;\r\n\tvar functionCall = NATIVE_BIND$1 ? call$5.bind(call$5) : function () {\r\n\t  return call$5.apply(call$5, arguments);\r\n\t};\r\n\r\n\tvar objectPropertyIsEnumerable = {};\r\n\r\n\tvar $propertyIsEnumerable = {}.propertyIsEnumerable; // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\r\n\r\n\tvar getOwnPropertyDescriptor$1 = Object.getOwnPropertyDescriptor; // Nashorn ~ JDK8 bug\r\n\r\n\tvar NASHORN_BUG = getOwnPropertyDescriptor$1 && !$propertyIsEnumerable.call({\r\n\t  1: 2\r\n\t}, 1); // `Object.prototype.propertyIsEnumerable` method implementation\r\n\t// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\r\n\r\n\tobjectPropertyIsEnumerable.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\r\n\t  var descriptor = getOwnPropertyDescriptor$1(this, V);\r\n\t  return !!descriptor && descriptor.enumerable;\r\n\t} : $propertyIsEnumerable;\r\n\r\n\tvar createPropertyDescriptor$2 = function (bitmap, value) {\r\n\t  return {\r\n\t    enumerable: !(bitmap & 1),\r\n\t    configurable: !(bitmap & 2),\r\n\t    writable: !(bitmap & 4),\r\n\t    value: value\r\n\t  };\r\n\t};\r\n\r\n\tvar NATIVE_BIND = functionBindNative;\r\n\r\n\tvar FunctionPrototype$1 = Function.prototype;\r\n\tvar bind = FunctionPrototype$1.bind;\r\n\tvar call$4 = FunctionPrototype$1.call;\r\n\tvar uncurryThis$b = NATIVE_BIND && bind.bind(call$4, call$4);\r\n\tvar functionUncurryThis = NATIVE_BIND ? function (fn) {\r\n\t  return fn && uncurryThis$b(fn);\r\n\t} : function (fn) {\r\n\t  return fn && function () {\r\n\t    return call$4.apply(fn, arguments);\r\n\t  };\r\n\t};\r\n\r\n\tvar uncurryThis$a = functionUncurryThis;\r\n\r\n\tvar toString$4 = uncurryThis$a({}.toString);\r\n\tvar stringSlice$1 = uncurryThis$a(''.slice);\r\n\r\n\tvar classofRaw$1 = function (it) {\r\n\t  return stringSlice$1(toString$4(it), 8, -1);\r\n\t};\r\n\r\n\tvar global$o = global$p;\r\n\r\n\tvar uncurryThis$9 = functionUncurryThis;\r\n\r\n\tvar fails$5 = fails$8;\r\n\r\n\tvar classof$2 = classofRaw$1;\r\n\r\n\tvar Object$4 = global$o.Object;\r\n\tvar split = uncurryThis$9(''.split); // fallback for non-array-like ES3 and non-enumerable old V8 strings\r\n\r\n\tvar indexedObject = fails$5(function () {\r\n\t  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\r\n\t  // eslint-disable-next-line no-prototype-builtins -- safe\r\n\t  return !Object$4('z').propertyIsEnumerable(0);\r\n\t}) ? function (it) {\r\n\t  return classof$2(it) == 'String' ? split(it, '') : Object$4(it);\r\n\t} : Object$4;\r\n\r\n\tvar global$n = global$p;\r\n\r\n\tvar TypeError$7 = global$n.TypeError; // `RequireObjectCoercible` abstract operation\r\n\t// https://tc39.es/ecma262/#sec-requireobjectcoercible\r\n\r\n\tvar requireObjectCoercible$4 = function (it) {\r\n\t  if (it == undefined) throw TypeError$7(\"Can't call method on \" + it);\r\n\t  return it;\r\n\t};\r\n\r\n\t// toObject with fallback for non-array-like ES3 strings\r\n\tvar IndexedObject$1 = indexedObject;\r\n\r\n\tvar requireObjectCoercible$3 = requireObjectCoercible$4;\r\n\r\n\tvar toIndexedObject$3 = function (it) {\r\n\t  return IndexedObject$1(requireObjectCoercible$3(it));\r\n\t};\r\n\r\n\t// `IsCallable` abstract operation\r\n\t// https://tc39.es/ecma262/#sec-iscallable\r\n\tvar isCallable$a = function (argument) {\r\n\t  return typeof argument == 'function';\r\n\t};\r\n\r\n\tvar isCallable$9 = isCallable$a;\r\n\r\n\tvar isObject$5 = function (it) {\r\n\t  return typeof it == 'object' ? it !== null : isCallable$9(it);\r\n\t};\r\n\r\n\tvar global$m = global$p;\r\n\r\n\tvar isCallable$8 = isCallable$a;\r\n\r\n\tvar aFunction = function (argument) {\r\n\t  return isCallable$8(argument) ? argument : undefined;\r\n\t};\r\n\r\n\tvar getBuiltIn$3 = function (namespace, method) {\r\n\t  return arguments.length < 2 ? aFunction(global$m[namespace]) : global$m[namespace] && global$m[namespace][method];\r\n\t};\r\n\r\n\tvar uncurryThis$8 = functionUncurryThis;\r\n\r\n\tvar objectIsPrototypeOf = uncurryThis$8({}.isPrototypeOf);\r\n\r\n\tvar getBuiltIn$2 = getBuiltIn$3;\r\n\r\n\tvar engineUserAgent = getBuiltIn$2('navigator', 'userAgent') || '';\r\n\r\n\tvar global$l = global$p;\r\n\r\n\tvar userAgent$1 = engineUserAgent;\r\n\r\n\tvar process = global$l.process;\r\n\tvar Deno = global$l.Deno;\r\n\tvar versions = process && process.versions || Deno && Deno.version;\r\n\tvar v8 = versions && versions.v8;\r\n\tvar match, version;\r\n\r\n\tif (v8) {\r\n\t  match = v8.split('.'); // in old Chrome, versions of V8 isn't V8 = Chrome / 10\r\n\t  // but their correct versions are not interesting for us\r\n\r\n\t  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\r\n\t} // BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\r\n\t// so check `userAgent` even if `.v8` exists, but 0\r\n\r\n\r\n\tif (!version && userAgent$1) {\r\n\t  match = userAgent$1.match(/Edge\\/(\\d+)/);\r\n\r\n\t  if (!match || match[1] >= 74) {\r\n\t    match = userAgent$1.match(/Chrome\\/(\\d+)/);\r\n\t    if (match) version = +match[1];\r\n\t  }\r\n\t}\r\n\r\n\tvar engineV8Version = version;\r\n\r\n\t/* eslint-disable es/no-symbol -- required for testing */\r\n\r\n\tvar V8_VERSION = engineV8Version;\r\n\r\n\tvar fails$4 = fails$8; // eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\r\n\r\n\r\n\tvar nativeSymbol = !!Object.getOwnPropertySymbols && !fails$4(function () {\r\n\t  var symbol = Symbol(); // Chrome 38 Symbol has incorrect toString conversion\r\n\t  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\r\n\r\n\t  return !String(symbol) || !(Object(symbol) instanceof Symbol) || // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\r\n\t  !Symbol.sham && V8_VERSION && V8_VERSION < 41;\r\n\t});\r\n\r\n\t/* eslint-disable es/no-symbol -- required for testing */\r\n\r\n\tvar NATIVE_SYMBOL$1 = nativeSymbol;\r\n\r\n\tvar useSymbolAsUid = NATIVE_SYMBOL$1 && !Symbol.sham && typeof Symbol.iterator == 'symbol';\r\n\r\n\tvar global$k = global$p;\r\n\r\n\tvar getBuiltIn$1 = getBuiltIn$3;\r\n\r\n\tvar isCallable$7 = isCallable$a;\r\n\r\n\tvar isPrototypeOf = objectIsPrototypeOf;\r\n\r\n\tvar USE_SYMBOL_AS_UID$1 = useSymbolAsUid;\r\n\r\n\tvar Object$3 = global$k.Object;\r\n\tvar isSymbol$2 = USE_SYMBOL_AS_UID$1 ? function (it) {\r\n\t  return typeof it == 'symbol';\r\n\t} : function (it) {\r\n\t  var $Symbol = getBuiltIn$1('Symbol');\r\n\t  return isCallable$7($Symbol) && isPrototypeOf($Symbol.prototype, Object$3(it));\r\n\t};\r\n\r\n\tvar global$j = global$p;\r\n\r\n\tvar String$3 = global$j.String;\r\n\r\n\tvar tryToString$1 = function (argument) {\r\n\t  try {\r\n\t    return String$3(argument);\r\n\t  } catch (error) {\r\n\t    return 'Object';\r\n\t  }\r\n\t};\r\n\r\n\tvar global$i = global$p;\r\n\r\n\tvar isCallable$6 = isCallable$a;\r\n\r\n\tvar tryToString = tryToString$1;\r\n\r\n\tvar TypeError$6 = global$i.TypeError; // `Assert: IsCallable(argument) is true`\r\n\r\n\tvar aCallable$1 = function (argument) {\r\n\t  if (isCallable$6(argument)) return argument;\r\n\t  throw TypeError$6(tryToString(argument) + ' is not a function');\r\n\t};\r\n\r\n\tvar aCallable = aCallable$1; // `GetMethod` abstract operation\r\n\t// https://tc39.es/ecma262/#sec-getmethod\r\n\r\n\r\n\tvar getMethod$1 = function (V, P) {\r\n\t  var func = V[P];\r\n\t  return func == null ? undefined : aCallable(func);\r\n\t};\r\n\r\n\tvar global$h = global$p;\r\n\r\n\tvar call$3 = functionCall;\r\n\r\n\tvar isCallable$5 = isCallable$a;\r\n\r\n\tvar isObject$4 = isObject$5;\r\n\r\n\tvar TypeError$5 = global$h.TypeError; // `OrdinaryToPrimitive` abstract operation\r\n\t// https://tc39.es/ecma262/#sec-ordinarytoprimitive\r\n\r\n\tvar ordinaryToPrimitive$1 = function (input, pref) {\r\n\t  var fn, val;\r\n\t  if (pref === 'string' && isCallable$5(fn = input.toString) && !isObject$4(val = call$3(fn, input))) return val;\r\n\t  if (isCallable$5(fn = input.valueOf) && !isObject$4(val = call$3(fn, input))) return val;\r\n\t  if (pref !== 'string' && isCallable$5(fn = input.toString) && !isObject$4(val = call$3(fn, input))) return val;\r\n\t  throw TypeError$5(\"Can't convert object to primitive value\");\r\n\t};\r\n\r\n\tvar shared$3 = {exports: {}};\r\n\r\n\tvar global$g = global$p; // eslint-disable-next-line es/no-object-defineproperty -- safe\r\n\r\n\r\n\tvar defineProperty$1 = Object.defineProperty;\r\n\r\n\tvar setGlobal$3 = function (key, value) {\r\n\t  try {\r\n\t    defineProperty$1(global$g, key, {\r\n\t      value: value,\r\n\t      configurable: true,\r\n\t      writable: true\r\n\t    });\r\n\t  } catch (error) {\r\n\t    global$g[key] = value;\r\n\t  }\r\n\r\n\t  return value;\r\n\t};\r\n\r\n\tvar global$f = global$p;\r\n\r\n\tvar setGlobal$2 = setGlobal$3;\r\n\r\n\tvar SHARED = '__core-js_shared__';\r\n\tvar store$3 = global$f[SHARED] || setGlobal$2(SHARED, {});\r\n\tvar sharedStore = store$3;\r\n\r\n\tvar store$2 = sharedStore;\r\n\r\n\t(shared$3.exports = function (key, value) {\r\n\t  return store$2[key] || (store$2[key] = value !== undefined ? value : {});\r\n\t})('versions', []).push({\r\n\t  version: '3.20.3',\r\n\t  mode: 'global',\r\n\t  copyright: '© 2014-2022 Denis Pushkarev (zloirock.ru)',\r\n\t  license: 'https://github.com/zloirock/core-js/blob/v3.20.3/LICENSE',\r\n\t  source: 'https://github.com/zloirock/core-js'\r\n\t});\r\n\r\n\tvar global$e = global$p;\r\n\r\n\tvar requireObjectCoercible$2 = requireObjectCoercible$4;\r\n\r\n\tvar Object$2 = global$e.Object; // `ToObject` abstract operation\r\n\t// https://tc39.es/ecma262/#sec-toobject\r\n\r\n\tvar toObject$2 = function (argument) {\r\n\t  return Object$2(requireObjectCoercible$2(argument));\r\n\t};\r\n\r\n\tvar uncurryThis$7 = functionUncurryThis;\r\n\r\n\tvar toObject$1 = toObject$2;\r\n\r\n\tvar hasOwnProperty = uncurryThis$7({}.hasOwnProperty); // `HasOwnProperty` abstract operation\r\n\t// https://tc39.es/ecma262/#sec-hasownproperty\r\n\r\n\tvar hasOwnProperty_1 = Object.hasOwn || function hasOwn(it, key) {\r\n\t  return hasOwnProperty(toObject$1(it), key);\r\n\t};\r\n\r\n\tvar uncurryThis$6 = functionUncurryThis;\r\n\r\n\tvar id = 0;\r\n\tvar postfix = Math.random();\r\n\tvar toString$3 = uncurryThis$6(1.0.toString);\r\n\r\n\tvar uid$2 = function (key) {\r\n\t  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString$3(++id + postfix, 36);\r\n\t};\r\n\r\n\tvar global$d = global$p;\r\n\r\n\tvar shared$2 = shared$3.exports;\r\n\r\n\tvar hasOwn$6 = hasOwnProperty_1;\r\n\r\n\tvar uid$1 = uid$2;\r\n\r\n\tvar NATIVE_SYMBOL = nativeSymbol;\r\n\r\n\tvar USE_SYMBOL_AS_UID = useSymbolAsUid;\r\n\r\n\tvar WellKnownSymbolsStore = shared$2('wks');\r\n\tvar Symbol$1 = global$d.Symbol;\r\n\tvar symbolFor = Symbol$1 && Symbol$1['for'];\r\n\tvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol$1 : Symbol$1 && Symbol$1.withoutSetter || uid$1;\r\n\r\n\tvar wellKnownSymbol$3 = function (name) {\r\n\t  if (!hasOwn$6(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {\r\n\t    var description = 'Symbol.' + name;\r\n\r\n\t    if (NATIVE_SYMBOL && hasOwn$6(Symbol$1, name)) {\r\n\t      WellKnownSymbolsStore[name] = Symbol$1[name];\r\n\t    } else if (USE_SYMBOL_AS_UID && symbolFor) {\r\n\t      WellKnownSymbolsStore[name] = symbolFor(description);\r\n\t    } else {\r\n\t      WellKnownSymbolsStore[name] = createWellKnownSymbol(description);\r\n\t    }\r\n\t  }\r\n\r\n\t  return WellKnownSymbolsStore[name];\r\n\t};\r\n\r\n\tvar global$c = global$p;\r\n\r\n\tvar call$2 = functionCall;\r\n\r\n\tvar isObject$3 = isObject$5;\r\n\r\n\tvar isSymbol$1 = isSymbol$2;\r\n\r\n\tvar getMethod = getMethod$1;\r\n\r\n\tvar ordinaryToPrimitive = ordinaryToPrimitive$1;\r\n\r\n\tvar wellKnownSymbol$2 = wellKnownSymbol$3;\r\n\r\n\tvar TypeError$4 = global$c.TypeError;\r\n\tvar TO_PRIMITIVE = wellKnownSymbol$2('toPrimitive'); // `ToPrimitive` abstract operation\r\n\t// https://tc39.es/ecma262/#sec-toprimitive\r\n\r\n\tvar toPrimitive$1 = function (input, pref) {\r\n\t  if (!isObject$3(input) || isSymbol$1(input)) return input;\r\n\t  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\r\n\t  var result;\r\n\r\n\t  if (exoticToPrim) {\r\n\t    if (pref === undefined) pref = 'default';\r\n\t    result = call$2(exoticToPrim, input, pref);\r\n\t    if (!isObject$3(result) || isSymbol$1(result)) return result;\r\n\t    throw TypeError$4(\"Can't convert object to primitive value\");\r\n\t  }\r\n\r\n\t  if (pref === undefined) pref = 'number';\r\n\t  return ordinaryToPrimitive(input, pref);\r\n\t};\r\n\r\n\tvar toPrimitive = toPrimitive$1;\r\n\r\n\tvar isSymbol = isSymbol$2; // `ToPropertyKey` abstract operation\r\n\t// https://tc39.es/ecma262/#sec-topropertykey\r\n\r\n\r\n\tvar toPropertyKey$2 = function (argument) {\r\n\t  var key = toPrimitive(argument, 'string');\r\n\t  return isSymbol(key) ? key : key + '';\r\n\t};\r\n\r\n\tvar global$b = global$p;\r\n\r\n\tvar isObject$2 = isObject$5;\r\n\r\n\tvar document$1 = global$b.document; // typeof document.createElement is 'object' in old IE\r\n\r\n\tvar EXISTS$1 = isObject$2(document$1) && isObject$2(document$1.createElement);\r\n\r\n\tvar documentCreateElement = function (it) {\r\n\t  return EXISTS$1 ? document$1.createElement(it) : {};\r\n\t};\r\n\r\n\tvar DESCRIPTORS$6 = descriptors;\r\n\r\n\tvar fails$3 = fails$8;\r\n\r\n\tvar createElement = documentCreateElement; // Thanks to IE8 for its funny defineProperty\r\n\r\n\r\n\tvar ie8DomDefine = !DESCRIPTORS$6 && !fails$3(function () {\r\n\t  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\r\n\t  return Object.defineProperty(createElement('div'), 'a', {\r\n\t    get: function () {\r\n\t      return 7;\r\n\t    }\r\n\t  }).a != 7;\r\n\t});\r\n\r\n\tvar DESCRIPTORS$5 = descriptors;\r\n\r\n\tvar call$1 = functionCall;\r\n\r\n\tvar propertyIsEnumerableModule$1 = objectPropertyIsEnumerable;\r\n\r\n\tvar createPropertyDescriptor$1 = createPropertyDescriptor$2;\r\n\r\n\tvar toIndexedObject$2 = toIndexedObject$3;\r\n\r\n\tvar toPropertyKey$1 = toPropertyKey$2;\r\n\r\n\tvar hasOwn$5 = hasOwnProperty_1;\r\n\r\n\tvar IE8_DOM_DEFINE$1 = ie8DomDefine; // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\r\n\r\n\r\n\tvar $getOwnPropertyDescriptor$1 = Object.getOwnPropertyDescriptor; // `Object.getOwnPropertyDescriptor` method\r\n\t// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\r\n\r\n\tobjectGetOwnPropertyDescriptor.f = DESCRIPTORS$5 ? $getOwnPropertyDescriptor$1 : function getOwnPropertyDescriptor(O, P) {\r\n\t  O = toIndexedObject$2(O);\r\n\t  P = toPropertyKey$1(P);\r\n\t  if (IE8_DOM_DEFINE$1) try {\r\n\t    return $getOwnPropertyDescriptor$1(O, P);\r\n\t  } catch (error) {\r\n\t    /* empty */\r\n\t  }\r\n\t  if (hasOwn$5(O, P)) return createPropertyDescriptor$1(!call$1(propertyIsEnumerableModule$1.f, O, P), O[P]);\r\n\t};\r\n\r\n\tvar objectDefineProperty = {};\r\n\r\n\tvar DESCRIPTORS$4 = descriptors;\r\n\r\n\tvar fails$2 = fails$8; // V8 ~ Chrome 36-\r\n\t// https://bugs.chromium.org/p/v8/issues/detail?id=3334\r\n\r\n\r\n\tvar v8PrototypeDefineBug = DESCRIPTORS$4 && fails$2(function () {\r\n\t  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\r\n\t  return Object.defineProperty(function () {\r\n\t    /* empty */\r\n\t  }, 'prototype', {\r\n\t    value: 42,\r\n\t    writable: false\r\n\t  }).prototype != 42;\r\n\t});\r\n\r\n\tvar global$a = global$p;\r\n\r\n\tvar isObject$1 = isObject$5;\r\n\r\n\tvar String$2 = global$a.String;\r\n\tvar TypeError$3 = global$a.TypeError; // `Assert: Type(argument) is Object`\r\n\r\n\tvar anObject$2 = function (argument) {\r\n\t  if (isObject$1(argument)) return argument;\r\n\t  throw TypeError$3(String$2(argument) + ' is not an object');\r\n\t};\r\n\r\n\tvar global$9 = global$p;\r\n\r\n\tvar DESCRIPTORS$3 = descriptors;\r\n\r\n\tvar IE8_DOM_DEFINE = ie8DomDefine;\r\n\r\n\tvar V8_PROTOTYPE_DEFINE_BUG = v8PrototypeDefineBug;\r\n\r\n\tvar anObject$1 = anObject$2;\r\n\r\n\tvar toPropertyKey = toPropertyKey$2;\r\n\r\n\tvar TypeError$2 = global$9.TypeError; // eslint-disable-next-line es/no-object-defineproperty -- safe\r\n\r\n\tvar $defineProperty = Object.defineProperty; // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\r\n\r\n\tvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\r\n\tvar ENUMERABLE = 'enumerable';\r\n\tvar CONFIGURABLE$1 = 'configurable';\r\n\tvar WRITABLE = 'writable'; // `Object.defineProperty` method\r\n\t// https://tc39.es/ecma262/#sec-object.defineproperty\r\n\r\n\tobjectDefineProperty.f = DESCRIPTORS$3 ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {\r\n\t  anObject$1(O);\r\n\t  P = toPropertyKey(P);\r\n\t  anObject$1(Attributes);\r\n\r\n\t  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\r\n\t    var current = $getOwnPropertyDescriptor(O, P);\r\n\r\n\t    if (current && current[WRITABLE]) {\r\n\t      O[P] = Attributes.value;\r\n\t      Attributes = {\r\n\t        configurable: CONFIGURABLE$1 in Attributes ? Attributes[CONFIGURABLE$1] : current[CONFIGURABLE$1],\r\n\t        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\r\n\t        writable: false\r\n\t      };\r\n\t    }\r\n\t  }\r\n\r\n\t  return $defineProperty(O, P, Attributes);\r\n\t} : $defineProperty : function defineProperty(O, P, Attributes) {\r\n\t  anObject$1(O);\r\n\t  P = toPropertyKey(P);\r\n\t  anObject$1(Attributes);\r\n\t  if (IE8_DOM_DEFINE) try {\r\n\t    return $defineProperty(O, P, Attributes);\r\n\t  } catch (error) {\r\n\t    /* empty */\r\n\t  }\r\n\t  if ('get' in Attributes || 'set' in Attributes) throw TypeError$2('Accessors not supported');\r\n\t  if ('value' in Attributes) O[P] = Attributes.value;\r\n\t  return O;\r\n\t};\r\n\r\n\tvar DESCRIPTORS$2 = descriptors;\r\n\r\n\tvar definePropertyModule$1 = objectDefineProperty;\r\n\r\n\tvar createPropertyDescriptor = createPropertyDescriptor$2;\r\n\r\n\tvar createNonEnumerableProperty$3 = DESCRIPTORS$2 ? function (object, key, value) {\r\n\t  return definePropertyModule$1.f(object, key, createPropertyDescriptor(1, value));\r\n\t} : function (object, key, value) {\r\n\t  object[key] = value;\r\n\t  return object;\r\n\t};\r\n\r\n\tvar redefine$1 = {exports: {}};\r\n\r\n\tvar uncurryThis$5 = functionUncurryThis;\r\n\r\n\tvar isCallable$4 = isCallable$a;\r\n\r\n\tvar store$1 = sharedStore;\r\n\r\n\tvar functionToString = uncurryThis$5(Function.toString); // this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\r\n\r\n\tif (!isCallable$4(store$1.inspectSource)) {\r\n\t  store$1.inspectSource = function (it) {\r\n\t    return functionToString(it);\r\n\t  };\r\n\t}\r\n\r\n\tvar inspectSource$2 = store$1.inspectSource;\r\n\r\n\tvar global$8 = global$p;\r\n\r\n\tvar isCallable$3 = isCallable$a;\r\n\r\n\tvar inspectSource$1 = inspectSource$2;\r\n\r\n\tvar WeakMap$1 = global$8.WeakMap;\r\n\tvar nativeWeakMap = isCallable$3(WeakMap$1) && /native code/.test(inspectSource$1(WeakMap$1));\r\n\r\n\tvar shared$1 = shared$3.exports;\r\n\r\n\tvar uid = uid$2;\r\n\r\n\tvar keys = shared$1('keys');\r\n\r\n\tvar sharedKey$1 = function (key) {\r\n\t  return keys[key] || (keys[key] = uid(key));\r\n\t};\r\n\r\n\tvar hiddenKeys$3 = {};\r\n\r\n\tvar NATIVE_WEAK_MAP = nativeWeakMap;\r\n\r\n\tvar global$7 = global$p;\r\n\r\n\tvar uncurryThis$4 = functionUncurryThis;\r\n\r\n\tvar isObject = isObject$5;\r\n\r\n\tvar createNonEnumerableProperty$2 = createNonEnumerableProperty$3;\r\n\r\n\tvar hasOwn$4 = hasOwnProperty_1;\r\n\r\n\tvar shared = sharedStore;\r\n\r\n\tvar sharedKey = sharedKey$1;\r\n\r\n\tvar hiddenKeys$2 = hiddenKeys$3;\r\n\r\n\tvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\r\n\tvar TypeError$1 = global$7.TypeError;\r\n\tvar WeakMap = global$7.WeakMap;\r\n\tvar set$1, get, has;\r\n\r\n\tvar enforce = function (it) {\r\n\t  return has(it) ? get(it) : set$1(it, {});\r\n\t};\r\n\r\n\tvar getterFor = function (TYPE) {\r\n\t  return function (it) {\r\n\t    var state;\r\n\r\n\t    if (!isObject(it) || (state = get(it)).type !== TYPE) {\r\n\t      throw TypeError$1('Incompatible receiver, ' + TYPE + ' required');\r\n\t    }\r\n\r\n\t    return state;\r\n\t  };\r\n\t};\r\n\r\n\tif (NATIVE_WEAK_MAP || shared.state) {\r\n\t  var store = shared.state || (shared.state = new WeakMap());\r\n\t  var wmget = uncurryThis$4(store.get);\r\n\t  var wmhas = uncurryThis$4(store.has);\r\n\t  var wmset = uncurryThis$4(store.set);\r\n\r\n\t  set$1 = function (it, metadata) {\r\n\t    if (wmhas(store, it)) throw new TypeError$1(OBJECT_ALREADY_INITIALIZED);\r\n\t    metadata.facade = it;\r\n\t    wmset(store, it, metadata);\r\n\t    return metadata;\r\n\t  };\r\n\r\n\t  get = function (it) {\r\n\t    return wmget(store, it) || {};\r\n\t  };\r\n\r\n\t  has = function (it) {\r\n\t    return wmhas(store, it);\r\n\t  };\r\n\t} else {\r\n\t  var STATE = sharedKey('state');\r\n\t  hiddenKeys$2[STATE] = true;\r\n\r\n\t  set$1 = function (it, metadata) {\r\n\t    if (hasOwn$4(it, STATE)) throw new TypeError$1(OBJECT_ALREADY_INITIALIZED);\r\n\t    metadata.facade = it;\r\n\t    createNonEnumerableProperty$2(it, STATE, metadata);\r\n\t    return metadata;\r\n\t  };\r\n\r\n\t  get = function (it) {\r\n\t    return hasOwn$4(it, STATE) ? it[STATE] : {};\r\n\t  };\r\n\r\n\t  has = function (it) {\r\n\t    return hasOwn$4(it, STATE);\r\n\t  };\r\n\t}\r\n\r\n\tvar internalState = {\r\n\t  set: set$1,\r\n\t  get: get,\r\n\t  has: has,\r\n\t  enforce: enforce,\r\n\t  getterFor: getterFor\r\n\t};\r\n\r\n\tvar DESCRIPTORS$1 = descriptors;\r\n\r\n\tvar hasOwn$3 = hasOwnProperty_1;\r\n\r\n\tvar FunctionPrototype = Function.prototype; // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\r\n\r\n\tvar getDescriptor = DESCRIPTORS$1 && Object.getOwnPropertyDescriptor;\r\n\tvar EXISTS = hasOwn$3(FunctionPrototype, 'name'); // additional protection from minified / mangled / dropped function names\r\n\r\n\tvar PROPER = EXISTS && function something() {\r\n\t  /* empty */\r\n\t}.name === 'something';\r\n\r\n\tvar CONFIGURABLE = EXISTS && (!DESCRIPTORS$1 || DESCRIPTORS$1 && getDescriptor(FunctionPrototype, 'name').configurable);\r\n\tvar functionName = {\r\n\t  EXISTS: EXISTS,\r\n\t  PROPER: PROPER,\r\n\t  CONFIGURABLE: CONFIGURABLE\r\n\t};\r\n\r\n\tvar global$6 = global$p;\r\n\r\n\tvar isCallable$2 = isCallable$a;\r\n\r\n\tvar hasOwn$2 = hasOwnProperty_1;\r\n\r\n\tvar createNonEnumerableProperty$1 = createNonEnumerableProperty$3;\r\n\r\n\tvar setGlobal$1 = setGlobal$3;\r\n\r\n\tvar inspectSource = inspectSource$2;\r\n\r\n\tvar InternalStateModule = internalState;\r\n\r\n\tvar CONFIGURABLE_FUNCTION_NAME = functionName.CONFIGURABLE;\r\n\r\n\tvar getInternalState = InternalStateModule.get;\r\n\tvar enforceInternalState = InternalStateModule.enforce;\r\n\tvar TEMPLATE = String(String).split('String');\r\n\t(redefine$1.exports = function (O, key, value, options) {\r\n\t  var unsafe = options ? !!options.unsafe : false;\r\n\t  var simple = options ? !!options.enumerable : false;\r\n\t  var noTargetGet = options ? !!options.noTargetGet : false;\r\n\t  var name = options && options.name !== undefined ? options.name : key;\r\n\t  var state;\r\n\r\n\t  if (isCallable$2(value)) {\r\n\t    if (String(name).slice(0, 7) === 'Symbol(') {\r\n\t      name = '[' + String(name).replace(/^Symbol\\(([^)]*)\\)/, '$1') + ']';\r\n\t    }\r\n\r\n\t    if (!hasOwn$2(value, 'name') || CONFIGURABLE_FUNCTION_NAME && value.name !== name) {\r\n\t      createNonEnumerableProperty$1(value, 'name', name);\r\n\t    }\r\n\r\n\t    state = enforceInternalState(value);\r\n\r\n\t    if (!state.source) {\r\n\t      state.source = TEMPLATE.join(typeof name == 'string' ? name : '');\r\n\t    }\r\n\t  }\r\n\r\n\t  if (O === global$6) {\r\n\t    if (simple) O[key] = value;else setGlobal$1(key, value);\r\n\t    return;\r\n\t  } else if (!unsafe) {\r\n\t    delete O[key];\r\n\t  } else if (!noTargetGet && O[key]) {\r\n\t    simple = true;\r\n\t  }\r\n\r\n\t  if (simple) O[key] = value;else createNonEnumerableProperty$1(O, key, value); // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\r\n\t})(Function.prototype, 'toString', function toString() {\r\n\t  return isCallable$2(this) && getInternalState(this).source || inspectSource(this);\r\n\t});\r\n\r\n\tvar objectGetOwnPropertyNames = {};\r\n\r\n\tvar ceil$1 = Math.ceil;\r\n\tvar floor = Math.floor; // `ToIntegerOrInfinity` abstract operation\r\n\t// https://tc39.es/ecma262/#sec-tointegerorinfinity\r\n\r\n\tvar toIntegerOrInfinity$3 = function (argument) {\r\n\t  var number = +argument; // eslint-disable-next-line no-self-compare -- safe\r\n\r\n\t  return number !== number || number === 0 ? 0 : (number > 0 ? floor : ceil$1)(number);\r\n\t};\r\n\r\n\tvar toIntegerOrInfinity$2 = toIntegerOrInfinity$3;\r\n\r\n\tvar max = Math.max;\r\n\tvar min$1 = Math.min; // Helper for a popular repeating case of the spec:\r\n\t// Let integer be ? ToInteger(index).\r\n\t// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\r\n\r\n\tvar toAbsoluteIndex$1 = function (index, length) {\r\n\t  var integer = toIntegerOrInfinity$2(index);\r\n\t  return integer < 0 ? max(integer + length, 0) : min$1(integer, length);\r\n\t};\r\n\r\n\tvar toIntegerOrInfinity$1 = toIntegerOrInfinity$3;\r\n\r\n\tvar min = Math.min; // `ToLength` abstract operation\r\n\t// https://tc39.es/ecma262/#sec-tolength\r\n\r\n\tvar toLength$2 = function (argument) {\r\n\t  return argument > 0 ? min(toIntegerOrInfinity$1(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\r\n\t};\r\n\r\n\tvar toLength$1 = toLength$2; // `LengthOfArrayLike` abstract operation\r\n\t// https://tc39.es/ecma262/#sec-lengthofarraylike\r\n\r\n\r\n\tvar lengthOfArrayLike$1 = function (obj) {\r\n\t  return toLength$1(obj.length);\r\n\t};\r\n\r\n\tvar toIndexedObject$1 = toIndexedObject$3;\r\n\r\n\tvar toAbsoluteIndex = toAbsoluteIndex$1;\r\n\r\n\tvar lengthOfArrayLike = lengthOfArrayLike$1; // `Array.prototype.{ indexOf, includes }` methods implementation\r\n\r\n\r\n\tvar createMethod$1 = function (IS_INCLUDES) {\r\n\t  return function ($this, el, fromIndex) {\r\n\t    var O = toIndexedObject$1($this);\r\n\t    var length = lengthOfArrayLike(O);\r\n\t    var index = toAbsoluteIndex(fromIndex, length);\r\n\t    var value; // Array#includes uses SameValueZero equality algorithm\r\n\t    // eslint-disable-next-line no-self-compare -- NaN check\r\n\r\n\t    if (IS_INCLUDES && el != el) while (length > index) {\r\n\t      value = O[index++]; // eslint-disable-next-line no-self-compare -- NaN check\r\n\r\n\t      if (value != value) return true; // Array#indexOf ignores holes, Array#includes - not\r\n\t    } else for (; length > index; index++) {\r\n\t      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\r\n\t    }\r\n\t    return !IS_INCLUDES && -1;\r\n\t  };\r\n\t};\r\n\r\n\tvar arrayIncludes = {\r\n\t  // `Array.prototype.includes` method\r\n\t  // https://tc39.es/ecma262/#sec-array.prototype.includes\r\n\t  includes: createMethod$1(true),\r\n\t  // `Array.prototype.indexOf` method\r\n\t  // https://tc39.es/ecma262/#sec-array.prototype.indexof\r\n\t  indexOf: createMethod$1(false)\r\n\t};\r\n\r\n\tvar uncurryThis$3 = functionUncurryThis;\r\n\r\n\tvar hasOwn$1 = hasOwnProperty_1;\r\n\r\n\tvar toIndexedObject = toIndexedObject$3;\r\n\r\n\tvar indexOf = arrayIncludes.indexOf;\r\n\r\n\tvar hiddenKeys$1 = hiddenKeys$3;\r\n\r\n\tvar push = uncurryThis$3([].push);\r\n\r\n\tvar objectKeysInternal = function (object, names) {\r\n\t  var O = toIndexedObject(object);\r\n\t  var i = 0;\r\n\t  var result = [];\r\n\t  var key;\r\n\r\n\t  for (key in O) !hasOwn$1(hiddenKeys$1, key) && hasOwn$1(O, key) && push(result, key); // Don't enum bug & hidden keys\r\n\r\n\r\n\t  while (names.length > i) if (hasOwn$1(O, key = names[i++])) {\r\n\t    ~indexOf(result, key) || push(result, key);\r\n\t  }\r\n\r\n\t  return result;\r\n\t};\r\n\r\n\t// IE8- don't enum bug keys\r\n\tvar enumBugKeys$2 = ['constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'toLocaleString', 'toString', 'valueOf'];\r\n\r\n\tvar internalObjectKeys$1 = objectKeysInternal;\r\n\r\n\tvar enumBugKeys$1 = enumBugKeys$2;\r\n\r\n\tvar hiddenKeys = enumBugKeys$1.concat('length', 'prototype'); // `Object.getOwnPropertyNames` method\r\n\t// https://tc39.es/ecma262/#sec-object.getownpropertynames\r\n\t// eslint-disable-next-line es/no-object-getownpropertynames -- safe\r\n\r\n\tobjectGetOwnPropertyNames.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\r\n\t  return internalObjectKeys$1(O, hiddenKeys);\r\n\t};\r\n\r\n\tvar objectGetOwnPropertySymbols = {};\r\n\r\n\t// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\r\n\tobjectGetOwnPropertySymbols.f = Object.getOwnPropertySymbols;\r\n\r\n\tvar getBuiltIn = getBuiltIn$3;\r\n\r\n\tvar uncurryThis$2 = functionUncurryThis;\r\n\r\n\tvar getOwnPropertyNamesModule = objectGetOwnPropertyNames;\r\n\r\n\tvar getOwnPropertySymbolsModule$1 = objectGetOwnPropertySymbols;\r\n\r\n\tvar anObject = anObject$2;\r\n\r\n\tvar concat$1 = uncurryThis$2([].concat); // all object keys, includes non-enumerable and symbols\r\n\r\n\tvar ownKeys$1 = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\r\n\t  var keys = getOwnPropertyNamesModule.f(anObject(it));\r\n\t  var getOwnPropertySymbols = getOwnPropertySymbolsModule$1.f;\r\n\t  return getOwnPropertySymbols ? concat$1(keys, getOwnPropertySymbols(it)) : keys;\r\n\t};\r\n\r\n\tvar hasOwn = hasOwnProperty_1;\r\n\r\n\tvar ownKeys = ownKeys$1;\r\n\r\n\tvar getOwnPropertyDescriptorModule = objectGetOwnPropertyDescriptor;\r\n\r\n\tvar definePropertyModule = objectDefineProperty;\r\n\r\n\tvar copyConstructorProperties$1 = function (target, source, exceptions) {\r\n\t  var keys = ownKeys(source);\r\n\t  var defineProperty = definePropertyModule.f;\r\n\t  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\r\n\r\n\t  for (var i = 0; i < keys.length; i++) {\r\n\t    var key = keys[i];\r\n\r\n\t    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {\r\n\t      defineProperty(target, key, getOwnPropertyDescriptor(source, key));\r\n\t    }\r\n\t  }\r\n\t};\r\n\r\n\tvar fails$1 = fails$8;\r\n\r\n\tvar isCallable$1 = isCallable$a;\r\n\r\n\tvar replacement = /#|\\.prototype\\./;\r\n\r\n\tvar isForced$1 = function (feature, detection) {\r\n\t  var value = data[normalize(feature)];\r\n\t  return value == POLYFILL ? true : value == NATIVE ? false : isCallable$1(detection) ? fails$1(detection) : !!detection;\r\n\t};\r\n\r\n\tvar normalize = isForced$1.normalize = function (string) {\r\n\t  return String(string).replace(replacement, '.').toLowerCase();\r\n\t};\r\n\r\n\tvar data = isForced$1.data = {};\r\n\tvar NATIVE = isForced$1.NATIVE = 'N';\r\n\tvar POLYFILL = isForced$1.POLYFILL = 'P';\r\n\tvar isForced_1 = isForced$1;\r\n\r\n\tvar global$5 = global$p;\r\n\r\n\tvar getOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;\r\n\r\n\tvar createNonEnumerableProperty = createNonEnumerableProperty$3;\r\n\r\n\tvar redefine = redefine$1.exports;\r\n\r\n\tvar setGlobal = setGlobal$3;\r\n\r\n\tvar copyConstructorProperties = copyConstructorProperties$1;\r\n\r\n\tvar isForced = isForced_1;\r\n\t/*\r\n\t  options.target      - name of the target object\r\n\t  options.global      - target is the global object\r\n\t  options.stat        - export as static methods of target\r\n\t  options.proto       - export as prototype methods of target\r\n\t  options.real        - real prototype method for the `pure` version\r\n\t  options.forced      - export even if the native feature is available\r\n\t  options.bind        - bind methods to the target, required for the `pure` version\r\n\t  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\r\n\t  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\r\n\t  options.sham        - add a flag to not completely full polyfills\r\n\t  options.enumerable  - export as enumerable property\r\n\t  options.noTargetGet - prevent calling a getter on target\r\n\t  options.name        - the .name of the function if it does not match the key\r\n\t*/\r\n\r\n\r\n\tvar _export = function (options, source) {\r\n\t  var TARGET = options.target;\r\n\t  var GLOBAL = options.global;\r\n\t  var STATIC = options.stat;\r\n\t  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\r\n\r\n\t  if (GLOBAL) {\r\n\t    target = global$5;\r\n\t  } else if (STATIC) {\r\n\t    target = global$5[TARGET] || setGlobal(TARGET, {});\r\n\t  } else {\r\n\t    target = (global$5[TARGET] || {}).prototype;\r\n\t  }\r\n\r\n\t  if (target) for (key in source) {\r\n\t    sourceProperty = source[key];\r\n\r\n\t    if (options.noTargetGet) {\r\n\t      descriptor = getOwnPropertyDescriptor(target, key);\r\n\t      targetProperty = descriptor && descriptor.value;\r\n\t    } else targetProperty = target[key];\r\n\r\n\t    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced); // contained in target\r\n\r\n\t    if (!FORCED && targetProperty !== undefined) {\r\n\t      if (typeof sourceProperty == typeof targetProperty) continue;\r\n\t      copyConstructorProperties(sourceProperty, targetProperty);\r\n\t    } // add a flag to not completely full polyfills\r\n\r\n\r\n\t    if (options.sham || targetProperty && targetProperty.sham) {\r\n\t      createNonEnumerableProperty(sourceProperty, 'sham', true);\r\n\t    } // extend global\r\n\r\n\r\n\t    redefine(target, key, sourceProperty, options);\r\n\t  }\r\n\t};\r\n\r\n\tvar internalObjectKeys = objectKeysInternal;\r\n\r\n\tvar enumBugKeys = enumBugKeys$2; // `Object.keys` method\r\n\t// https://tc39.es/ecma262/#sec-object.keys\r\n\t// eslint-disable-next-line es/no-object-keys -- safe\r\n\r\n\r\n\tvar objectKeys$1 = Object.keys || function keys(O) {\r\n\t  return internalObjectKeys(O, enumBugKeys);\r\n\t};\r\n\r\n\tvar DESCRIPTORS = descriptors;\r\n\r\n\tvar uncurryThis$1 = functionUncurryThis;\r\n\r\n\tvar call = functionCall;\r\n\r\n\tvar fails = fails$8;\r\n\r\n\tvar objectKeys = objectKeys$1;\r\n\r\n\tvar getOwnPropertySymbolsModule = objectGetOwnPropertySymbols;\r\n\r\n\tvar propertyIsEnumerableModule = objectPropertyIsEnumerable;\r\n\r\n\tvar toObject = toObject$2;\r\n\r\n\tvar IndexedObject = indexedObject; // eslint-disable-next-line es/no-object-assign -- safe\r\n\r\n\r\n\tvar $assign = Object.assign; // eslint-disable-next-line es/no-object-defineproperty -- required for testing\r\n\r\n\tvar defineProperty = Object.defineProperty;\r\n\tvar concat = uncurryThis$1([].concat); // `Object.assign` method\r\n\t// https://tc39.es/ecma262/#sec-object.assign\r\n\r\n\tvar objectAssign = !$assign || fails(function () {\r\n\t  // should have correct order of operations (Edge bug)\r\n\t  if (DESCRIPTORS && $assign({\r\n\t    b: 1\r\n\t  }, $assign(defineProperty({}, 'a', {\r\n\t    enumerable: true,\r\n\t    get: function () {\r\n\t      defineProperty(this, 'b', {\r\n\t        value: 3,\r\n\t        enumerable: false\r\n\t      });\r\n\t    }\r\n\t  }), {\r\n\t    b: 2\r\n\t  })).b !== 1) return true; // should work with symbols and should have deterministic property order (V8 bug)\r\n\r\n\t  var A = {};\r\n\t  var B = {}; // eslint-disable-next-line es/no-symbol -- safe\r\n\r\n\t  var symbol = Symbol();\r\n\t  var alphabet = 'abcdefghijklmnopqrst';\r\n\t  A[symbol] = 7;\r\n\t  alphabet.split('').forEach(function (chr) {\r\n\t    B[chr] = chr;\r\n\t  });\r\n\t  return $assign({}, A)[symbol] != 7 || objectKeys($assign({}, B)).join('') != alphabet;\r\n\t}) ? function assign(target, source) {\r\n\t  // eslint-disable-line no-unused-vars -- required for `.length`\r\n\t  var T = toObject(target);\r\n\t  var argumentsLength = arguments.length;\r\n\t  var index = 1;\r\n\t  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\r\n\t  var propertyIsEnumerable = propertyIsEnumerableModule.f;\r\n\r\n\t  while (argumentsLength > index) {\r\n\t    var S = IndexedObject(arguments[index++]);\r\n\t    var keys = getOwnPropertySymbols ? concat(objectKeys(S), getOwnPropertySymbols(S)) : objectKeys(S);\r\n\t    var length = keys.length;\r\n\t    var j = 0;\r\n\t    var key;\r\n\r\n\t    while (length > j) {\r\n\t      key = keys[j++];\r\n\t      if (!DESCRIPTORS || call(propertyIsEnumerable, S, key)) T[key] = S[key];\r\n\t    }\r\n\t  }\r\n\r\n\t  return T;\r\n\t} : $assign;\r\n\r\n\tvar $$4 = _export;\r\n\r\n\tvar assign = objectAssign; // `Object.assign` method\r\n\t// https://tc39.es/ecma262/#sec-object.assign\r\n\t// eslint-disable-next-line es/no-object-assign -- required for testing\r\n\r\n\r\n\t$$4({\r\n\t  target: 'Object',\r\n\t  stat: true,\r\n\t  forced: Object.assign !== assign\r\n\t}, {\r\n\t  assign: assign\r\n\t});\r\n\r\n\tvar wellKnownSymbol$1 = wellKnownSymbol$3;\r\n\r\n\tvar TO_STRING_TAG$1 = wellKnownSymbol$1('toStringTag');\r\n\tvar test = {};\r\n\ttest[TO_STRING_TAG$1] = 'z';\r\n\tvar toStringTagSupport = String(test) === '[object z]';\r\n\r\n\tvar global$4 = global$p;\r\n\r\n\tvar TO_STRING_TAG_SUPPORT = toStringTagSupport;\r\n\r\n\tvar isCallable = isCallable$a;\r\n\r\n\tvar classofRaw = classofRaw$1;\r\n\r\n\tvar wellKnownSymbol = wellKnownSymbol$3;\r\n\r\n\tvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\r\n\tvar Object$1 = global$4.Object; // ES3 wrong here\r\n\r\n\tvar CORRECT_ARGUMENTS = classofRaw(function () {\r\n\t  return arguments;\r\n\t}()) == 'Arguments'; // fallback for IE11 Script Access Denied error\r\n\r\n\tvar tryGet = function (it, key) {\r\n\t  try {\r\n\t    return it[key];\r\n\t  } catch (error) {\r\n\t    /* empty */\r\n\t  }\r\n\t}; // getting tag from ES6+ `Object.prototype.toString`\r\n\r\n\r\n\tvar classof$1 = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\r\n\t  var O, tag, result;\r\n\t  return it === undefined ? 'Undefined' : it === null ? 'Null' // @@toStringTag case\r\n\t  : typeof (tag = tryGet(O = Object$1(it), TO_STRING_TAG)) == 'string' ? tag // builtinTag case\r\n\t  : CORRECT_ARGUMENTS ? classofRaw(O) // ES3 arguments fallback\r\n\t  : (result = classofRaw(O)) == 'Object' && isCallable(O.callee) ? 'Arguments' : result;\r\n\t};\r\n\r\n\tvar global$3 = global$p;\r\n\r\n\tvar classof = classof$1;\r\n\r\n\tvar String$1 = global$3.String;\r\n\r\n\tvar toString$2 = function (argument) {\r\n\t  if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');\r\n\t  return String$1(argument);\r\n\t};\r\n\r\n\tvar global$2 = global$p;\r\n\r\n\tvar toIntegerOrInfinity = toIntegerOrInfinity$3;\r\n\r\n\tvar toString$1 = toString$2;\r\n\r\n\tvar requireObjectCoercible$1 = requireObjectCoercible$4;\r\n\r\n\tvar RangeError = global$2.RangeError; // `String.prototype.repeat` method implementation\r\n\t// https://tc39.es/ecma262/#sec-string.prototype.repeat\r\n\r\n\tvar stringRepeat = function repeat(count) {\r\n\t  var str = toString$1(requireObjectCoercible$1(this));\r\n\t  var result = '';\r\n\t  var n = toIntegerOrInfinity(count);\r\n\t  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');\r\n\r\n\t  for (; n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;\r\n\r\n\t  return result;\r\n\t};\r\n\r\n\tvar $$3 = _export;\r\n\r\n\tvar repeat$1 = stringRepeat; // `String.prototype.repeat` method\r\n\t// https://tc39.es/ecma262/#sec-string.prototype.repeat\r\n\r\n\r\n\t$$3({\r\n\t  target: 'String',\r\n\t  proto: true\r\n\t}, {\r\n\t  repeat: repeat$1\r\n\t});\r\n\r\n\t// https://github.com/tc39/proposal-string-pad-start-end\r\n\tvar uncurryThis = functionUncurryThis;\r\n\r\n\tvar toLength = toLength$2;\r\n\r\n\tvar toString = toString$2;\r\n\r\n\tvar $repeat = stringRepeat;\r\n\r\n\tvar requireObjectCoercible = requireObjectCoercible$4;\r\n\r\n\tvar repeat = uncurryThis($repeat);\r\n\tvar stringSlice = uncurryThis(''.slice);\r\n\tvar ceil = Math.ceil; // `String.prototype.{ padStart, padEnd }` methods implementation\r\n\r\n\tvar createMethod = function (IS_END) {\r\n\t  return function ($this, maxLength, fillString) {\r\n\t    var S = toString(requireObjectCoercible($this));\r\n\t    var intMaxLength = toLength(maxLength);\r\n\t    var stringLength = S.length;\r\n\t    var fillStr = fillString === undefined ? ' ' : toString(fillString);\r\n\t    var fillLen, stringFiller;\r\n\t    if (intMaxLength <= stringLength || fillStr == '') return S;\r\n\t    fillLen = intMaxLength - stringLength;\r\n\t    stringFiller = repeat(fillStr, ceil(fillLen / fillStr.length));\r\n\t    if (stringFiller.length > fillLen) stringFiller = stringSlice(stringFiller, 0, fillLen);\r\n\t    return IS_END ? S + stringFiller : stringFiller + S;\r\n\t  };\r\n\t};\r\n\r\n\tvar stringPad = {\r\n\t  // `String.prototype.padStart` method\r\n\t  // https://tc39.es/ecma262/#sec-string.prototype.padstart\r\n\t  start: createMethod(false),\r\n\t  // `String.prototype.padEnd` method\r\n\t  // https://tc39.es/ecma262/#sec-string.prototype.padend\r\n\t  end: createMethod(true)\r\n\t};\r\n\r\n\t// https://github.com/zloirock/core-js/issues/280\r\n\tvar userAgent = engineUserAgent;\r\n\r\n\tvar stringPadWebkitBug = /Version\\/10(?:\\.\\d+){1,2}(?: [\\w./]+)?(?: Mobile\\/\\w+)? Safari\\//.test(userAgent);\r\n\r\n\tvar $$2 = _export;\r\n\r\n\tvar $padStart = stringPad.start;\r\n\r\n\tvar WEBKIT_BUG$1 = stringPadWebkitBug; // `String.prototype.padStart` method\r\n\t// https://tc39.es/ecma262/#sec-string.prototype.padstart\r\n\r\n\r\n\t$$2({\r\n\t  target: 'String',\r\n\t  proto: true,\r\n\t  forced: WEBKIT_BUG$1\r\n\t}, {\r\n\t  padStart: function padStart(maxLength\r\n\t  /* , fillString = ' ' */\r\n\t  ) {\r\n\t    return $padStart(this, maxLength, arguments.length > 1 ? arguments[1] : undefined);\r\n\t  }\r\n\t});\r\n\r\n\tvar $$1 = _export;\r\n\r\n\tvar $padEnd = stringPad.end;\r\n\r\n\tvar WEBKIT_BUG = stringPadWebkitBug; // `String.prototype.padEnd` method\r\n\t// https://tc39.es/ecma262/#sec-string.prototype.padend\r\n\r\n\r\n\t$$1({\r\n\t  target: 'String',\r\n\t  proto: true,\r\n\t  forced: WEBKIT_BUG\r\n\t}, {\r\n\t  padEnd: function padEnd(maxLength\r\n\t  /* , fillString = ' ' */\r\n\t  ) {\r\n\t    return $padEnd(this, maxLength, arguments.length > 1 ? arguments[1] : undefined);\r\n\t  }\r\n\t});\r\n\r\n\tvar $ = _export;\r\n\r\n\tvar global$1 = global$p; // `globalThis` object\r\n\t// https://tc39.es/ecma262/#sec-globalthis\r\n\r\n\r\n\t$({\r\n\t  global: true\r\n\t}, {\r\n\t  globalThis: global$1\r\n\t});\r\n\r\n\tfunction _typeof(obj) {\r\n\t  \"@babel/helpers - typeof\";\r\n\r\n\t  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\r\n\t    return typeof obj;\r\n\t  } : function (obj) {\r\n\t    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\r\n\t  }, _typeof(obj);\r\n\t}\r\n\r\n\tfunction _classCallCheck(instance, Constructor) {\r\n\t  if (!(instance instanceof Constructor)) {\r\n\t    throw new TypeError(\"Cannot call a class as a function\");\r\n\t  }\r\n\t}\r\n\r\n\tfunction _defineProperties(target, props) {\r\n\t  for (var i = 0; i < props.length; i++) {\r\n\t    var descriptor = props[i];\r\n\t    descriptor.enumerable = descriptor.enumerable || false;\r\n\t    descriptor.configurable = true;\r\n\t    if (\"value\" in descriptor) descriptor.writable = true;\r\n\t    Object.defineProperty(target, descriptor.key, descriptor);\r\n\t  }\r\n\t}\r\n\r\n\tfunction _createClass(Constructor, protoProps, staticProps) {\r\n\t  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\r\n\t  if (staticProps) _defineProperties(Constructor, staticProps);\r\n\t  Object.defineProperty(Constructor, \"prototype\", {\r\n\t    writable: false\r\n\t  });\r\n\t  return Constructor;\r\n\t}\r\n\r\n\tfunction _defineProperty(obj, key, value) {\r\n\t  if (key in obj) {\r\n\t    Object.defineProperty(obj, key, {\r\n\t      value: value,\r\n\t      enumerable: true,\r\n\t      configurable: true,\r\n\t      writable: true\r\n\t    });\r\n\t  } else {\r\n\t    obj[key] = value;\r\n\t  }\r\n\r\n\t  return obj;\r\n\t}\r\n\r\n\tfunction _inherits(subClass, superClass) {\r\n\t  if (typeof superClass !== \"function\" && superClass !== null) {\r\n\t    throw new TypeError(\"Super expression must either be null or a function\");\r\n\t  }\r\n\r\n\t  subClass.prototype = Object.create(superClass && superClass.prototype, {\r\n\t    constructor: {\r\n\t      value: subClass,\r\n\t      writable: true,\r\n\t      configurable: true\r\n\t    }\r\n\t  });\r\n\t  Object.defineProperty(subClass, \"prototype\", {\r\n\t    writable: false\r\n\t  });\r\n\t  if (superClass) _setPrototypeOf(subClass, superClass);\r\n\t}\r\n\r\n\tfunction _getPrototypeOf(o) {\r\n\t  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\r\n\t    return o.__proto__ || Object.getPrototypeOf(o);\r\n\t  };\r\n\t  return _getPrototypeOf(o);\r\n\t}\r\n\r\n\tfunction _setPrototypeOf(o, p) {\r\n\t  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\r\n\t    o.__proto__ = p;\r\n\t    return o;\r\n\t  };\r\n\r\n\t  return _setPrototypeOf(o, p);\r\n\t}\r\n\r\n\tfunction _isNativeReflectConstruct() {\r\n\t  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\r\n\t  if (Reflect.construct.sham) return false;\r\n\t  if (typeof Proxy === \"function\") return true;\r\n\r\n\t  try {\r\n\t    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\r\n\t    return true;\r\n\t  } catch (e) {\r\n\t    return false;\r\n\t  }\r\n\t}\r\n\r\n\tfunction _objectWithoutPropertiesLoose(source, excluded) {\r\n\t  if (source == null) return {};\r\n\t  var target = {};\r\n\t  var sourceKeys = Object.keys(source);\r\n\t  var key, i;\r\n\r\n\t  for (i = 0; i < sourceKeys.length; i++) {\r\n\t    key = sourceKeys[i];\r\n\t    if (excluded.indexOf(key) >= 0) continue;\r\n\t    target[key] = source[key];\r\n\t  }\r\n\r\n\t  return target;\r\n\t}\r\n\r\n\tfunction _objectWithoutProperties(source, excluded) {\r\n\t  if (source == null) return {};\r\n\r\n\t  var target = _objectWithoutPropertiesLoose(source, excluded);\r\n\r\n\t  var key, i;\r\n\r\n\t  if (Object.getOwnPropertySymbols) {\r\n\t    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\r\n\r\n\t    for (i = 0; i < sourceSymbolKeys.length; i++) {\r\n\t      key = sourceSymbolKeys[i];\r\n\t      if (excluded.indexOf(key) >= 0) continue;\r\n\t      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\r\n\t      target[key] = source[key];\r\n\t    }\r\n\t  }\r\n\r\n\t  return target;\r\n\t}\r\n\r\n\tfunction _assertThisInitialized(self) {\r\n\t  if (self === void 0) {\r\n\t    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\r\n\t  }\r\n\r\n\t  return self;\r\n\t}\r\n\r\n\tfunction _possibleConstructorReturn(self, call) {\r\n\t  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\r\n\t    return call;\r\n\t  } else if (call !== void 0) {\r\n\t    throw new TypeError(\"Derived constructors may only return object or undefined\");\r\n\t  }\r\n\r\n\t  return _assertThisInitialized(self);\r\n\t}\r\n\r\n\tfunction _createSuper(Derived) {\r\n\t  var hasNativeReflectConstruct = _isNativeReflectConstruct();\r\n\r\n\t  return function _createSuperInternal() {\r\n\t    var Super = _getPrototypeOf(Derived),\r\n\t        result;\r\n\r\n\t    if (hasNativeReflectConstruct) {\r\n\t      var NewTarget = _getPrototypeOf(this).constructor;\r\n\r\n\t      result = Reflect.construct(Super, arguments, NewTarget);\r\n\t    } else {\r\n\t      result = Super.apply(this, arguments);\r\n\t    }\r\n\r\n\t    return _possibleConstructorReturn(this, result);\r\n\t  };\r\n\t}\r\n\r\n\tfunction _superPropBase(object, property) {\r\n\t  while (!Object.prototype.hasOwnProperty.call(object, property)) {\r\n\t    object = _getPrototypeOf(object);\r\n\t    if (object === null) break;\r\n\t  }\r\n\r\n\t  return object;\r\n\t}\r\n\r\n\tfunction _get() {\r\n\t  if (typeof Reflect !== \"undefined\" && Reflect.get) {\r\n\t    _get = Reflect.get;\r\n\t  } else {\r\n\t    _get = function _get(target, property, receiver) {\r\n\t      var base = _superPropBase(target, property);\r\n\r\n\t      if (!base) return;\r\n\t      var desc = Object.getOwnPropertyDescriptor(base, property);\r\n\r\n\t      if (desc.get) {\r\n\t        return desc.get.call(arguments.length < 3 ? target : receiver);\r\n\t      }\r\n\r\n\t      return desc.value;\r\n\t    };\r\n\t  }\r\n\r\n\t  return _get.apply(this, arguments);\r\n\t}\r\n\r\n\tfunction set(target, property, value, receiver) {\r\n\t  if (typeof Reflect !== \"undefined\" && Reflect.set) {\r\n\t    set = Reflect.set;\r\n\t  } else {\r\n\t    set = function set(target, property, value, receiver) {\r\n\t      var base = _superPropBase(target, property);\r\n\r\n\t      var desc;\r\n\r\n\t      if (base) {\r\n\t        desc = Object.getOwnPropertyDescriptor(base, property);\r\n\r\n\t        if (desc.set) {\r\n\t          desc.set.call(receiver, value);\r\n\t          return true;\r\n\t        } else if (!desc.writable) {\r\n\t          return false;\r\n\t        }\r\n\t      }\r\n\r\n\t      desc = Object.getOwnPropertyDescriptor(receiver, property);\r\n\r\n\t      if (desc) {\r\n\t        if (!desc.writable) {\r\n\t          return false;\r\n\t        }\r\n\r\n\t        desc.value = value;\r\n\t        Object.defineProperty(receiver, property, desc);\r\n\t      } else {\r\n\t        _defineProperty(receiver, property, value);\r\n\t      }\r\n\r\n\t      return true;\r\n\t    };\r\n\t  }\r\n\r\n\t  return set(target, property, value, receiver);\r\n\t}\r\n\r\n\tfunction _set(target, property, value, receiver, isStrict) {\r\n\t  var s = set(target, property, value, receiver || target);\r\n\r\n\t  if (!s && isStrict) {\r\n\t    throw new Error('failed to set property');\r\n\t  }\r\n\r\n\t  return value;\r\n\t}\r\n\r\n\tfunction _slicedToArray(arr, i) {\r\n\t  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\r\n\t}\r\n\r\n\tfunction _arrayWithHoles(arr) {\r\n\t  if (Array.isArray(arr)) return arr;\r\n\t}\r\n\r\n\tfunction _iterableToArrayLimit(arr, i) {\r\n\t  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\r\n\r\n\t  if (_i == null) return;\r\n\t  var _arr = [];\r\n\t  var _n = true;\r\n\t  var _d = false;\r\n\r\n\t  var _s, _e;\r\n\r\n\t  try {\r\n\t    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\r\n\t      _arr.push(_s.value);\r\n\r\n\t      if (i && _arr.length === i) break;\r\n\t    }\r\n\t  } catch (err) {\r\n\t    _d = true;\r\n\t    _e = err;\r\n\t  } finally {\r\n\t    try {\r\n\t      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\r\n\t    } finally {\r\n\t      if (_d) throw _e;\r\n\t    }\r\n\t  }\r\n\r\n\t  return _arr;\r\n\t}\r\n\r\n\tfunction _unsupportedIterableToArray(o, minLen) {\r\n\t  if (!o) return;\r\n\t  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\r\n\t  var n = Object.prototype.toString.call(o).slice(8, -1);\r\n\t  if (n === \"Object\" && o.constructor) n = o.constructor.name;\r\n\t  if (n === \"Map\" || n === \"Set\") return Array.from(o);\r\n\t  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\r\n\t}\r\n\r\n\tfunction _arrayLikeToArray(arr, len) {\r\n\t  if (len == null || len > arr.length) len = arr.length;\r\n\r\n\t  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\r\n\r\n\t  return arr2;\r\n\t}\r\n\r\n\tfunction _nonIterableRest() {\r\n\t  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\r\n\t}\r\n\r\n\t/**\r\n\t  Provides details of changing model value\r\n\t  @param {Object} [details]\r\n\t  @param {string} [details.inserted] - Inserted symbols\r\n\t  @param {boolean} [details.skip] - Can skip chars\r\n\t  @param {number} [details.removeCount] - Removed symbols count\r\n\t  @param {number} [details.tailShift] - Additional offset if any changes occurred before tail\r\n\t*/\r\n\tvar ChangeDetails = /*#__PURE__*/function () {\r\n\t  /** Inserted symbols */\r\n\r\n\t  /** Can skip chars */\r\n\r\n\t  /** Additional offset if any changes occurred before tail */\r\n\r\n\t  /** Raw inserted is used by dynamic mask */\r\n\t  function ChangeDetails(details) {\r\n\t    _classCallCheck(this, ChangeDetails);\r\n\r\n\t    Object.assign(this, {\r\n\t      inserted: '',\r\n\t      rawInserted: '',\r\n\t      skip: false,\r\n\t      tailShift: 0\r\n\t    }, details);\r\n\t  }\r\n\t  /**\r\n\t    Aggregate changes\r\n\t    @returns {ChangeDetails} `this`\r\n\t  */\r\n\r\n\r\n\t  _createClass(ChangeDetails, [{\r\n\t    key: \"aggregate\",\r\n\t    value: function aggregate(details) {\r\n\t      this.rawInserted += details.rawInserted;\r\n\t      this.skip = this.skip || details.skip;\r\n\t      this.inserted += details.inserted;\r\n\t      this.tailShift += details.tailShift;\r\n\t      return this;\r\n\t    }\r\n\t    /** Total offset considering all changes */\r\n\r\n\t  }, {\r\n\t    key: \"offset\",\r\n\t    get: function get() {\r\n\t      return this.tailShift + this.inserted.length;\r\n\t    }\r\n\t  }]);\r\n\r\n\t  return ChangeDetails;\r\n\t}();\r\n\r\n\t/** Checks if value is string */\r\n\r\n\tfunction isString(str) {\r\n\t  return typeof str === 'string' || str instanceof String;\r\n\t}\r\n\t/**\r\n\t  Direction\r\n\t  @prop {string} NONE\r\n\t  @prop {string} LEFT\r\n\t  @prop {string} FORCE_LEFT\r\n\t  @prop {string} RIGHT\r\n\t  @prop {string} FORCE_RIGHT\r\n\t*/\r\n\r\n\tvar DIRECTION = {\r\n\t  NONE: 'NONE',\r\n\t  LEFT: 'LEFT',\r\n\t  FORCE_LEFT: 'FORCE_LEFT',\r\n\t  RIGHT: 'RIGHT',\r\n\t  FORCE_RIGHT: 'FORCE_RIGHT'\r\n\t};\r\n\t/** */\r\n\r\n\tfunction forceDirection(direction) {\r\n\t  switch (direction) {\r\n\t    case DIRECTION.LEFT:\r\n\t      return DIRECTION.FORCE_LEFT;\r\n\r\n\t    case DIRECTION.RIGHT:\r\n\t      return DIRECTION.FORCE_RIGHT;\r\n\r\n\t    default:\r\n\t      return direction;\r\n\t  }\r\n\t}\r\n\t/** Escapes regular expression control chars */\r\n\r\n\tfunction escapeRegExp(str) {\r\n\t  return str.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\r\n\t}\r\n\tfunction normalizePrepare(prep) {\r\n\t  return Array.isArray(prep) ? prep : [prep, new ChangeDetails()];\r\n\t} // cloned from https://github.com/epoberezkin/fast-deep-equal with small changes\r\n\r\n\tfunction objectIncludes(b, a) {\r\n\t  if (a === b) return true;\r\n\t  var arrA = Array.isArray(a),\r\n\t      arrB = Array.isArray(b),\r\n\t      i;\r\n\r\n\t  if (arrA && arrB) {\r\n\t    if (a.length != b.length) return false;\r\n\r\n\t    for (i = 0; i < a.length; i++) {\r\n\t      if (!objectIncludes(a[i], b[i])) return false;\r\n\t    }\r\n\r\n\t    return true;\r\n\t  }\r\n\r\n\t  if (arrA != arrB) return false;\r\n\r\n\t  if (a && b && _typeof(a) === 'object' && _typeof(b) === 'object') {\r\n\t    var dateA = a instanceof Date,\r\n\t        dateB = b instanceof Date;\r\n\t    if (dateA && dateB) return a.getTime() == b.getTime();\r\n\t    if (dateA != dateB) return false;\r\n\t    var regexpA = a instanceof RegExp,\r\n\t        regexpB = b instanceof RegExp;\r\n\t    if (regexpA && regexpB) return a.toString() == b.toString();\r\n\t    if (regexpA != regexpB) return false;\r\n\t    var keys = Object.keys(a); // if (keys.length !== Object.keys(b).length) return false;\r\n\r\n\t    for (i = 0; i < keys.length; i++) {\r\n\t      // $FlowFixMe ... ???\r\n\t      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\r\n\t    }\r\n\r\n\t    for (i = 0; i < keys.length; i++) {\r\n\t      if (!objectIncludes(b[keys[i]], a[keys[i]])) return false;\r\n\t    }\r\n\r\n\t    return true;\r\n\t  } else if (a && b && typeof a === 'function' && typeof b === 'function') {\r\n\t    return a.toString() === b.toString();\r\n\t  }\r\n\r\n\t  return false;\r\n\t}\r\n\t/** Selection range */\r\n\r\n\t/** Provides details of changing input */\r\n\r\n\tvar ActionDetails = /*#__PURE__*/function () {\r\n\t  /** Current input value */\r\n\r\n\t  /** Current cursor position */\r\n\r\n\t  /** Old input value */\r\n\r\n\t  /** Old selection */\r\n\t  function ActionDetails(value, cursorPos, oldValue, oldSelection) {\r\n\t    _classCallCheck(this, ActionDetails);\r\n\r\n\t    this.value = value;\r\n\t    this.cursorPos = cursorPos;\r\n\t    this.oldValue = oldValue;\r\n\t    this.oldSelection = oldSelection; // double check if left part was changed (autofilling, other non-standard input triggers)\r\n\r\n\t    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\r\n\t      --this.oldSelection.start;\r\n\t    }\r\n\t  }\r\n\t  /**\r\n\t    Start changing position\r\n\t    @readonly\r\n\t  */\r\n\r\n\r\n\t  _createClass(ActionDetails, [{\r\n\t    key: \"startChangePos\",\r\n\t    get: function get() {\r\n\t      return Math.min(this.cursorPos, this.oldSelection.start);\r\n\t    }\r\n\t    /**\r\n\t      Inserted symbols count\r\n\t      @readonly\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"insertedCount\",\r\n\t    get: function get() {\r\n\t      return this.cursorPos - this.startChangePos;\r\n\t    }\r\n\t    /**\r\n\t      Inserted symbols\r\n\t      @readonly\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"inserted\",\r\n\t    get: function get() {\r\n\t      return this.value.substr(this.startChangePos, this.insertedCount);\r\n\t    }\r\n\t    /**\r\n\t      Removed symbols count\r\n\t      @readonly\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"removedCount\",\r\n\t    get: function get() {\r\n\t      // Math.max for opposite operation\r\n\t      return Math.max(this.oldSelection.end - this.startChangePos || // for Delete\r\n\t      this.oldValue.length - this.value.length, 0);\r\n\t    }\r\n\t    /**\r\n\t      Removed symbols\r\n\t      @readonly\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"removed\",\r\n\t    get: function get() {\r\n\t      return this.oldValue.substr(this.startChangePos, this.removedCount);\r\n\t    }\r\n\t    /**\r\n\t      Unchanged head symbols\r\n\t      @readonly\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"head\",\r\n\t    get: function get() {\r\n\t      return this.value.substring(0, this.startChangePos);\r\n\t    }\r\n\t    /**\r\n\t      Unchanged tail symbols\r\n\t      @readonly\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"tail\",\r\n\t    get: function get() {\r\n\t      return this.value.substring(this.startChangePos + this.insertedCount);\r\n\t    }\r\n\t    /**\r\n\t      Remove direction\r\n\t      @readonly\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"removeDirection\",\r\n\t    get: function get() {\r\n\t      if (!this.removedCount || this.insertedCount) return DIRECTION.NONE; // align right if delete at right\r\n\r\n\t      return (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) && // if not range removed (event with backspace)\r\n\t      this.oldSelection.end === this.oldSelection.start ? DIRECTION.RIGHT : DIRECTION.LEFT;\r\n\t    }\r\n\t  }]);\r\n\r\n\t  return ActionDetails;\r\n\t}();\r\n\r\n\t/** Provides details of continuous extracted tail */\r\n\tvar ContinuousTailDetails = /*#__PURE__*/function () {\r\n\t  /** Tail value as string */\r\n\r\n\t  /** Tail start position */\r\n\r\n\t  /** Start position */\r\n\t  function ContinuousTailDetails() {\r\n\t    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\r\n\t    var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\r\n\t    var stop = arguments.length > 2 ? arguments[2] : undefined;\r\n\r\n\t    _classCallCheck(this, ContinuousTailDetails);\r\n\r\n\t    this.value = value;\r\n\t    this.from = from;\r\n\t    this.stop = stop;\r\n\t  }\r\n\r\n\t  _createClass(ContinuousTailDetails, [{\r\n\t    key: \"toString\",\r\n\t    value: function toString() {\r\n\t      return this.value;\r\n\t    }\r\n\t  }, {\r\n\t    key: \"extend\",\r\n\t    value: function extend(tail) {\r\n\t      this.value += String(tail);\r\n\t    }\r\n\t  }, {\r\n\t    key: \"appendTo\",\r\n\t    value: function appendTo(masked) {\r\n\t      return masked.append(this.toString(), {\r\n\t        tail: true\r\n\t      }).aggregate(masked._appendPlaceholder());\r\n\t    }\r\n\t  }, {\r\n\t    key: \"state\",\r\n\t    get: function get() {\r\n\t      return {\r\n\t        value: this.value,\r\n\t        from: this.from,\r\n\t        stop: this.stop\r\n\t      };\r\n\t    },\r\n\t    set: function set(state) {\r\n\t      Object.assign(this, state);\r\n\t    }\r\n\t  }, {\r\n\t    key: \"unshift\",\r\n\t    value: function unshift(beforePos) {\r\n\t      if (!this.value.length || beforePos != null && this.from >= beforePos) return '';\r\n\t      var shiftChar = this.value[0];\r\n\t      this.value = this.value.slice(1);\r\n\t      return shiftChar;\r\n\t    }\r\n\t  }, {\r\n\t    key: \"shift\",\r\n\t    value: function shift() {\r\n\t      if (!this.value.length) return '';\r\n\t      var shiftChar = this.value[this.value.length - 1];\r\n\t      this.value = this.value.slice(0, -1);\r\n\t      return shiftChar;\r\n\t    }\r\n\t  }]);\r\n\r\n\t  return ContinuousTailDetails;\r\n\t}();\r\n\r\n\t/**\r\n\t * Applies mask on element.\r\n\t * @constructor\r\n\t * @param {HTMLInputElement|HTMLTextAreaElement|MaskElement} el - Element to apply mask\r\n\t * @param {Object} opts - Custom mask options\r\n\t * @return {InputMask}\r\n\t */\r\n\tfunction IMask(el) {\r\n\t  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\t  // currently available only for input-like elements\r\n\t  return new IMask.InputMask(el, opts);\r\n\t}\r\n\r\n\t/** Supported mask type */\r\n\r\n\t/** Provides common masking stuff */\r\n\tvar Masked = /*#__PURE__*/function () {\r\n\t  // $Shape<MaskedOptions>; TODO after fix https://github.com/facebook/flow/issues/4773\r\n\r\n\t  /** @type {Mask} */\r\n\r\n\t  /** */\r\n\t  // $FlowFixMe no ideas\r\n\r\n\t  /** Transforms value before mask processing */\r\n\r\n\t  /** Validates if value is acceptable */\r\n\r\n\t  /** Does additional processing in the end of editing */\r\n\r\n\t  /** Format typed value to string */\r\n\r\n\t  /** Parse strgin to get typed value */\r\n\r\n\t  /** Enable characters overwriting */\r\n\r\n\t  /** */\r\n\r\n\t  /** */\r\n\t  function Masked(opts) {\r\n\t    _classCallCheck(this, Masked);\r\n\r\n\t    this._value = '';\r\n\r\n\t    this._update(Object.assign({}, Masked.DEFAULTS, opts));\r\n\r\n\t    this.isInitialized = true;\r\n\t  }\r\n\t  /** Sets and applies new options */\r\n\r\n\r\n\t  _createClass(Masked, [{\r\n\t    key: \"updateOptions\",\r\n\t    value: function updateOptions(opts) {\r\n\t      if (!Object.keys(opts).length) return; // $FlowFixMe\r\n\r\n\t      this.withValueRefresh(this._update.bind(this, opts));\r\n\t    }\r\n\t    /**\r\n\t      Sets new options\r\n\t      @protected\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"_update\",\r\n\t    value: function _update(opts) {\r\n\t      Object.assign(this, opts);\r\n\t    }\r\n\t    /** Mask state */\r\n\r\n\t  }, {\r\n\t    key: \"state\",\r\n\t    get: function get() {\r\n\t      return {\r\n\t        _value: this.value\r\n\t      };\r\n\t    },\r\n\t    set: function set(state) {\r\n\t      this._value = state._value;\r\n\t    }\r\n\t    /** Resets value */\r\n\r\n\t  }, {\r\n\t    key: \"reset\",\r\n\t    value: function reset() {\r\n\t      this._value = '';\r\n\t    }\r\n\t    /** */\r\n\r\n\t  }, {\r\n\t    key: \"value\",\r\n\t    get: function get() {\r\n\t      return this._value;\r\n\t    },\r\n\t    set: function set(value) {\r\n\t      this.resolve(value);\r\n\t    }\r\n\t    /** Resolve new value */\r\n\r\n\t  }, {\r\n\t    key: \"resolve\",\r\n\t    value: function resolve(value) {\r\n\t      this.reset();\r\n\t      this.append(value, {\r\n\t        input: true\r\n\t      }, '');\r\n\t      this.doCommit();\r\n\t      return this.value;\r\n\t    }\r\n\t    /** */\r\n\r\n\t  }, {\r\n\t    key: \"unmaskedValue\",\r\n\t    get: function get() {\r\n\t      return this.value;\r\n\t    },\r\n\t    set: function set(value) {\r\n\t      this.reset();\r\n\t      this.append(value, {}, '');\r\n\t      this.doCommit();\r\n\t    }\r\n\t    /** */\r\n\r\n\t  }, {\r\n\t    key: \"typedValue\",\r\n\t    get: function get() {\r\n\t      return this.doParse(this.value);\r\n\t    },\r\n\t    set: function set(value) {\r\n\t      this.value = this.doFormat(value);\r\n\t    }\r\n\t    /** Value that includes raw user input */\r\n\r\n\t  }, {\r\n\t    key: \"rawInputValue\",\r\n\t    get: function get() {\r\n\t      return this.extractInput(0, this.value.length, {\r\n\t        raw: true\r\n\t      });\r\n\t    },\r\n\t    set: function set(value) {\r\n\t      this.reset();\r\n\t      this.append(value, {\r\n\t        raw: true\r\n\t      }, '');\r\n\t      this.doCommit();\r\n\t    }\r\n\t    /** */\r\n\r\n\t  }, {\r\n\t    key: \"isComplete\",\r\n\t    get: function get() {\r\n\t      return true;\r\n\t    }\r\n\t    /** */\r\n\r\n\t  }, {\r\n\t    key: \"isFilled\",\r\n\t    get: function get() {\r\n\t      return this.isComplete;\r\n\t    }\r\n\t    /** Finds nearest input position in direction */\r\n\r\n\t  }, {\r\n\t    key: \"nearestInputPos\",\r\n\t    value: function nearestInputPos(cursorPos, direction) {\r\n\t      return cursorPos;\r\n\t    }\r\n\t    /** Extracts value in range considering flags */\r\n\r\n\t  }, {\r\n\t    key: \"extractInput\",\r\n\t    value: function extractInput() {\r\n\t      var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n\t      var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n\t      return this.value.slice(fromPos, toPos);\r\n\t    }\r\n\t    /** Extracts tail in range */\r\n\r\n\t  }, {\r\n\t    key: \"extractTail\",\r\n\t    value: function extractTail() {\r\n\t      var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n\t      var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n\t      return new ContinuousTailDetails(this.extractInput(fromPos, toPos), fromPos);\r\n\t    }\r\n\t    /** Appends tail */\r\n\t    // $FlowFixMe no ideas\r\n\r\n\t  }, {\r\n\t    key: \"appendTail\",\r\n\t    value: function appendTail(tail) {\r\n\t      if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\r\n\t      return tail.appendTo(this);\r\n\t    }\r\n\t    /** Appends char */\r\n\r\n\t  }, {\r\n\t    key: \"_appendCharRaw\",\r\n\t    value: function _appendCharRaw(ch) {\r\n\t      if (!ch) return new ChangeDetails();\r\n\t      this._value += ch;\r\n\t      return new ChangeDetails({\r\n\t        inserted: ch,\r\n\t        rawInserted: ch\r\n\t      });\r\n\t    }\r\n\t    /** Appends char */\r\n\r\n\t  }, {\r\n\t    key: \"_appendChar\",\r\n\t    value: function _appendChar(ch) {\r\n\t      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\t      var checkTail = arguments.length > 2 ? arguments[2] : undefined;\r\n\t      var consistentState = this.state;\r\n\t      var details;\r\n\r\n\t      var _normalizePrepare = normalizePrepare(this.doPrepare(ch, flags));\r\n\r\n\t      var _normalizePrepare2 = _slicedToArray(_normalizePrepare, 2);\r\n\r\n\t      ch = _normalizePrepare2[0];\r\n\t      details = _normalizePrepare2[1];\r\n\t      details = details.aggregate(this._appendCharRaw(ch, flags));\r\n\r\n\t      if (details.inserted) {\r\n\t        var consistentTail;\r\n\t        var appended = this.doValidate(flags) !== false;\r\n\r\n\t        if (appended && checkTail != null) {\r\n\t          // validation ok, check tail\r\n\t          var beforeTailState = this.state;\r\n\r\n\t          if (this.overwrite === true) {\r\n\t            consistentTail = checkTail.state;\r\n\t            checkTail.unshift(this.value.length);\r\n\t          }\r\n\r\n\t          var tailDetails = this.appendTail(checkTail);\r\n\t          appended = tailDetails.rawInserted === checkTail.toString(); // not ok, try shift\r\n\r\n\t          if (!(appended && tailDetails.inserted) && this.overwrite === 'shift') {\r\n\t            this.state = beforeTailState;\r\n\t            consistentTail = checkTail.state;\r\n\t            checkTail.shift();\r\n\t            tailDetails = this.appendTail(checkTail);\r\n\t            appended = tailDetails.rawInserted === checkTail.toString();\r\n\t          } // if ok, rollback state after tail\r\n\r\n\r\n\t          if (appended && tailDetails.inserted) this.state = beforeTailState;\r\n\t        } // revert all if something went wrong\r\n\r\n\r\n\t        if (!appended) {\r\n\t          details = new ChangeDetails();\r\n\t          this.state = consistentState;\r\n\t          if (checkTail && consistentTail) checkTail.state = consistentTail;\r\n\t        }\r\n\t      }\r\n\r\n\t      return details;\r\n\t    }\r\n\t    /** Appends optional placeholder at end */\r\n\r\n\t  }, {\r\n\t    key: \"_appendPlaceholder\",\r\n\t    value: function _appendPlaceholder() {\r\n\t      return new ChangeDetails();\r\n\t    }\r\n\t    /** Appends optional eager placeholder at end */\r\n\r\n\t  }, {\r\n\t    key: \"_appendEager\",\r\n\t    value: function _appendEager() {\r\n\t      return new ChangeDetails();\r\n\t    }\r\n\t    /** Appends symbols considering flags */\r\n\t    // $FlowFixMe no ideas\r\n\r\n\t  }, {\r\n\t    key: \"append\",\r\n\t    value: function append(str, flags, tail) {\r\n\t      if (!isString(str)) throw new Error('value should be string');\r\n\t      var details = new ChangeDetails();\r\n\t      var checkTail = isString(tail) ? new ContinuousTailDetails(String(tail)) : tail;\r\n\t      if (flags && flags.tail) flags._beforeTailState = this.state;\r\n\r\n\t      for (var ci = 0; ci < str.length; ++ci) {\r\n\t        details.aggregate(this._appendChar(str[ci], flags, checkTail));\r\n\t      } // append tail but aggregate only tailShift\r\n\r\n\r\n\t      if (checkTail != null) {\r\n\t        details.tailShift += this.appendTail(checkTail).tailShift; // TODO it's a good idea to clear state after appending ends\r\n\t        // but it causes bugs when one append calls another (when dynamic dispatch set rawInputValue)\r\n\t        // this._resetBeforeTailState();\r\n\t      }\r\n\r\n\t      if (this.eager && flags !== null && flags !== void 0 && flags.input && str) {\r\n\t        details.aggregate(this._appendEager());\r\n\t      }\r\n\r\n\t      return details;\r\n\t    }\r\n\t    /** */\r\n\r\n\t  }, {\r\n\t    key: \"remove\",\r\n\t    value: function remove() {\r\n\t      var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n\t      var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n\t      this._value = this.value.slice(0, fromPos) + this.value.slice(toPos);\r\n\t      return new ChangeDetails();\r\n\t    }\r\n\t    /** Calls function and reapplies current value */\r\n\r\n\t  }, {\r\n\t    key: \"withValueRefresh\",\r\n\t    value: function withValueRefresh(fn) {\r\n\t      if (this._refreshing || !this.isInitialized) return fn();\r\n\t      this._refreshing = true;\r\n\t      var rawInput = this.rawInputValue;\r\n\t      var value = this.value;\r\n\t      var ret = fn();\r\n\t      this.rawInputValue = rawInput; // append lost trailing chars at end\r\n\r\n\t      if (this.value && this.value !== value && value.indexOf(this.value) === 0) {\r\n\t        this.append(value.slice(this.value.length), {}, '');\r\n\t      }\r\n\r\n\t      delete this._refreshing;\r\n\t      return ret;\r\n\t    }\r\n\t    /** */\r\n\r\n\t  }, {\r\n\t    key: \"runIsolated\",\r\n\t    value: function runIsolated(fn) {\r\n\t      if (this._isolated || !this.isInitialized) return fn(this);\r\n\t      this._isolated = true;\r\n\t      var state = this.state;\r\n\t      var ret = fn(this);\r\n\t      this.state = state;\r\n\t      delete this._isolated;\r\n\t      return ret;\r\n\t    }\r\n\t    /**\r\n\t      Prepares string before mask processing\r\n\t      @protected\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"doPrepare\",\r\n\t    value: function doPrepare(str) {\r\n\t      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\t      return this.prepare ? this.prepare(str, this, flags) : str;\r\n\t    }\r\n\t    /**\r\n\t      Validates if value is acceptable\r\n\t      @protected\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"doValidate\",\r\n\t    value: function doValidate(flags) {\r\n\t      return (!this.validate || this.validate(this.value, this, flags)) && (!this.parent || this.parent.doValidate(flags));\r\n\t    }\r\n\t    /**\r\n\t      Does additional processing in the end of editing\r\n\t      @protected\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"doCommit\",\r\n\t    value: function doCommit() {\r\n\t      if (this.commit) this.commit(this.value, this);\r\n\t    }\r\n\t    /** */\r\n\r\n\t  }, {\r\n\t    key: \"doFormat\",\r\n\t    value: function doFormat(value) {\r\n\t      return this.format ? this.format(value, this) : value;\r\n\t    }\r\n\t    /** */\r\n\r\n\t  }, {\r\n\t    key: \"doParse\",\r\n\t    value: function doParse(str) {\r\n\t      return this.parse ? this.parse(str, this) : str;\r\n\t    }\r\n\t    /** */\r\n\r\n\t  }, {\r\n\t    key: \"splice\",\r\n\t    value: function splice(start, deleteCount, inserted, removeDirection) {\r\n\t      var tailPos = start + deleteCount;\r\n\t      var tail = this.extractTail(tailPos);\r\n\t      var oldRawValue;\r\n\r\n\t      if (this.eager) {\r\n\t        removeDirection = forceDirection(removeDirection);\r\n\t        oldRawValue = this.extractInput(0, tailPos, {\r\n\t          raw: true\r\n\t        });\r\n\t      }\r\n\r\n\t      var startChangePos = this.nearestInputPos(start, deleteCount > 1 && start !== 0 && !this.eager ? DIRECTION.NONE : removeDirection);\r\n\t      var details = new ChangeDetails({\r\n\t        tailShift: startChangePos - start // adjust tailShift if start was aligned\r\n\r\n\t      }).aggregate(this.remove(startChangePos));\r\n\r\n\t      if (this.eager && removeDirection !== DIRECTION.NONE && oldRawValue === this.rawInputValue) {\r\n\t        if (removeDirection === DIRECTION.FORCE_LEFT) {\r\n\t          var valLength;\r\n\r\n\t          while (oldRawValue === this.rawInputValue && (valLength = this.value.length)) {\r\n\t            details.aggregate(new ChangeDetails({\r\n\t              tailShift: -1\r\n\t            })).aggregate(this.remove(valLength - 1));\r\n\t          }\r\n\t        } else if (removeDirection === DIRECTION.FORCE_RIGHT) {\r\n\t          tail.unshift();\r\n\t        }\r\n\t      }\r\n\r\n\t      return details.aggregate(this.append(inserted, {\r\n\t        input: true\r\n\t      }, tail));\r\n\t    }\r\n\t  }, {\r\n\t    key: \"maskEquals\",\r\n\t    value: function maskEquals(mask) {\r\n\t      return this.mask === mask;\r\n\t    }\r\n\t  }]);\r\n\r\n\t  return Masked;\r\n\t}();\r\n\tMasked.DEFAULTS = {\r\n\t  format: function format(v) {\r\n\t    return v;\r\n\t  },\r\n\t  parse: function parse(v) {\r\n\t    return v;\r\n\t  }\r\n\t};\r\n\tIMask.Masked = Masked;\r\n\r\n\t/** Get Masked class by mask type */\r\n\r\n\tfunction maskedClass(mask) {\r\n\t  if (mask == null) {\r\n\t    throw new Error('mask property should be defined');\r\n\t  } // $FlowFixMe\r\n\r\n\r\n\t  if (mask instanceof RegExp) return IMask.MaskedRegExp; // $FlowFixMe\r\n\r\n\t  if (isString(mask)) return IMask.MaskedPattern; // $FlowFixMe\r\n\r\n\t  if (mask instanceof Date || mask === Date) return IMask.MaskedDate; // $FlowFixMe\r\n\r\n\t  if (mask instanceof Number || typeof mask === 'number' || mask === Number) return IMask.MaskedNumber; // $FlowFixMe\r\n\r\n\t  if (Array.isArray(mask) || mask === Array) return IMask.MaskedDynamic; // $FlowFixMe\r\n\r\n\t  if (IMask.Masked && mask.prototype instanceof IMask.Masked) return mask; // $FlowFixMe\r\n\r\n\t  if (mask instanceof IMask.Masked) return mask.constructor; // $FlowFixMe\r\n\r\n\t  if (mask instanceof Function) return IMask.MaskedFunction;\r\n\t  console.warn('Mask not found for mask', mask); // eslint-disable-line no-console\r\n\t  // $FlowFixMe\r\n\r\n\t  return IMask.Masked;\r\n\t}\r\n\t/** Creates new {@link Masked} depending on mask type */\r\n\r\n\tfunction createMask(opts) {\r\n\t  // $FlowFixMe\r\n\t  if (IMask.Masked && opts instanceof IMask.Masked) return opts;\r\n\t  opts = Object.assign({}, opts);\r\n\t  var mask = opts.mask; // $FlowFixMe\r\n\r\n\t  if (IMask.Masked && mask instanceof IMask.Masked) return mask;\r\n\t  var MaskedClass = maskedClass(mask);\r\n\t  if (!MaskedClass) throw new Error('Masked class is not found for provided mask, appropriate module needs to be import manually before creating mask.');\r\n\t  return new MaskedClass(opts);\r\n\t}\r\n\tIMask.createMask = createMask;\r\n\r\n\tvar _excluded$4 = [\"mask\"];\r\n\tvar DEFAULT_INPUT_DEFINITIONS = {\r\n\t  '0': /\\d/,\r\n\t  'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\r\n\t  // http://stackoverflow.com/a/22075070\r\n\t  '*': /./\r\n\t};\r\n\t/** */\r\n\r\n\tvar PatternInputDefinition = /*#__PURE__*/function () {\r\n\t  /** */\r\n\r\n\t  /** */\r\n\r\n\t  /** */\r\n\r\n\t  /** */\r\n\r\n\t  /** */\r\n\r\n\t  /** */\r\n\r\n\t  /** */\r\n\t  function PatternInputDefinition(opts) {\r\n\t    _classCallCheck(this, PatternInputDefinition);\r\n\r\n\t    var mask = opts.mask,\r\n\t        blockOpts = _objectWithoutProperties(opts, _excluded$4);\r\n\r\n\t    this.masked = createMask({\r\n\t      mask: mask\r\n\t    });\r\n\t    Object.assign(this, blockOpts);\r\n\t  }\r\n\r\n\t  _createClass(PatternInputDefinition, [{\r\n\t    key: \"reset\",\r\n\t    value: function reset() {\r\n\t      this.isFilled = false;\r\n\t      this.masked.reset();\r\n\t    }\r\n\t  }, {\r\n\t    key: \"remove\",\r\n\t    value: function remove() {\r\n\t      var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n\t      var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n\r\n\t      if (fromPos === 0 && toPos >= 1) {\r\n\t        this.isFilled = false;\r\n\t        return this.masked.remove(fromPos, toPos);\r\n\t      }\r\n\r\n\t      return new ChangeDetails();\r\n\t    }\r\n\t  }, {\r\n\t    key: \"value\",\r\n\t    get: function get() {\r\n\t      return this.masked.value || (this.isFilled && !this.isOptional ? this.placeholderChar : '');\r\n\t    }\r\n\t  }, {\r\n\t    key: \"unmaskedValue\",\r\n\t    get: function get() {\r\n\t      return this.masked.unmaskedValue;\r\n\t    }\r\n\t  }, {\r\n\t    key: \"isComplete\",\r\n\t    get: function get() {\r\n\t      return Boolean(this.masked.value) || this.isOptional;\r\n\t    }\r\n\t  }, {\r\n\t    key: \"_appendChar\",\r\n\t    value: function _appendChar(ch) {\r\n\t      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\t      if (this.isFilled) return new ChangeDetails();\r\n\t      var state = this.masked.state; // simulate input\r\n\r\n\t      var details = this.masked._appendChar(ch, flags);\r\n\r\n\t      if (details.inserted && this.doValidate(flags) === false) {\r\n\t        details.inserted = details.rawInserted = '';\r\n\t        this.masked.state = state;\r\n\t      }\r\n\r\n\t      if (!details.inserted && !this.isOptional && !this.lazy && !flags.input) {\r\n\t        details.inserted = this.placeholderChar;\r\n\t      }\r\n\r\n\t      details.skip = !details.inserted && !this.isOptional;\r\n\t      this.isFilled = Boolean(details.inserted);\r\n\t      return details;\r\n\t    }\r\n\t  }, {\r\n\t    key: \"append\",\r\n\t    value: function append() {\r\n\t      var _this$masked;\r\n\r\n\t      // TODO probably should be done via _appendChar\r\n\t      return (_this$masked = this.masked).append.apply(_this$masked, arguments);\r\n\t    }\r\n\t  }, {\r\n\t    key: \"_appendPlaceholder\",\r\n\t    value: function _appendPlaceholder() {\r\n\t      var details = new ChangeDetails();\r\n\t      if (this.isFilled || this.isOptional) return details;\r\n\t      this.isFilled = true;\r\n\t      details.inserted = this.placeholderChar;\r\n\t      return details;\r\n\t    }\r\n\t  }, {\r\n\t    key: \"_appendEager\",\r\n\t    value: function _appendEager() {\r\n\t      return new ChangeDetails();\r\n\t    }\r\n\t  }, {\r\n\t    key: \"extractTail\",\r\n\t    value: function extractTail() {\r\n\t      var _this$masked2;\r\n\r\n\t      return (_this$masked2 = this.masked).extractTail.apply(_this$masked2, arguments);\r\n\t    }\r\n\t  }, {\r\n\t    key: \"appendTail\",\r\n\t    value: function appendTail() {\r\n\t      var _this$masked3;\r\n\r\n\t      return (_this$masked3 = this.masked).appendTail.apply(_this$masked3, arguments);\r\n\t    }\r\n\t  }, {\r\n\t    key: \"extractInput\",\r\n\t    value: function extractInput() {\r\n\t      var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n\t      var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n\t      var flags = arguments.length > 2 ? arguments[2] : undefined;\r\n\t      return this.masked.extractInput(fromPos, toPos, flags);\r\n\t    }\r\n\t  }, {\r\n\t    key: \"nearestInputPos\",\r\n\t    value: function nearestInputPos(cursorPos) {\r\n\t      var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DIRECTION.NONE;\r\n\t      var minPos = 0;\r\n\t      var maxPos = this.value.length;\r\n\t      var boundPos = Math.min(Math.max(cursorPos, minPos), maxPos);\r\n\r\n\t      switch (direction) {\r\n\t        case DIRECTION.LEFT:\r\n\t        case DIRECTION.FORCE_LEFT:\r\n\t          return this.isComplete ? boundPos : minPos;\r\n\r\n\t        case DIRECTION.RIGHT:\r\n\t        case DIRECTION.FORCE_RIGHT:\r\n\t          return this.isComplete ? boundPos : maxPos;\r\n\r\n\t        case DIRECTION.NONE:\r\n\t        default:\r\n\t          return boundPos;\r\n\t      }\r\n\t    }\r\n\t  }, {\r\n\t    key: \"doValidate\",\r\n\t    value: function doValidate() {\r\n\t      var _this$masked4, _this$parent;\r\n\r\n\t      return (_this$masked4 = this.masked).doValidate.apply(_this$masked4, arguments) && (!this.parent || (_this$parent = this.parent).doValidate.apply(_this$parent, arguments));\r\n\t    }\r\n\t  }, {\r\n\t    key: \"doCommit\",\r\n\t    value: function doCommit() {\r\n\t      this.masked.doCommit();\r\n\t    }\r\n\t  }, {\r\n\t    key: \"state\",\r\n\t    get: function get() {\r\n\t      return {\r\n\t        masked: this.masked.state,\r\n\t        isFilled: this.isFilled\r\n\t      };\r\n\t    },\r\n\t    set: function set(state) {\r\n\t      this.masked.state = state.masked;\r\n\t      this.isFilled = state.isFilled;\r\n\t    }\r\n\t  }]);\r\n\r\n\t  return PatternInputDefinition;\r\n\t}();\r\n\r\n\tvar PatternFixedDefinition = /*#__PURE__*/function () {\r\n\t  /** */\r\n\r\n\t  /** */\r\n\r\n\t  /** */\r\n\r\n\t  /** */\r\n\r\n\t  /** */\r\n\r\n\t  /** */\r\n\t  function PatternFixedDefinition(opts) {\r\n\t    _classCallCheck(this, PatternFixedDefinition);\r\n\r\n\t    Object.assign(this, opts);\r\n\t    this._value = '';\r\n\t    this.isFixed = true;\r\n\t  }\r\n\r\n\t  _createClass(PatternFixedDefinition, [{\r\n\t    key: \"value\",\r\n\t    get: function get() {\r\n\t      return this._value;\r\n\t    }\r\n\t  }, {\r\n\t    key: \"unmaskedValue\",\r\n\t    get: function get() {\r\n\t      return this.isUnmasking ? this.value : '';\r\n\t    }\r\n\t  }, {\r\n\t    key: \"reset\",\r\n\t    value: function reset() {\r\n\t      this._isRawInput = false;\r\n\t      this._value = '';\r\n\t    }\r\n\t  }, {\r\n\t    key: \"remove\",\r\n\t    value: function remove() {\r\n\t      var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n\t      var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._value.length;\r\n\t      this._value = this._value.slice(0, fromPos) + this._value.slice(toPos);\r\n\t      if (!this._value) this._isRawInput = false;\r\n\t      return new ChangeDetails();\r\n\t    }\r\n\t  }, {\r\n\t    key: \"nearestInputPos\",\r\n\t    value: function nearestInputPos(cursorPos) {\r\n\t      var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DIRECTION.NONE;\r\n\t      var minPos = 0;\r\n\t      var maxPos = this._value.length;\r\n\r\n\t      switch (direction) {\r\n\t        case DIRECTION.LEFT:\r\n\t        case DIRECTION.FORCE_LEFT:\r\n\t          return minPos;\r\n\r\n\t        case DIRECTION.NONE:\r\n\t        case DIRECTION.RIGHT:\r\n\t        case DIRECTION.FORCE_RIGHT:\r\n\t        default:\r\n\t          return maxPos;\r\n\t      }\r\n\t    }\r\n\t  }, {\r\n\t    key: \"extractInput\",\r\n\t    value: function extractInput() {\r\n\t      var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n\t      var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._value.length;\r\n\t      var flags = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n\t      return flags.raw && this._isRawInput && this._value.slice(fromPos, toPos) || '';\r\n\t    }\r\n\t  }, {\r\n\t    key: \"isComplete\",\r\n\t    get: function get() {\r\n\t      return true;\r\n\t    }\r\n\t  }, {\r\n\t    key: \"isFilled\",\r\n\t    get: function get() {\r\n\t      return Boolean(this._value);\r\n\t    }\r\n\t  }, {\r\n\t    key: \"_appendChar\",\r\n\t    value: function _appendChar(ch) {\r\n\t      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\t      var details = new ChangeDetails();\r\n\t      if (this._value) return details;\r\n\t      var appended = this.char === ch;\r\n\t      var isResolved = appended && (this.isUnmasking || flags.input || flags.raw) && !this.eager && !flags.tail;\r\n\t      if (isResolved) details.rawInserted = this.char;\r\n\t      this._value = details.inserted = this.char;\r\n\t      this._isRawInput = isResolved && (flags.raw || flags.input);\r\n\t      return details;\r\n\t    }\r\n\t  }, {\r\n\t    key: \"_appendEager\",\r\n\t    value: function _appendEager() {\r\n\t      return this._appendChar(this.char);\r\n\t    }\r\n\t  }, {\r\n\t    key: \"_appendPlaceholder\",\r\n\t    value: function _appendPlaceholder() {\r\n\t      var details = new ChangeDetails();\r\n\t      if (this._value) return details;\r\n\t      this._value = details.inserted = this.char;\r\n\t      return details;\r\n\t    }\r\n\t  }, {\r\n\t    key: \"extractTail\",\r\n\t    value: function extractTail() {\r\n\t      arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n\t      return new ContinuousTailDetails('');\r\n\t    } // $FlowFixMe no ideas\r\n\r\n\t  }, {\r\n\t    key: \"appendTail\",\r\n\t    value: function appendTail(tail) {\r\n\t      if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\r\n\t      return tail.appendTo(this);\r\n\t    }\r\n\t  }, {\r\n\t    key: \"append\",\r\n\t    value: function append(str, flags, tail) {\r\n\t      var details = this._appendChar(str[0], flags);\r\n\r\n\t      if (tail != null) {\r\n\t        details.tailShift += this.appendTail(tail).tailShift;\r\n\t      }\r\n\r\n\t      return details;\r\n\t    }\r\n\t  }, {\r\n\t    key: \"doCommit\",\r\n\t    value: function doCommit() {}\r\n\t  }, {\r\n\t    key: \"state\",\r\n\t    get: function get() {\r\n\t      return {\r\n\t        _value: this._value,\r\n\t        _isRawInput: this._isRawInput\r\n\t      };\r\n\t    },\r\n\t    set: function set(state) {\r\n\t      Object.assign(this, state);\r\n\t    }\r\n\t  }]);\r\n\r\n\t  return PatternFixedDefinition;\r\n\t}();\r\n\r\n\tvar _excluded$3 = [\"chunks\"];\r\n\r\n\tvar ChunksTailDetails = /*#__PURE__*/function () {\r\n\t  /** */\r\n\t  function ChunksTailDetails() {\r\n\t    var chunks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\r\n\t    var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\r\n\r\n\t    _classCallCheck(this, ChunksTailDetails);\r\n\r\n\t    this.chunks = chunks;\r\n\t    this.from = from;\r\n\t  }\r\n\r\n\t  _createClass(ChunksTailDetails, [{\r\n\t    key: \"toString\",\r\n\t    value: function toString() {\r\n\t      return this.chunks.map(String).join('');\r\n\t    } // $FlowFixMe no ideas\r\n\r\n\t  }, {\r\n\t    key: \"extend\",\r\n\t    value: function extend(tailChunk) {\r\n\t      if (!String(tailChunk)) return;\r\n\t      if (isString(tailChunk)) tailChunk = new ContinuousTailDetails(String(tailChunk));\r\n\t      var lastChunk = this.chunks[this.chunks.length - 1];\r\n\t      var extendLast = lastChunk && ( // if stops are same or tail has no stop\r\n\t      lastChunk.stop === tailChunk.stop || tailChunk.stop == null) && // if tail chunk goes just after last chunk\r\n\t      tailChunk.from === lastChunk.from + lastChunk.toString().length;\r\n\r\n\t      if (tailChunk instanceof ContinuousTailDetails) {\r\n\t        // check the ability to extend previous chunk\r\n\t        if (extendLast) {\r\n\t          // extend previous chunk\r\n\t          lastChunk.extend(tailChunk.toString());\r\n\t        } else {\r\n\t          // append new chunk\r\n\t          this.chunks.push(tailChunk);\r\n\t        }\r\n\t      } else if (tailChunk instanceof ChunksTailDetails) {\r\n\t        if (tailChunk.stop == null) {\r\n\t          // unwrap floating chunks to parent, keeping `from` pos\r\n\t          var firstTailChunk;\r\n\r\n\t          while (tailChunk.chunks.length && tailChunk.chunks[0].stop == null) {\r\n\t            firstTailChunk = tailChunk.chunks.shift();\r\n\t            firstTailChunk.from += tailChunk.from;\r\n\t            this.extend(firstTailChunk);\r\n\t          }\r\n\t        } // if tail chunk still has value\r\n\r\n\r\n\t        if (tailChunk.toString()) {\r\n\t          // if chunks contains stops, then popup stop to container\r\n\t          tailChunk.stop = tailChunk.blockIndex;\r\n\t          this.chunks.push(tailChunk);\r\n\t        }\r\n\t      }\r\n\t    }\r\n\t  }, {\r\n\t    key: \"appendTo\",\r\n\t    value: function appendTo(masked) {\r\n\t      // $FlowFixMe\r\n\t      if (!(masked instanceof IMask.MaskedPattern)) {\r\n\t        var tail = new ContinuousTailDetails(this.toString());\r\n\t        return tail.appendTo(masked);\r\n\t      }\r\n\r\n\t      var details = new ChangeDetails();\r\n\r\n\t      for (var ci = 0; ci < this.chunks.length && !details.skip; ++ci) {\r\n\t        var chunk = this.chunks[ci];\r\n\r\n\t        var lastBlockIter = masked._mapPosToBlock(masked.value.length);\r\n\r\n\t        var stop = chunk.stop;\r\n\t        var chunkBlock = void 0;\r\n\r\n\t        if (stop != null && ( // if block not found or stop is behind lastBlock\r\n\t        !lastBlockIter || lastBlockIter.index <= stop)) {\r\n\t          if (chunk instanceof ChunksTailDetails || // for continuous block also check if stop is exist\r\n\t          masked._stops.indexOf(stop) >= 0) {\r\n\t            details.aggregate(masked._appendPlaceholder(stop));\r\n\t          }\r\n\r\n\t          chunkBlock = chunk instanceof ChunksTailDetails && masked._blocks[stop];\r\n\t        }\r\n\r\n\t        if (chunkBlock) {\r\n\t          var tailDetails = chunkBlock.appendTail(chunk);\r\n\t          tailDetails.skip = false; // always ignore skip, it will be set on last\r\n\r\n\t          details.aggregate(tailDetails);\r\n\t          masked._value += tailDetails.inserted; // get not inserted chars\r\n\r\n\t          var remainChars = chunk.toString().slice(tailDetails.rawInserted.length);\r\n\t          if (remainChars) details.aggregate(masked.append(remainChars, {\r\n\t            tail: true\r\n\t          }));\r\n\t        } else {\r\n\t          details.aggregate(masked.append(chunk.toString(), {\r\n\t            tail: true\r\n\t          }));\r\n\t        }\r\n\t      }\r\n\t      return details;\r\n\t    }\r\n\t  }, {\r\n\t    key: \"state\",\r\n\t    get: function get() {\r\n\t      return {\r\n\t        chunks: this.chunks.map(function (c) {\r\n\t          return c.state;\r\n\t        }),\r\n\t        from: this.from,\r\n\t        stop: this.stop,\r\n\t        blockIndex: this.blockIndex\r\n\t      };\r\n\t    },\r\n\t    set: function set(state) {\r\n\t      var chunks = state.chunks,\r\n\t          props = _objectWithoutProperties(state, _excluded$3);\r\n\r\n\t      Object.assign(this, props);\r\n\t      this.chunks = chunks.map(function (cstate) {\r\n\t        var chunk = \"chunks\" in cstate ? new ChunksTailDetails() : new ContinuousTailDetails(); // $FlowFixMe already checked above\r\n\r\n\t        chunk.state = cstate;\r\n\t        return chunk;\r\n\t      });\r\n\t    }\r\n\t  }, {\r\n\t    key: \"unshift\",\r\n\t    value: function unshift(beforePos) {\r\n\t      if (!this.chunks.length || beforePos != null && this.from >= beforePos) return '';\r\n\t      var chunkShiftPos = beforePos != null ? beforePos - this.from : beforePos;\r\n\t      var ci = 0;\r\n\r\n\t      while (ci < this.chunks.length) {\r\n\t        var chunk = this.chunks[ci];\r\n\t        var shiftChar = chunk.unshift(chunkShiftPos);\r\n\r\n\t        if (chunk.toString()) {\r\n\t          // chunk still contains value\r\n\t          // but not shifted - means no more available chars to shift\r\n\t          if (!shiftChar) break;\r\n\t          ++ci;\r\n\t        } else {\r\n\t          // clean if chunk has no value\r\n\t          this.chunks.splice(ci, 1);\r\n\t        }\r\n\r\n\t        if (shiftChar) return shiftChar;\r\n\t      }\r\n\r\n\t      return '';\r\n\t    }\r\n\t  }, {\r\n\t    key: \"shift\",\r\n\t    value: function shift() {\r\n\t      if (!this.chunks.length) return '';\r\n\t      var ci = this.chunks.length - 1;\r\n\r\n\t      while (0 <= ci) {\r\n\t        var chunk = this.chunks[ci];\r\n\t        var shiftChar = chunk.shift();\r\n\r\n\t        if (chunk.toString()) {\r\n\t          // chunk still contains value\r\n\t          // but not shifted - means no more available chars to shift\r\n\t          if (!shiftChar) break;\r\n\t          --ci;\r\n\t        } else {\r\n\t          // clean if chunk has no value\r\n\t          this.chunks.splice(ci, 1);\r\n\t        }\r\n\r\n\t        if (shiftChar) return shiftChar;\r\n\t      }\r\n\r\n\t      return '';\r\n\t    }\r\n\t  }]);\r\n\r\n\t  return ChunksTailDetails;\r\n\t}();\r\n\r\n\tvar PatternCursor = /*#__PURE__*/function () {\r\n\t  function PatternCursor(masked, pos) {\r\n\t    _classCallCheck(this, PatternCursor);\r\n\r\n\t    this.masked = masked;\r\n\t    this._log = [];\r\n\r\n\t    var _ref = masked._mapPosToBlock(pos) || (pos < 0 ? // first\r\n\t    {\r\n\t      index: 0,\r\n\t      offset: 0\r\n\t    } : // last\r\n\t    {\r\n\t      index: this.masked._blocks.length,\r\n\t      offset: 0\r\n\t    }),\r\n\t        offset = _ref.offset,\r\n\t        index = _ref.index;\r\n\r\n\t    this.offset = offset;\r\n\t    this.index = index;\r\n\t    this.ok = false;\r\n\t  }\r\n\r\n\t  _createClass(PatternCursor, [{\r\n\t    key: \"block\",\r\n\t    get: function get() {\r\n\t      return this.masked._blocks[this.index];\r\n\t    }\r\n\t  }, {\r\n\t    key: \"pos\",\r\n\t    get: function get() {\r\n\t      return this.masked._blockStartPos(this.index) + this.offset;\r\n\t    }\r\n\t  }, {\r\n\t    key: \"state\",\r\n\t    get: function get() {\r\n\t      return {\r\n\t        index: this.index,\r\n\t        offset: this.offset,\r\n\t        ok: this.ok\r\n\t      };\r\n\t    },\r\n\t    set: function set(s) {\r\n\t      Object.assign(this, s);\r\n\t    }\r\n\t  }, {\r\n\t    key: \"pushState\",\r\n\t    value: function pushState() {\r\n\t      this._log.push(this.state);\r\n\t    }\r\n\t  }, {\r\n\t    key: \"popState\",\r\n\t    value: function popState() {\r\n\t      var s = this._log.pop();\r\n\r\n\t      this.state = s;\r\n\t      return s;\r\n\t    }\r\n\t  }, {\r\n\t    key: \"bindBlock\",\r\n\t    value: function bindBlock() {\r\n\t      if (this.block) return;\r\n\r\n\t      if (this.index < 0) {\r\n\t        this.index = 0;\r\n\t        this.offset = 0;\r\n\t      }\r\n\r\n\t      if (this.index >= this.masked._blocks.length) {\r\n\t        this.index = this.masked._blocks.length - 1;\r\n\t        this.offset = this.block.value.length;\r\n\t      }\r\n\t    }\r\n\t  }, {\r\n\t    key: \"_pushLeft\",\r\n\t    value: function _pushLeft(fn) {\r\n\t      this.pushState();\r\n\r\n\t      for (this.bindBlock(); 0 <= this.index; --this.index, this.offset = ((_this$block = this.block) === null || _this$block === void 0 ? void 0 : _this$block.value.length) || 0) {\r\n\t        var _this$block;\r\n\r\n\t        if (fn()) return this.ok = true;\r\n\t      }\r\n\r\n\t      return this.ok = false;\r\n\t    }\r\n\t  }, {\r\n\t    key: \"_pushRight\",\r\n\t    value: function _pushRight(fn) {\r\n\t      this.pushState();\r\n\r\n\t      for (this.bindBlock(); this.index < this.masked._blocks.length; ++this.index, this.offset = 0) {\r\n\t        if (fn()) return this.ok = true;\r\n\t      }\r\n\r\n\t      return this.ok = false;\r\n\t    }\r\n\t  }, {\r\n\t    key: \"pushLeftBeforeFilled\",\r\n\t    value: function pushLeftBeforeFilled() {\r\n\t      var _this = this;\r\n\r\n\t      return this._pushLeft(function () {\r\n\t        if (_this.block.isFixed || !_this.block.value) return;\r\n\t        _this.offset = _this.block.nearestInputPos(_this.offset, DIRECTION.FORCE_LEFT);\r\n\t        if (_this.offset !== 0) return true;\r\n\t      });\r\n\t    }\r\n\t  }, {\r\n\t    key: \"pushLeftBeforeInput\",\r\n\t    value: function pushLeftBeforeInput() {\r\n\t      var _this2 = this;\r\n\r\n\t      // cases:\r\n\t      // filled input: 00|\r\n\t      // optional empty input: 00[]|\r\n\t      // nested block: XX<[]>|\r\n\t      return this._pushLeft(function () {\r\n\t        if (_this2.block.isFixed) return;\r\n\t        _this2.offset = _this2.block.nearestInputPos(_this2.offset, DIRECTION.LEFT);\r\n\t        return true;\r\n\t      });\r\n\t    }\r\n\t  }, {\r\n\t    key: \"pushLeftBeforeRequired\",\r\n\t    value: function pushLeftBeforeRequired() {\r\n\t      var _this3 = this;\r\n\r\n\t      return this._pushLeft(function () {\r\n\t        if (_this3.block.isFixed || _this3.block.isOptional && !_this3.block.value) return;\r\n\t        _this3.offset = _this3.block.nearestInputPos(_this3.offset, DIRECTION.LEFT);\r\n\t        return true;\r\n\t      });\r\n\t    }\r\n\t  }, {\r\n\t    key: \"pushRightBeforeFilled\",\r\n\t    value: function pushRightBeforeFilled() {\r\n\t      var _this4 = this;\r\n\r\n\t      return this._pushRight(function () {\r\n\t        if (_this4.block.isFixed || !_this4.block.value) return;\r\n\t        _this4.offset = _this4.block.nearestInputPos(_this4.offset, DIRECTION.FORCE_RIGHT);\r\n\t        if (_this4.offset !== _this4.block.value.length) return true;\r\n\t      });\r\n\t    }\r\n\t  }, {\r\n\t    key: \"pushRightBeforeInput\",\r\n\t    value: function pushRightBeforeInput() {\r\n\t      var _this5 = this;\r\n\r\n\t      return this._pushRight(function () {\r\n\t        if (_this5.block.isFixed) return; // const o = this.offset;\r\n\r\n\t        _this5.offset = _this5.block.nearestInputPos(_this5.offset, DIRECTION.NONE); // HACK cases like (STILL DOES NOT WORK FOR NESTED)\r\n\t        // aa|X\r\n\t        // aa<X|[]>X_    - this will not work\r\n\t        // if (o && o === this.offset && this.block instanceof PatternInputDefinition) continue;\r\n\r\n\t        return true;\r\n\t      });\r\n\t    }\r\n\t  }, {\r\n\t    key: \"pushRightBeforeRequired\",\r\n\t    value: function pushRightBeforeRequired() {\r\n\t      var _this6 = this;\r\n\r\n\t      return this._pushRight(function () {\r\n\t        if (_this6.block.isFixed || _this6.block.isOptional && !_this6.block.value) return; // TODO check |[*]XX_\r\n\r\n\t        _this6.offset = _this6.block.nearestInputPos(_this6.offset, DIRECTION.NONE);\r\n\t        return true;\r\n\t      });\r\n\t    }\r\n\t  }]);\r\n\r\n\t  return PatternCursor;\r\n\t}();\r\n\r\n\t/** Masking by RegExp */\r\n\r\n\tvar MaskedRegExp = /*#__PURE__*/function (_Masked) {\r\n\t  _inherits(MaskedRegExp, _Masked);\r\n\r\n\t  var _super = _createSuper(MaskedRegExp);\r\n\r\n\t  function MaskedRegExp() {\r\n\t    _classCallCheck(this, MaskedRegExp);\r\n\r\n\t    return _super.apply(this, arguments);\r\n\t  }\r\n\r\n\t  _createClass(MaskedRegExp, [{\r\n\t    key: \"_update\",\r\n\t    value:\r\n\t    /**\r\n\t      @override\r\n\t      @param {Object} opts\r\n\t    */\r\n\t    function _update(opts) {\r\n\t      if (opts.mask) opts.validate = function (value) {\r\n\t        return value.search(opts.mask) >= 0;\r\n\t      };\r\n\r\n\t      _get(_getPrototypeOf(MaskedRegExp.prototype), \"_update\", this).call(this, opts);\r\n\t    }\r\n\t  }]);\r\n\r\n\t  return MaskedRegExp;\r\n\t}(Masked);\r\n\tIMask.MaskedRegExp = MaskedRegExp;\r\n\r\n\tvar _excluded$2 = [\"_blocks\"];\r\n\r\n\t/**\r\n\t  Pattern mask\r\n\t  @param {Object} opts\r\n\t  @param {Object} opts.blocks\r\n\t  @param {Object} opts.definitions\r\n\t  @param {string} opts.placeholderChar\r\n\t  @param {boolean} opts.lazy\r\n\t*/\r\n\tvar MaskedPattern = /*#__PURE__*/function (_Masked) {\r\n\t  _inherits(MaskedPattern, _Masked);\r\n\r\n\t  var _super = _createSuper(MaskedPattern);\r\n\r\n\t  /** */\r\n\r\n\t  /** */\r\n\r\n\t  /** Single char for empty input */\r\n\r\n\t  /** Show placeholder only when needed */\r\n\t  function MaskedPattern() {\r\n\t    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n\r\n\t    _classCallCheck(this, MaskedPattern);\r\n\r\n\t    // TODO type $Shape<MaskedPatternOptions>={} does not work\r\n\t    opts.definitions = Object.assign({}, DEFAULT_INPUT_DEFINITIONS, opts.definitions);\r\n\t    return _super.call(this, Object.assign({}, MaskedPattern.DEFAULTS, opts));\r\n\t  }\r\n\t  /**\r\n\t    @override\r\n\t    @param {Object} opts\r\n\t  */\r\n\r\n\r\n\t  _createClass(MaskedPattern, [{\r\n\t    key: \"_update\",\r\n\t    value: function _update() {\r\n\t      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n\t      opts.definitions = Object.assign({}, this.definitions, opts.definitions);\r\n\r\n\t      _get(_getPrototypeOf(MaskedPattern.prototype), \"_update\", this).call(this, opts);\r\n\r\n\t      this._rebuildMask();\r\n\t    }\r\n\t    /** */\r\n\r\n\t  }, {\r\n\t    key: \"_rebuildMask\",\r\n\t    value: function _rebuildMask() {\r\n\t      var _this = this;\r\n\r\n\t      var defs = this.definitions;\r\n\t      this._blocks = [];\r\n\t      this._stops = [];\r\n\t      this._maskedBlocks = {};\r\n\t      var pattern = this.mask;\r\n\t      if (!pattern || !defs) return;\r\n\t      var unmaskingBlock = false;\r\n\t      var optionalBlock = false;\r\n\r\n\t      for (var i = 0; i < pattern.length; ++i) {\r\n\t        if (this.blocks) {\r\n\t          var _ret = function () {\r\n\t            var p = pattern.slice(i);\r\n\t            var bNames = Object.keys(_this.blocks).filter(function (bName) {\r\n\t              return p.indexOf(bName) === 0;\r\n\t            }); // order by key length\r\n\r\n\t            bNames.sort(function (a, b) {\r\n\t              return b.length - a.length;\r\n\t            }); // use block name with max length\r\n\r\n\t            var bName = bNames[0];\r\n\r\n\t            if (bName) {\r\n\t              // $FlowFixMe no ideas\r\n\t              var maskedBlock = createMask(Object.assign({\r\n\t                parent: _this,\r\n\t                lazy: _this.lazy,\r\n\t                eager: _this.eager,\r\n\t                placeholderChar: _this.placeholderChar,\r\n\t                overwrite: _this.overwrite\r\n\t              }, _this.blocks[bName]));\r\n\r\n\t              if (maskedBlock) {\r\n\t                _this._blocks.push(maskedBlock); // store block index\r\n\r\n\r\n\t                if (!_this._maskedBlocks[bName]) _this._maskedBlocks[bName] = [];\r\n\r\n\t                _this._maskedBlocks[bName].push(_this._blocks.length - 1);\r\n\t              }\r\n\r\n\t              i += bName.length - 1;\r\n\t              return \"continue\";\r\n\t            }\r\n\t          }();\r\n\r\n\t          if (_ret === \"continue\") continue;\r\n\t        }\r\n\r\n\t        var char = pattern[i];\r\n\t        var isInput = (char in defs);\r\n\r\n\t        if (char === MaskedPattern.STOP_CHAR) {\r\n\t          this._stops.push(this._blocks.length);\r\n\r\n\t          continue;\r\n\t        }\r\n\r\n\t        if (char === '{' || char === '}') {\r\n\t          unmaskingBlock = !unmaskingBlock;\r\n\t          continue;\r\n\t        }\r\n\r\n\t        if (char === '[' || char === ']') {\r\n\t          optionalBlock = !optionalBlock;\r\n\t          continue;\r\n\t        }\r\n\r\n\t        if (char === MaskedPattern.ESCAPE_CHAR) {\r\n\t          ++i;\r\n\t          char = pattern[i];\r\n\t          if (!char) break;\r\n\t          isInput = false;\r\n\t        }\r\n\r\n\t        var def = isInput ? new PatternInputDefinition({\r\n\t          parent: this,\r\n\t          lazy: this.lazy,\r\n\t          eager: this.eager,\r\n\t          placeholderChar: this.placeholderChar,\r\n\t          mask: defs[char],\r\n\t          isOptional: optionalBlock\r\n\t        }) : new PatternFixedDefinition({\r\n\t          char: char,\r\n\t          eager: this.eager,\r\n\t          isUnmasking: unmaskingBlock\r\n\t        });\r\n\r\n\t        this._blocks.push(def);\r\n\t      }\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"state\",\r\n\t    get: function get() {\r\n\t      return Object.assign({}, _get(_getPrototypeOf(MaskedPattern.prototype), \"state\", this), {\r\n\t        _blocks: this._blocks.map(function (b) {\r\n\t          return b.state;\r\n\t        })\r\n\t      });\r\n\t    },\r\n\t    set: function set(state) {\r\n\t      var _blocks = state._blocks,\r\n\t          maskedState = _objectWithoutProperties(state, _excluded$2);\r\n\r\n\t      this._blocks.forEach(function (b, bi) {\r\n\t        return b.state = _blocks[bi];\r\n\t      });\r\n\r\n\t      _set(_getPrototypeOf(MaskedPattern.prototype), \"state\", maskedState, this, true);\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"reset\",\r\n\t    value: function reset() {\r\n\t      _get(_getPrototypeOf(MaskedPattern.prototype), \"reset\", this).call(this);\r\n\r\n\t      this._blocks.forEach(function (b) {\r\n\t        return b.reset();\r\n\t      });\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"isComplete\",\r\n\t    get: function get() {\r\n\t      return this._blocks.every(function (b) {\r\n\t        return b.isComplete;\r\n\t      });\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"isFilled\",\r\n\t    get: function get() {\r\n\t      return this._blocks.every(function (b) {\r\n\t        return b.isFilled;\r\n\t      });\r\n\t    }\r\n\t  }, {\r\n\t    key: \"isFixed\",\r\n\t    get: function get() {\r\n\t      return this._blocks.every(function (b) {\r\n\t        return b.isFixed;\r\n\t      });\r\n\t    }\r\n\t  }, {\r\n\t    key: \"isOptional\",\r\n\t    get: function get() {\r\n\t      return this._blocks.every(function (b) {\r\n\t        return b.isOptional;\r\n\t      });\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"doCommit\",\r\n\t    value: function doCommit() {\r\n\t      this._blocks.forEach(function (b) {\r\n\t        return b.doCommit();\r\n\t      });\r\n\r\n\t      _get(_getPrototypeOf(MaskedPattern.prototype), \"doCommit\", this).call(this);\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"unmaskedValue\",\r\n\t    get: function get() {\r\n\t      return this._blocks.reduce(function (str, b) {\r\n\t        return str += b.unmaskedValue;\r\n\t      }, '');\r\n\t    },\r\n\t    set: function set(unmaskedValue) {\r\n\t      _set(_getPrototypeOf(MaskedPattern.prototype), \"unmaskedValue\", unmaskedValue, this, true);\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"value\",\r\n\t    get: function get() {\r\n\t      // TODO return _value when not in change?\r\n\t      return this._blocks.reduce(function (str, b) {\r\n\t        return str += b.value;\r\n\t      }, '');\r\n\t    },\r\n\t    set: function set(value) {\r\n\t      _set(_getPrototypeOf(MaskedPattern.prototype), \"value\", value, this, true);\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"appendTail\",\r\n\t    value: function appendTail(tail) {\r\n\t      return _get(_getPrototypeOf(MaskedPattern.prototype), \"appendTail\", this).call(this, tail).aggregate(this._appendPlaceholder());\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"_appendEager\",\r\n\t    value: function _appendEager() {\r\n\t      var _this$_mapPosToBlock;\r\n\r\n\t      var details = new ChangeDetails();\r\n\t      var startBlockIndex = (_this$_mapPosToBlock = this._mapPosToBlock(this.value.length)) === null || _this$_mapPosToBlock === void 0 ? void 0 : _this$_mapPosToBlock.index;\r\n\t      if (startBlockIndex == null) return details; // TODO test if it works for nested pattern masks\r\n\r\n\t      if (this._blocks[startBlockIndex].isFilled) ++startBlockIndex;\r\n\r\n\t      for (var bi = startBlockIndex; bi < this._blocks.length; ++bi) {\r\n\t        var d = this._blocks[bi]._appendEager();\r\n\r\n\t        if (!d.inserted) break;\r\n\t        details.aggregate(d);\r\n\t      }\r\n\r\n\t      return details;\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"_appendCharRaw\",\r\n\t    value: function _appendCharRaw(ch) {\r\n\t      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\r\n\t      var blockIter = this._mapPosToBlock(this.value.length);\r\n\r\n\t      var details = new ChangeDetails();\r\n\t      if (!blockIter) return details;\r\n\r\n\t      for (var bi = blockIter.index;; ++bi) {\r\n\t        var _flags$_beforeTailSta;\r\n\r\n\t        var _block = this._blocks[bi];\r\n\t        if (!_block) break;\r\n\r\n\t        var blockDetails = _block._appendChar(ch, Object.assign({}, flags, {\r\n\t          _beforeTailState: (_flags$_beforeTailSta = flags._beforeTailState) === null || _flags$_beforeTailSta === void 0 ? void 0 : _flags$_beforeTailSta._blocks[bi]\r\n\t        }));\r\n\r\n\t        var skip = blockDetails.skip;\r\n\t        details.aggregate(blockDetails);\r\n\t        if (skip || blockDetails.rawInserted) break; // go next char\r\n\t      }\r\n\r\n\t      return details;\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"extractTail\",\r\n\t    value: function extractTail() {\r\n\t      var _this2 = this;\r\n\r\n\t      var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n\t      var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n\t      var chunkTail = new ChunksTailDetails();\r\n\t      if (fromPos === toPos) return chunkTail;\r\n\r\n\t      this._forEachBlocksInRange(fromPos, toPos, function (b, bi, bFromPos, bToPos) {\r\n\t        var blockChunk = b.extractTail(bFromPos, bToPos);\r\n\t        blockChunk.stop = _this2._findStopBefore(bi);\r\n\t        blockChunk.from = _this2._blockStartPos(bi);\r\n\t        if (blockChunk instanceof ChunksTailDetails) blockChunk.blockIndex = bi;\r\n\t        chunkTail.extend(blockChunk);\r\n\t      });\r\n\r\n\t      return chunkTail;\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"extractInput\",\r\n\t    value: function extractInput() {\r\n\t      var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n\t      var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n\t      var flags = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n\t      if (fromPos === toPos) return '';\r\n\t      var input = '';\r\n\r\n\t      this._forEachBlocksInRange(fromPos, toPos, function (b, _, fromPos, toPos) {\r\n\t        input += b.extractInput(fromPos, toPos, flags);\r\n\t      });\r\n\r\n\t      return input;\r\n\t    }\r\n\t  }, {\r\n\t    key: \"_findStopBefore\",\r\n\t    value: function _findStopBefore(blockIndex) {\r\n\t      var stopBefore;\r\n\r\n\t      for (var si = 0; si < this._stops.length; ++si) {\r\n\t        var stop = this._stops[si];\r\n\t        if (stop <= blockIndex) stopBefore = stop;else break;\r\n\t      }\r\n\r\n\t      return stopBefore;\r\n\t    }\r\n\t    /** Appends placeholder depending on laziness */\r\n\r\n\t  }, {\r\n\t    key: \"_appendPlaceholder\",\r\n\t    value: function _appendPlaceholder(toBlockIndex) {\r\n\t      var _this3 = this;\r\n\r\n\t      var details = new ChangeDetails();\r\n\t      if (this.lazy && toBlockIndex == null) return details;\r\n\r\n\t      var startBlockIter = this._mapPosToBlock(this.value.length);\r\n\r\n\t      if (!startBlockIter) return details;\r\n\t      var startBlockIndex = startBlockIter.index;\r\n\t      var endBlockIndex = toBlockIndex != null ? toBlockIndex : this._blocks.length;\r\n\r\n\t      this._blocks.slice(startBlockIndex, endBlockIndex).forEach(function (b) {\r\n\t        if (!b.lazy || toBlockIndex != null) {\r\n\t          // $FlowFixMe `_blocks` may not be present\r\n\t          var args = b._blocks != null ? [b._blocks.length] : [];\r\n\r\n\t          var bDetails = b._appendPlaceholder.apply(b, args);\r\n\r\n\t          _this3._value += bDetails.inserted;\r\n\t          details.aggregate(bDetails);\r\n\t        }\r\n\t      });\r\n\r\n\t      return details;\r\n\t    }\r\n\t    /** Finds block in pos */\r\n\r\n\t  }, {\r\n\t    key: \"_mapPosToBlock\",\r\n\t    value: function _mapPosToBlock(pos) {\r\n\t      var accVal = '';\r\n\r\n\t      for (var bi = 0; bi < this._blocks.length; ++bi) {\r\n\t        var _block2 = this._blocks[bi];\r\n\t        var blockStartPos = accVal.length;\r\n\t        accVal += _block2.value;\r\n\r\n\t        if (pos <= accVal.length) {\r\n\t          return {\r\n\t            index: bi,\r\n\t            offset: pos - blockStartPos\r\n\t          };\r\n\t        }\r\n\t      }\r\n\t    }\r\n\t    /** */\r\n\r\n\t  }, {\r\n\t    key: \"_blockStartPos\",\r\n\t    value: function _blockStartPos(blockIndex) {\r\n\t      return this._blocks.slice(0, blockIndex).reduce(function (pos, b) {\r\n\t        return pos += b.value.length;\r\n\t      }, 0);\r\n\t    }\r\n\t    /** */\r\n\r\n\t  }, {\r\n\t    key: \"_forEachBlocksInRange\",\r\n\t    value: function _forEachBlocksInRange(fromPos) {\r\n\t      var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n\t      var fn = arguments.length > 2 ? arguments[2] : undefined;\r\n\r\n\t      var fromBlockIter = this._mapPosToBlock(fromPos);\r\n\r\n\t      if (fromBlockIter) {\r\n\t        var toBlockIter = this._mapPosToBlock(toPos); // process first block\r\n\r\n\r\n\t        var isSameBlock = toBlockIter && fromBlockIter.index === toBlockIter.index;\r\n\t        var fromBlockStartPos = fromBlockIter.offset;\r\n\t        var fromBlockEndPos = toBlockIter && isSameBlock ? toBlockIter.offset : this._blocks[fromBlockIter.index].value.length;\r\n\t        fn(this._blocks[fromBlockIter.index], fromBlockIter.index, fromBlockStartPos, fromBlockEndPos);\r\n\r\n\t        if (toBlockIter && !isSameBlock) {\r\n\t          // process intermediate blocks\r\n\t          for (var bi = fromBlockIter.index + 1; bi < toBlockIter.index; ++bi) {\r\n\t            fn(this._blocks[bi], bi, 0, this._blocks[bi].value.length);\r\n\t          } // process last block\r\n\r\n\r\n\t          fn(this._blocks[toBlockIter.index], toBlockIter.index, 0, toBlockIter.offset);\r\n\t        }\r\n\t      }\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"remove\",\r\n\t    value: function remove() {\r\n\t      var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n\t      var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n\r\n\t      var removeDetails = _get(_getPrototypeOf(MaskedPattern.prototype), \"remove\", this).call(this, fromPos, toPos);\r\n\r\n\t      this._forEachBlocksInRange(fromPos, toPos, function (b, _, bFromPos, bToPos) {\r\n\t        removeDetails.aggregate(b.remove(bFromPos, bToPos));\r\n\t      });\r\n\r\n\t      return removeDetails;\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"nearestInputPos\",\r\n\t    value: function nearestInputPos(cursorPos) {\r\n\t      var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DIRECTION.NONE;\r\n\t      if (!this._blocks.length) return 0;\r\n\t      var cursor = new PatternCursor(this, cursorPos);\r\n\r\n\t      if (direction === DIRECTION.NONE) {\r\n\t        // -------------------------------------------------\r\n\t        // NONE should only go out from fixed to the right!\r\n\t        // -------------------------------------------------\r\n\t        if (cursor.pushRightBeforeInput()) return cursor.pos;\r\n\t        cursor.popState();\r\n\t        if (cursor.pushLeftBeforeInput()) return cursor.pos;\r\n\t        return this.value.length;\r\n\t      } // FORCE is only about a|* otherwise is 0\r\n\r\n\r\n\t      if (direction === DIRECTION.LEFT || direction === DIRECTION.FORCE_LEFT) {\r\n\t        // try to break fast when *|a\r\n\t        if (direction === DIRECTION.LEFT) {\r\n\t          cursor.pushRightBeforeFilled();\r\n\t          if (cursor.ok && cursor.pos === cursorPos) return cursorPos;\r\n\t          cursor.popState();\r\n\t        } // forward flow\r\n\r\n\r\n\t        cursor.pushLeftBeforeInput();\r\n\t        cursor.pushLeftBeforeRequired();\r\n\t        cursor.pushLeftBeforeFilled(); // backward flow\r\n\r\n\t        if (direction === DIRECTION.LEFT) {\r\n\t          cursor.pushRightBeforeInput();\r\n\t          cursor.pushRightBeforeRequired();\r\n\t          if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\r\n\t          cursor.popState();\r\n\t          if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\r\n\t          cursor.popState();\r\n\t        }\r\n\r\n\t        if (cursor.ok) return cursor.pos;\r\n\t        if (direction === DIRECTION.FORCE_LEFT) return 0;\r\n\t        cursor.popState();\r\n\t        if (cursor.ok) return cursor.pos;\r\n\t        cursor.popState();\r\n\t        if (cursor.ok) return cursor.pos; // cursor.popState();\r\n\t        // if (\r\n\t        //   cursor.pushRightBeforeInput() &&\r\n\t        //   // TODO HACK for lazy if has aligned left inside fixed and has came to the start - use start position\r\n\t        //   (!this.lazy || this.extractInput())\r\n\t        // ) return cursor.pos;\r\n\r\n\t        return 0;\r\n\t      }\r\n\r\n\t      if (direction === DIRECTION.RIGHT || direction === DIRECTION.FORCE_RIGHT) {\r\n\t        // forward flow\r\n\t        cursor.pushRightBeforeInput();\r\n\t        cursor.pushRightBeforeRequired();\r\n\t        if (cursor.pushRightBeforeFilled()) return cursor.pos;\r\n\t        if (direction === DIRECTION.FORCE_RIGHT) return this.value.length; // backward flow\r\n\r\n\t        cursor.popState();\r\n\t        if (cursor.ok) return cursor.pos;\r\n\t        cursor.popState();\r\n\t        if (cursor.ok) return cursor.pos;\r\n\t        return this.nearestInputPos(cursorPos, DIRECTION.LEFT);\r\n\t      }\r\n\r\n\t      return cursorPos;\r\n\t    }\r\n\t    /** Get block by name */\r\n\r\n\t  }, {\r\n\t    key: \"maskedBlock\",\r\n\t    value: function maskedBlock(name) {\r\n\t      return this.maskedBlocks(name)[0];\r\n\t    }\r\n\t    /** Get all blocks by name */\r\n\r\n\t  }, {\r\n\t    key: \"maskedBlocks\",\r\n\t    value: function maskedBlocks(name) {\r\n\t      var _this4 = this;\r\n\r\n\t      var indices = this._maskedBlocks[name];\r\n\t      if (!indices) return [];\r\n\t      return indices.map(function (gi) {\r\n\t        return _this4._blocks[gi];\r\n\t      });\r\n\t    }\r\n\t  }]);\r\n\r\n\t  return MaskedPattern;\r\n\t}(Masked);\r\n\tMaskedPattern.DEFAULTS = {\r\n\t  lazy: true,\r\n\t  placeholderChar: '_'\r\n\t};\r\n\tMaskedPattern.STOP_CHAR = '`';\r\n\tMaskedPattern.ESCAPE_CHAR = '\\\\';\r\n\tMaskedPattern.InputDefinition = PatternInputDefinition;\r\n\tMaskedPattern.FixedDefinition = PatternFixedDefinition;\r\n\tIMask.MaskedPattern = MaskedPattern;\r\n\r\n\t/** Pattern which accepts ranges */\r\n\r\n\tvar MaskedRange = /*#__PURE__*/function (_MaskedPattern) {\r\n\t  _inherits(MaskedRange, _MaskedPattern);\r\n\r\n\t  var _super = _createSuper(MaskedRange);\r\n\r\n\t  function MaskedRange() {\r\n\t    _classCallCheck(this, MaskedRange);\r\n\r\n\t    return _super.apply(this, arguments);\r\n\t  }\r\n\r\n\t  _createClass(MaskedRange, [{\r\n\t    key: \"_matchFrom\",\r\n\t    get:\r\n\t    /**\r\n\t      Optionally sets max length of pattern.\r\n\t      Used when pattern length is longer then `to` param length. Pads zeros at start in this case.\r\n\t    */\r\n\r\n\t    /** Min bound */\r\n\r\n\t    /** Max bound */\r\n\r\n\t    /** */\r\n\t    function get() {\r\n\t      return this.maxLength - String(this.from).length;\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"_update\",\r\n\t    value: function _update(opts) {\r\n\t      // TODO type\r\n\t      opts = Object.assign({\r\n\t        to: this.to || 0,\r\n\t        from: this.from || 0,\r\n\t        maxLength: this.maxLength || 0\r\n\t      }, opts);\r\n\t      var maxLength = String(opts.to).length;\r\n\t      if (opts.maxLength != null) maxLength = Math.max(maxLength, opts.maxLength);\r\n\t      opts.maxLength = maxLength;\r\n\t      var fromStr = String(opts.from).padStart(maxLength, '0');\r\n\t      var toStr = String(opts.to).padStart(maxLength, '0');\r\n\t      var sameCharsCount = 0;\r\n\r\n\t      while (sameCharsCount < toStr.length && toStr[sameCharsCount] === fromStr[sameCharsCount]) {\r\n\t        ++sameCharsCount;\r\n\t      }\r\n\r\n\t      opts.mask = toStr.slice(0, sameCharsCount).replace(/0/g, '\\\\0') + '0'.repeat(maxLength - sameCharsCount);\r\n\r\n\t      _get(_getPrototypeOf(MaskedRange.prototype), \"_update\", this).call(this, opts);\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"isComplete\",\r\n\t    get: function get() {\r\n\t      return _get(_getPrototypeOf(MaskedRange.prototype), \"isComplete\", this) && Boolean(this.value);\r\n\t    }\r\n\t  }, {\r\n\t    key: \"boundaries\",\r\n\t    value: function boundaries(str) {\r\n\t      var minstr = '';\r\n\t      var maxstr = '';\r\n\r\n\t      var _ref = str.match(/^(\\D*)(\\d*)(\\D*)/) || [],\r\n\t          _ref2 = _slicedToArray(_ref, 3),\r\n\t          placeholder = _ref2[1],\r\n\t          num = _ref2[2];\r\n\r\n\t      if (num) {\r\n\t        minstr = '0'.repeat(placeholder.length) + num;\r\n\t        maxstr = '9'.repeat(placeholder.length) + num;\r\n\t      }\r\n\r\n\t      minstr = minstr.padEnd(this.maxLength, '0');\r\n\t      maxstr = maxstr.padEnd(this.maxLength, '9');\r\n\t      return [minstr, maxstr];\r\n\t    } // TODO str is a single char everytime\r\n\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"doPrepare\",\r\n\t    value: function doPrepare(ch) {\r\n\t      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\t      var details;\r\n\r\n\t      var _normalizePrepare = normalizePrepare(_get(_getPrototypeOf(MaskedRange.prototype), \"doPrepare\", this).call(this, ch.replace(/\\D/g, ''), flags));\r\n\r\n\t      var _normalizePrepare2 = _slicedToArray(_normalizePrepare, 2);\r\n\r\n\t      ch = _normalizePrepare2[0];\r\n\t      details = _normalizePrepare2[1];\r\n\t      if (!this.autofix || !ch) return ch;\r\n\t      var fromStr = String(this.from).padStart(this.maxLength, '0');\r\n\t      var toStr = String(this.to).padStart(this.maxLength, '0');\r\n\t      var nextVal = this.value + ch;\r\n\t      if (nextVal.length > this.maxLength) return '';\r\n\r\n\t      var _this$boundaries = this.boundaries(nextVal),\r\n\t          _this$boundaries2 = _slicedToArray(_this$boundaries, 2),\r\n\t          minstr = _this$boundaries2[0],\r\n\t          maxstr = _this$boundaries2[1];\r\n\r\n\t      if (Number(maxstr) < this.from) return fromStr[nextVal.length - 1];\r\n\r\n\t      if (Number(minstr) > this.to) {\r\n\t        if (this.autofix === 'pad' && nextVal.length < this.maxLength) {\r\n\t          return ['', details.aggregate(this.append(fromStr[nextVal.length - 1] + ch, flags))];\r\n\t        }\r\n\r\n\t        return toStr[nextVal.length - 1];\r\n\t      }\r\n\r\n\t      return ch;\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"doValidate\",\r\n\t    value: function doValidate() {\r\n\t      var _get2;\r\n\r\n\t      var str = this.value;\r\n\t      var firstNonZero = str.search(/[^0]/);\r\n\t      if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\r\n\r\n\t      var _this$boundaries3 = this.boundaries(str),\r\n\t          _this$boundaries4 = _slicedToArray(_this$boundaries3, 2),\r\n\t          minstr = _this$boundaries4[0],\r\n\t          maxstr = _this$boundaries4[1];\r\n\r\n\t      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n\t        args[_key] = arguments[_key];\r\n\t      }\r\n\r\n\t      return this.from <= Number(maxstr) && Number(minstr) <= this.to && (_get2 = _get(_getPrototypeOf(MaskedRange.prototype), \"doValidate\", this)).call.apply(_get2, [this].concat(args));\r\n\t    }\r\n\t  }]);\r\n\r\n\t  return MaskedRange;\r\n\t}(MaskedPattern);\r\n\tIMask.MaskedRange = MaskedRange;\r\n\r\n\t/** Date mask */\r\n\r\n\tvar MaskedDate = /*#__PURE__*/function (_MaskedPattern) {\r\n\t  _inherits(MaskedDate, _MaskedPattern);\r\n\r\n\t  var _super = _createSuper(MaskedDate);\r\n\r\n\t  /** Pattern mask for date according to {@link MaskedDate#format} */\r\n\r\n\t  /** Start date */\r\n\r\n\t  /** End date */\r\n\r\n\t  /** */\r\n\r\n\t  /**\r\n\t    @param {Object} opts\r\n\t  */\r\n\t  function MaskedDate(opts) {\r\n\t    _classCallCheck(this, MaskedDate);\r\n\r\n\t    return _super.call(this, Object.assign({}, MaskedDate.DEFAULTS, opts));\r\n\t  }\r\n\t  /**\r\n\t    @override\r\n\t  */\r\n\r\n\r\n\t  _createClass(MaskedDate, [{\r\n\t    key: \"_update\",\r\n\t    value: function _update(opts) {\r\n\t      if (opts.mask === Date) delete opts.mask;\r\n\t      if (opts.pattern) opts.mask = opts.pattern;\r\n\t      var blocks = opts.blocks;\r\n\t      opts.blocks = Object.assign({}, MaskedDate.GET_DEFAULT_BLOCKS()); // adjust year block\r\n\r\n\t      if (opts.min) opts.blocks.Y.from = opts.min.getFullYear();\r\n\t      if (opts.max) opts.blocks.Y.to = opts.max.getFullYear();\r\n\r\n\t      if (opts.min && opts.max && opts.blocks.Y.from === opts.blocks.Y.to) {\r\n\t        opts.blocks.m.from = opts.min.getMonth() + 1;\r\n\t        opts.blocks.m.to = opts.max.getMonth() + 1;\r\n\r\n\t        if (opts.blocks.m.from === opts.blocks.m.to) {\r\n\t          opts.blocks.d.from = opts.min.getDate();\r\n\t          opts.blocks.d.to = opts.max.getDate();\r\n\t        }\r\n\t      }\r\n\r\n\t      Object.assign(opts.blocks, this.blocks, blocks); // add autofix\r\n\r\n\t      Object.keys(opts.blocks).forEach(function (bk) {\r\n\t        var b = opts.blocks[bk];\r\n\t        if (!('autofix' in b) && 'autofix' in opts) b.autofix = opts.autofix;\r\n\t      });\r\n\r\n\t      _get(_getPrototypeOf(MaskedDate.prototype), \"_update\", this).call(this, opts);\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"doValidate\",\r\n\t    value: function doValidate() {\r\n\t      var _get2;\r\n\r\n\t      var date = this.date;\r\n\r\n\t      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n\t        args[_key] = arguments[_key];\r\n\t      }\r\n\r\n\t      return (_get2 = _get(_getPrototypeOf(MaskedDate.prototype), \"doValidate\", this)).call.apply(_get2, [this].concat(args)) && (!this.isComplete || this.isDateExist(this.value) && date != null && (this.min == null || this.min <= date) && (this.max == null || date <= this.max));\r\n\t    }\r\n\t    /** Checks if date is exists */\r\n\r\n\t  }, {\r\n\t    key: \"isDateExist\",\r\n\t    value: function isDateExist(str) {\r\n\t      return this.format(this.parse(str, this), this).indexOf(str) >= 0;\r\n\t    }\r\n\t    /** Parsed Date */\r\n\r\n\t  }, {\r\n\t    key: \"date\",\r\n\t    get: function get() {\r\n\t      return this.typedValue;\r\n\t    },\r\n\t    set: function set(date) {\r\n\t      this.typedValue = date;\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"typedValue\",\r\n\t    get: function get() {\r\n\t      return this.isComplete ? _get(_getPrototypeOf(MaskedDate.prototype), \"typedValue\", this) : null;\r\n\t    },\r\n\t    set: function set(value) {\r\n\t      _set(_getPrototypeOf(MaskedDate.prototype), \"typedValue\", value, this, true);\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"maskEquals\",\r\n\t    value: function maskEquals(mask) {\r\n\t      return mask === Date || _get(_getPrototypeOf(MaskedDate.prototype), \"maskEquals\", this).call(this, mask);\r\n\t    }\r\n\t  }]);\r\n\r\n\t  return MaskedDate;\r\n\t}(MaskedPattern);\r\n\tMaskedDate.DEFAULTS = {\r\n\t  pattern: 'd{.}`m{.}`Y',\r\n\t  format: function format(date) {\r\n\t    if (!date) return '';\r\n\t    var day = String(date.getDate()).padStart(2, '0');\r\n\t    var month = String(date.getMonth() + 1).padStart(2, '0');\r\n\t    var year = date.getFullYear();\r\n\t    return [day, month, year].join('.');\r\n\t  },\r\n\t  parse: function parse(str) {\r\n\t    var _str$split = str.split('.'),\r\n\t        _str$split2 = _slicedToArray(_str$split, 3),\r\n\t        day = _str$split2[0],\r\n\t        month = _str$split2[1],\r\n\t        year = _str$split2[2];\r\n\r\n\t    return new Date(year, month - 1, day);\r\n\t  }\r\n\t};\r\n\r\n\tMaskedDate.GET_DEFAULT_BLOCKS = function () {\r\n\t  return {\r\n\t    d: {\r\n\t      mask: MaskedRange,\r\n\t      from: 1,\r\n\t      to: 31,\r\n\t      maxLength: 2\r\n\t    },\r\n\t    m: {\r\n\t      mask: MaskedRange,\r\n\t      from: 1,\r\n\t      to: 12,\r\n\t      maxLength: 2\r\n\t    },\r\n\t    Y: {\r\n\t      mask: MaskedRange,\r\n\t      from: 1900,\r\n\t      to: 9999\r\n\t    }\r\n\t  };\r\n\t};\r\n\r\n\tIMask.MaskedDate = MaskedDate;\r\n\r\n\t/**\r\n\t  Generic element API to use with mask\r\n\t  @interface\r\n\t*/\r\n\tvar MaskElement = /*#__PURE__*/function () {\r\n\t  function MaskElement() {\r\n\t    _classCallCheck(this, MaskElement);\r\n\t  }\r\n\r\n\t  _createClass(MaskElement, [{\r\n\t    key: \"selectionStart\",\r\n\t    get:\r\n\t    /** */\r\n\r\n\t    /** */\r\n\r\n\t    /** */\r\n\r\n\t    /** Safely returns selection start */\r\n\t    function get() {\r\n\t      var start;\r\n\r\n\t      try {\r\n\t        start = this._unsafeSelectionStart;\r\n\t      } catch (e) {}\r\n\r\n\t      return start != null ? start : this.value.length;\r\n\t    }\r\n\t    /** Safely returns selection end */\r\n\r\n\t  }, {\r\n\t    key: \"selectionEnd\",\r\n\t    get: function get() {\r\n\t      var end;\r\n\r\n\t      try {\r\n\t        end = this._unsafeSelectionEnd;\r\n\t      } catch (e) {}\r\n\r\n\t      return end != null ? end : this.value.length;\r\n\t    }\r\n\t    /** Safely sets element selection */\r\n\r\n\t  }, {\r\n\t    key: \"select\",\r\n\t    value: function select(start, end) {\r\n\t      if (start == null || end == null || start === this.selectionStart && end === this.selectionEnd) return;\r\n\r\n\t      try {\r\n\t        this._unsafeSelect(start, end);\r\n\t      } catch (e) {}\r\n\t    }\r\n\t    /** Should be overriden in subclasses */\r\n\r\n\t  }, {\r\n\t    key: \"_unsafeSelect\",\r\n\t    value: function _unsafeSelect(start, end) {}\r\n\t    /** Should be overriden in subclasses */\r\n\r\n\t  }, {\r\n\t    key: \"isActive\",\r\n\t    get: function get() {\r\n\t      return false;\r\n\t    }\r\n\t    /** Should be overriden in subclasses */\r\n\r\n\t  }, {\r\n\t    key: \"bindEvents\",\r\n\t    value: function bindEvents(handlers) {}\r\n\t    /** Should be overriden in subclasses */\r\n\r\n\t  }, {\r\n\t    key: \"unbindEvents\",\r\n\t    value: function unbindEvents() {}\r\n\t  }]);\r\n\r\n\t  return MaskElement;\r\n\t}();\r\n\tIMask.MaskElement = MaskElement;\r\n\r\n\t/** Bridge between HTMLElement and {@link Masked} */\r\n\r\n\tvar HTMLMaskElement = /*#__PURE__*/function (_MaskElement) {\r\n\t  _inherits(HTMLMaskElement, _MaskElement);\r\n\r\n\t  var _super = _createSuper(HTMLMaskElement);\r\n\r\n\t  /** Mapping between HTMLElement events and mask internal events */\r\n\r\n\t  /** HTMLElement to use mask on */\r\n\r\n\t  /**\r\n\t    @param {HTMLInputElement|HTMLTextAreaElement} input\r\n\t  */\r\n\t  function HTMLMaskElement(input) {\r\n\t    var _this;\r\n\r\n\t    _classCallCheck(this, HTMLMaskElement);\r\n\r\n\t    _this = _super.call(this);\r\n\t    _this.input = input;\r\n\t    _this._handlers = {};\r\n\t    return _this;\r\n\t  }\r\n\t  /** */\r\n\t  // $FlowFixMe https://github.com/facebook/flow/issues/2839\r\n\r\n\r\n\t  _createClass(HTMLMaskElement, [{\r\n\t    key: \"rootElement\",\r\n\t    get: function get() {\r\n\t      var _this$input$getRootNo, _this$input$getRootNo2, _this$input;\r\n\r\n\t      return (_this$input$getRootNo = (_this$input$getRootNo2 = (_this$input = this.input).getRootNode) === null || _this$input$getRootNo2 === void 0 ? void 0 : _this$input$getRootNo2.call(_this$input)) !== null && _this$input$getRootNo !== void 0 ? _this$input$getRootNo : document;\r\n\t    }\r\n\t    /**\r\n\t      Is element in focus\r\n\t      @readonly\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"isActive\",\r\n\t    get: function get() {\r\n\t      //$FlowFixMe\r\n\t      return this.input === this.rootElement.activeElement;\r\n\t    }\r\n\t    /**\r\n\t      Returns HTMLElement selection start\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"_unsafeSelectionStart\",\r\n\t    get: function get() {\r\n\t      return this.input.selectionStart;\r\n\t    }\r\n\t    /**\r\n\t      Returns HTMLElement selection end\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"_unsafeSelectionEnd\",\r\n\t    get: function get() {\r\n\t      return this.input.selectionEnd;\r\n\t    }\r\n\t    /**\r\n\t      Sets HTMLElement selection\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"_unsafeSelect\",\r\n\t    value: function _unsafeSelect(start, end) {\r\n\t      this.input.setSelectionRange(start, end);\r\n\t    }\r\n\t    /**\r\n\t      HTMLElement value\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"value\",\r\n\t    get: function get() {\r\n\t      return this.input.value;\r\n\t    },\r\n\t    set: function set(value) {\r\n\t      this.input.value = value;\r\n\t    }\r\n\t    /**\r\n\t      Binds HTMLElement events to mask internal events\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"bindEvents\",\r\n\t    value: function bindEvents(handlers) {\r\n\t      var _this2 = this;\r\n\r\n\t      Object.keys(handlers).forEach(function (event) {\r\n\t        return _this2._toggleEventHandler(HTMLMaskElement.EVENTS_MAP[event], handlers[event]);\r\n\t      });\r\n\t    }\r\n\t    /**\r\n\t      Unbinds HTMLElement events to mask internal events\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"unbindEvents\",\r\n\t    value: function unbindEvents() {\r\n\t      var _this3 = this;\r\n\r\n\t      Object.keys(this._handlers).forEach(function (event) {\r\n\t        return _this3._toggleEventHandler(event);\r\n\t      });\r\n\t    }\r\n\t    /** */\r\n\r\n\t  }, {\r\n\t    key: \"_toggleEventHandler\",\r\n\t    value: function _toggleEventHandler(event, handler) {\r\n\t      if (this._handlers[event]) {\r\n\t        this.input.removeEventListener(event, this._handlers[event]);\r\n\t        delete this._handlers[event];\r\n\t      }\r\n\r\n\t      if (handler) {\r\n\t        this.input.addEventListener(event, handler);\r\n\t        this._handlers[event] = handler;\r\n\t      }\r\n\t    }\r\n\t  }]);\r\n\r\n\t  return HTMLMaskElement;\r\n\t}(MaskElement);\r\n\tHTMLMaskElement.EVENTS_MAP = {\r\n\t  selectionChange: 'keydown',\r\n\t  input: 'input',\r\n\t  drop: 'drop',\r\n\t  click: 'click',\r\n\t  focus: 'focus',\r\n\t  commit: 'blur'\r\n\t};\r\n\tIMask.HTMLMaskElement = HTMLMaskElement;\r\n\r\n\tvar HTMLContenteditableMaskElement = /*#__PURE__*/function (_HTMLMaskElement) {\r\n\t  _inherits(HTMLContenteditableMaskElement, _HTMLMaskElement);\r\n\r\n\t  var _super = _createSuper(HTMLContenteditableMaskElement);\r\n\r\n\t  function HTMLContenteditableMaskElement() {\r\n\t    _classCallCheck(this, HTMLContenteditableMaskElement);\r\n\r\n\t    return _super.apply(this, arguments);\r\n\t  }\r\n\r\n\t  _createClass(HTMLContenteditableMaskElement, [{\r\n\t    key: \"_unsafeSelectionStart\",\r\n\t    get:\r\n\t    /**\r\n\t      Returns HTMLElement selection start\r\n\t      @override\r\n\t    */\r\n\t    function get() {\r\n\t      var root = this.rootElement;\r\n\t      var selection = root.getSelection && root.getSelection();\r\n\t      var anchorOffset = selection && selection.anchorOffset;\r\n\t      var focusOffset = selection && selection.focusOffset;\r\n\r\n\t      if (focusOffset == null || anchorOffset == null || anchorOffset < focusOffset) {\r\n\t        return anchorOffset;\r\n\t      }\r\n\r\n\t      return focusOffset;\r\n\t    }\r\n\t    /**\r\n\t      Returns HTMLElement selection end\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"_unsafeSelectionEnd\",\r\n\t    get: function get() {\r\n\t      var root = this.rootElement;\r\n\t      var selection = root.getSelection && root.getSelection();\r\n\t      var anchorOffset = selection && selection.anchorOffset;\r\n\t      var focusOffset = selection && selection.focusOffset;\r\n\r\n\t      if (focusOffset == null || anchorOffset == null || anchorOffset > focusOffset) {\r\n\t        return anchorOffset;\r\n\t      }\r\n\r\n\t      return focusOffset;\r\n\t    }\r\n\t    /**\r\n\t      Sets HTMLElement selection\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"_unsafeSelect\",\r\n\t    value: function _unsafeSelect(start, end) {\r\n\t      if (!this.rootElement.createRange) return;\r\n\t      var range = this.rootElement.createRange();\r\n\t      range.setStart(this.input.firstChild || this.input, start);\r\n\t      range.setEnd(this.input.lastChild || this.input, end);\r\n\t      var root = this.rootElement;\r\n\t      var selection = root.getSelection && root.getSelection();\r\n\r\n\t      if (selection) {\r\n\t        selection.removeAllRanges();\r\n\t        selection.addRange(range);\r\n\t      }\r\n\t    }\r\n\t    /**\r\n\t      HTMLElement value\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"value\",\r\n\t    get: function get() {\r\n\t      // $FlowFixMe\r\n\t      return this.input.textContent;\r\n\t    },\r\n\t    set: function set(value) {\r\n\t      this.input.textContent = value;\r\n\t    }\r\n\t  }]);\r\n\r\n\t  return HTMLContenteditableMaskElement;\r\n\t}(HTMLMaskElement);\r\n\tIMask.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;\r\n\r\n\tvar _excluded$1 = [\"mask\"];\r\n\t/** Listens to element events and controls changes between element and {@link Masked} */\r\n\r\n\tvar InputMask = /*#__PURE__*/function () {\r\n\t  /**\r\n\t    View element\r\n\t    @readonly\r\n\t  */\r\n\r\n\t  /**\r\n\t    Internal {@link Masked} model\r\n\t    @readonly\r\n\t  */\r\n\r\n\t  /**\r\n\t    @param {MaskElement|HTMLInputElement|HTMLTextAreaElement} el\r\n\t    @param {Object} opts\r\n\t  */\r\n\t  function InputMask(el, opts) {\r\n\t    _classCallCheck(this, InputMask);\r\n\r\n\t    this.el = el instanceof MaskElement ? el : el.isContentEditable && el.tagName !== 'INPUT' && el.tagName !== 'TEXTAREA' ? new HTMLContenteditableMaskElement(el) : new HTMLMaskElement(el);\r\n\t    this.masked = createMask(opts);\r\n\t    this._listeners = {};\r\n\t    this._value = '';\r\n\t    this._unmaskedValue = '';\r\n\t    this._saveSelection = this._saveSelection.bind(this);\r\n\t    this._onInput = this._onInput.bind(this);\r\n\t    this._onChange = this._onChange.bind(this);\r\n\t    this._onDrop = this._onDrop.bind(this);\r\n\t    this._onFocus = this._onFocus.bind(this);\r\n\t    this._onClick = this._onClick.bind(this);\r\n\t    this.alignCursor = this.alignCursor.bind(this);\r\n\t    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\r\n\r\n\t    this._bindEvents(); // refresh\r\n\r\n\r\n\t    this.updateValue();\r\n\r\n\t    this._onChange();\r\n\t  }\r\n\t  /** Read or update mask */\r\n\r\n\r\n\t  _createClass(InputMask, [{\r\n\t    key: \"mask\",\r\n\t    get: function get() {\r\n\t      return this.masked.mask;\r\n\t    },\r\n\t    set: function set(mask) {\r\n\t      if (this.maskEquals(mask)) return; // $FlowFixMe No ideas ... after update\r\n\r\n\t      if (!(mask instanceof IMask.Masked) && this.masked.constructor === maskedClass(mask)) {\r\n\t        this.masked.updateOptions({\r\n\t          mask: mask\r\n\t        });\r\n\t        return;\r\n\t      }\r\n\r\n\t      var masked = createMask({\r\n\t        mask: mask\r\n\t      });\r\n\t      masked.unmaskedValue = this.masked.unmaskedValue;\r\n\t      this.masked = masked;\r\n\t    }\r\n\t    /** Raw value */\r\n\r\n\t  }, {\r\n\t    key: \"maskEquals\",\r\n\t    value: function maskEquals(mask) {\r\n\t      var _this$masked;\r\n\r\n\t      return mask == null || ((_this$masked = this.masked) === null || _this$masked === void 0 ? void 0 : _this$masked.maskEquals(mask));\r\n\t    }\r\n\t  }, {\r\n\t    key: \"value\",\r\n\t    get: function get() {\r\n\t      return this._value;\r\n\t    },\r\n\t    set: function set(str) {\r\n\t      this.masked.value = str;\r\n\t      this.updateControl();\r\n\t      this.alignCursor();\r\n\t    }\r\n\t    /** Unmasked value */\r\n\r\n\t  }, {\r\n\t    key: \"unmaskedValue\",\r\n\t    get: function get() {\r\n\t      return this._unmaskedValue;\r\n\t    },\r\n\t    set: function set(str) {\r\n\t      this.masked.unmaskedValue = str;\r\n\t      this.updateControl();\r\n\t      this.alignCursor();\r\n\t    }\r\n\t    /** Typed unmasked value */\r\n\r\n\t  }, {\r\n\t    key: \"typedValue\",\r\n\t    get: function get() {\r\n\t      return this.masked.typedValue;\r\n\t    },\r\n\t    set: function set(val) {\r\n\t      this.masked.typedValue = val;\r\n\t      this.updateControl();\r\n\t      this.alignCursor();\r\n\t    }\r\n\t    /**\r\n\t      Starts listening to element events\r\n\t      @protected\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"_bindEvents\",\r\n\t    value: function _bindEvents() {\r\n\t      this.el.bindEvents({\r\n\t        selectionChange: this._saveSelection,\r\n\t        input: this._onInput,\r\n\t        drop: this._onDrop,\r\n\t        click: this._onClick,\r\n\t        focus: this._onFocus,\r\n\t        commit: this._onChange\r\n\t      });\r\n\t    }\r\n\t    /**\r\n\t      Stops listening to element events\r\n\t      @protected\r\n\t     */\r\n\r\n\t  }, {\r\n\t    key: \"_unbindEvents\",\r\n\t    value: function _unbindEvents() {\r\n\t      if (this.el) this.el.unbindEvents();\r\n\t    }\r\n\t    /**\r\n\t      Fires custom event\r\n\t      @protected\r\n\t     */\r\n\r\n\t  }, {\r\n\t    key: \"_fireEvent\",\r\n\t    value: function _fireEvent(ev) {\r\n\t      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n\t        args[_key - 1] = arguments[_key];\r\n\t      }\r\n\r\n\t      var listeners = this._listeners[ev];\r\n\t      if (!listeners) return;\r\n\t      listeners.forEach(function (l) {\r\n\t        return l.apply(void 0, args);\r\n\t      });\r\n\t    }\r\n\t    /**\r\n\t      Current selection start\r\n\t      @readonly\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"selectionStart\",\r\n\t    get: function get() {\r\n\t      return this._cursorChanging ? this._changingCursorPos : this.el.selectionStart;\r\n\t    }\r\n\t    /** Current cursor position */\r\n\r\n\t  }, {\r\n\t    key: \"cursorPos\",\r\n\t    get: function get() {\r\n\t      return this._cursorChanging ? this._changingCursorPos : this.el.selectionEnd;\r\n\t    },\r\n\t    set: function set(pos) {\r\n\t      if (!this.el || !this.el.isActive) return;\r\n\t      this.el.select(pos, pos);\r\n\r\n\t      this._saveSelection();\r\n\t    }\r\n\t    /**\r\n\t      Stores current selection\r\n\t      @protected\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"_saveSelection\",\r\n\t    value: function\r\n\t      /* ev */\r\n\t    _saveSelection() {\r\n\t      if (this.value !== this.el.value) {\r\n\t        console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\r\n\t      }\r\n\r\n\t      this._selection = {\r\n\t        start: this.selectionStart,\r\n\t        end: this.cursorPos\r\n\t      };\r\n\t    }\r\n\t    /** Syncronizes model value from view */\r\n\r\n\t  }, {\r\n\t    key: \"updateValue\",\r\n\t    value: function updateValue() {\r\n\t      this.masked.value = this.el.value;\r\n\t      this._value = this.masked.value;\r\n\t    }\r\n\t    /** Syncronizes view from model value, fires change events */\r\n\r\n\t  }, {\r\n\t    key: \"updateControl\",\r\n\t    value: function updateControl() {\r\n\t      var newUnmaskedValue = this.masked.unmaskedValue;\r\n\t      var newValue = this.masked.value;\r\n\t      var isChanged = this.unmaskedValue !== newUnmaskedValue || this.value !== newValue;\r\n\t      this._unmaskedValue = newUnmaskedValue;\r\n\t      this._value = newValue;\r\n\t      if (this.el.value !== newValue) this.el.value = newValue;\r\n\t      if (isChanged) this._fireChangeEvents();\r\n\t    }\r\n\t    /** Updates options with deep equal check, recreates @{link Masked} model if mask type changes */\r\n\r\n\t  }, {\r\n\t    key: \"updateOptions\",\r\n\t    value: function updateOptions(opts) {\r\n\t      var mask = opts.mask,\r\n\t          restOpts = _objectWithoutProperties(opts, _excluded$1);\r\n\r\n\t      var updateMask = !this.maskEquals(mask);\r\n\t      var updateOpts = !objectIncludes(this.masked, restOpts);\r\n\t      if (updateMask) this.mask = mask;\r\n\t      if (updateOpts) this.masked.updateOptions(restOpts);\r\n\t      if (updateMask || updateOpts) this.updateControl();\r\n\t    }\r\n\t    /** Updates cursor */\r\n\r\n\t  }, {\r\n\t    key: \"updateCursor\",\r\n\t    value: function updateCursor(cursorPos) {\r\n\t      if (cursorPos == null) return;\r\n\t      this.cursorPos = cursorPos; // also queue change cursor for mobile browsers\r\n\r\n\t      this._delayUpdateCursor(cursorPos);\r\n\t    }\r\n\t    /**\r\n\t      Delays cursor update to support mobile browsers\r\n\t      @private\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"_delayUpdateCursor\",\r\n\t    value: function _delayUpdateCursor(cursorPos) {\r\n\t      var _this = this;\r\n\r\n\t      this._abortUpdateCursor();\r\n\r\n\t      this._changingCursorPos = cursorPos;\r\n\t      this._cursorChanging = setTimeout(function () {\r\n\t        if (!_this.el) return; // if was destroyed\r\n\r\n\t        _this.cursorPos = _this._changingCursorPos;\r\n\r\n\t        _this._abortUpdateCursor();\r\n\t      }, 10);\r\n\t    }\r\n\t    /**\r\n\t      Fires custom events\r\n\t      @protected\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"_fireChangeEvents\",\r\n\t    value: function _fireChangeEvents() {\r\n\t      this._fireEvent('accept', this._inputEvent);\r\n\r\n\t      if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);\r\n\t    }\r\n\t    /**\r\n\t      Aborts delayed cursor update\r\n\t      @private\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"_abortUpdateCursor\",\r\n\t    value: function _abortUpdateCursor() {\r\n\t      if (this._cursorChanging) {\r\n\t        clearTimeout(this._cursorChanging);\r\n\t        delete this._cursorChanging;\r\n\t      }\r\n\t    }\r\n\t    /** Aligns cursor to nearest available position */\r\n\r\n\t  }, {\r\n\t    key: \"alignCursor\",\r\n\t    value: function alignCursor() {\r\n\t      this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT));\r\n\t    }\r\n\t    /** Aligns cursor only if selection is empty */\r\n\r\n\t  }, {\r\n\t    key: \"alignCursorFriendly\",\r\n\t    value: function alignCursorFriendly() {\r\n\t      if (this.selectionStart !== this.cursorPos) return; // skip if range is selected\r\n\r\n\t      this.alignCursor();\r\n\t    }\r\n\t    /** Adds listener on custom event */\r\n\r\n\t  }, {\r\n\t    key: \"on\",\r\n\t    value: function on(ev, handler) {\r\n\t      if (!this._listeners[ev]) this._listeners[ev] = [];\r\n\r\n\t      this._listeners[ev].push(handler);\r\n\r\n\t      return this;\r\n\t    }\r\n\t    /** Removes custom event listener */\r\n\r\n\t  }, {\r\n\t    key: \"off\",\r\n\t    value: function off(ev, handler) {\r\n\t      if (!this._listeners[ev]) return this;\r\n\r\n\t      if (!handler) {\r\n\t        delete this._listeners[ev];\r\n\t        return this;\r\n\t      }\r\n\r\n\t      var hIndex = this._listeners[ev].indexOf(handler);\r\n\r\n\t      if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\r\n\t      return this;\r\n\t    }\r\n\t    /** Handles view input event */\r\n\r\n\t  }, {\r\n\t    key: \"_onInput\",\r\n\t    value: function _onInput(e) {\r\n\t      this._inputEvent = e;\r\n\r\n\t      this._abortUpdateCursor(); // fix strange IE behavior\r\n\r\n\r\n\t      if (!this._selection) return this.updateValue();\r\n\t      var details = new ActionDetails( // new state\r\n\t      this.el.value, this.cursorPos, // old state\r\n\t      this.value, this._selection);\r\n\t      var oldRawValue = this.masked.rawInputValue;\r\n\t      var offset = this.masked.splice(details.startChangePos, details.removed.length, details.inserted, details.removeDirection).offset; // force align in remove direction only if no input chars were removed\r\n\t      // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\r\n\r\n\t      var removeDirection = oldRawValue === this.masked.rawInputValue ? details.removeDirection : DIRECTION.NONE;\r\n\t      var cursorPos = this.masked.nearestInputPos(details.startChangePos + offset, removeDirection);\r\n\t      if (removeDirection !== DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);\r\n\t      this.updateControl();\r\n\t      this.updateCursor(cursorPos);\r\n\t      delete this._inputEvent;\r\n\t    }\r\n\t    /** Handles view change event and commits model value */\r\n\r\n\t  }, {\r\n\t    key: \"_onChange\",\r\n\t    value: function _onChange() {\r\n\t      if (this.value !== this.el.value) {\r\n\t        this.updateValue();\r\n\t      }\r\n\r\n\t      this.masked.doCommit();\r\n\t      this.updateControl();\r\n\r\n\t      this._saveSelection();\r\n\t    }\r\n\t    /** Handles view drop event, prevents by default */\r\n\r\n\t  }, {\r\n\t    key: \"_onDrop\",\r\n\t    value: function _onDrop(ev) {\r\n\t      ev.preventDefault();\r\n\t      ev.stopPropagation();\r\n\t    }\r\n\t    /** Restore last selection on focus */\r\n\r\n\t  }, {\r\n\t    key: \"_onFocus\",\r\n\t    value: function _onFocus(ev) {\r\n\t      this.alignCursorFriendly();\r\n\t    }\r\n\t    /** Restore last selection on focus */\r\n\r\n\t  }, {\r\n\t    key: \"_onClick\",\r\n\t    value: function _onClick(ev) {\r\n\t      this.alignCursorFriendly();\r\n\t    }\r\n\t    /** Unbind view events and removes element reference */\r\n\r\n\t  }, {\r\n\t    key: \"destroy\",\r\n\t    value: function destroy() {\r\n\t      this._unbindEvents(); // $FlowFixMe why not do so?\r\n\r\n\r\n\t      this._listeners.length = 0; // $FlowFixMe\r\n\r\n\t      delete this.el;\r\n\t    }\r\n\t  }]);\r\n\r\n\t  return InputMask;\r\n\t}();\r\n\tIMask.InputMask = InputMask;\r\n\r\n\t/** Pattern which validates enum values */\r\n\r\n\tvar MaskedEnum = /*#__PURE__*/function (_MaskedPattern) {\r\n\t  _inherits(MaskedEnum, _MaskedPattern);\r\n\r\n\t  var _super = _createSuper(MaskedEnum);\r\n\r\n\t  function MaskedEnum() {\r\n\t    _classCallCheck(this, MaskedEnum);\r\n\r\n\t    return _super.apply(this, arguments);\r\n\t  }\r\n\r\n\t  _createClass(MaskedEnum, [{\r\n\t    key: \"_update\",\r\n\t    value:\r\n\t    /**\r\n\t      @override\r\n\t      @param {Object} opts\r\n\t    */\r\n\t    function _update(opts) {\r\n\t      // TODO type\r\n\t      if (opts.enum) opts.mask = '*'.repeat(opts.enum[0].length);\r\n\r\n\t      _get(_getPrototypeOf(MaskedEnum.prototype), \"_update\", this).call(this, opts);\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"doValidate\",\r\n\t    value: function doValidate() {\r\n\t      var _this = this,\r\n\t          _get2;\r\n\r\n\t      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n\t        args[_key] = arguments[_key];\r\n\t      }\r\n\r\n\t      return this.enum.some(function (e) {\r\n\t        return e.indexOf(_this.unmaskedValue) >= 0;\r\n\t      }) && (_get2 = _get(_getPrototypeOf(MaskedEnum.prototype), \"doValidate\", this)).call.apply(_get2, [this].concat(args));\r\n\t    }\r\n\t  }]);\r\n\r\n\t  return MaskedEnum;\r\n\t}(MaskedPattern);\r\n\tIMask.MaskedEnum = MaskedEnum;\r\n\r\n\t/**\r\n\t  Number mask\r\n\t  @param {Object} opts\r\n\t  @param {string} opts.radix - Single char\r\n\t  @param {string} opts.thousandsSeparator - Single char\r\n\t  @param {Array<string>} opts.mapToRadix - Array of single chars\r\n\t  @param {number} opts.min\r\n\t  @param {number} opts.max\r\n\t  @param {number} opts.scale - Digits after point\r\n\t  @param {boolean} opts.signed - Allow negative\r\n\t  @param {boolean} opts.normalizeZeros - Flag to remove leading and trailing zeros in the end of editing\r\n\t  @param {boolean} opts.padFractionalZeros - Flag to pad trailing zeros after point in the end of editing\r\n\t*/\r\n\tvar MaskedNumber = /*#__PURE__*/function (_Masked) {\r\n\t  _inherits(MaskedNumber, _Masked);\r\n\r\n\t  var _super = _createSuper(MaskedNumber);\r\n\r\n\t  /** Single char */\r\n\r\n\t  /** Single char */\r\n\r\n\t  /** Array of single chars */\r\n\r\n\t  /** */\r\n\r\n\t  /** */\r\n\r\n\t  /** Digits after point */\r\n\r\n\t  /** */\r\n\r\n\t  /** Flag to remove leading and trailing zeros in the end of editing */\r\n\r\n\t  /** Flag to pad trailing zeros after point in the end of editing */\r\n\t  function MaskedNumber(opts) {\r\n\t    _classCallCheck(this, MaskedNumber);\r\n\r\n\t    return _super.call(this, Object.assign({}, MaskedNumber.DEFAULTS, opts));\r\n\t  }\r\n\t  /**\r\n\t    @override\r\n\t  */\r\n\r\n\r\n\t  _createClass(MaskedNumber, [{\r\n\t    key: \"_update\",\r\n\t    value: function _update(opts) {\r\n\t      _get(_getPrototypeOf(MaskedNumber.prototype), \"_update\", this).call(this, opts);\r\n\r\n\t      this._updateRegExps();\r\n\t    }\r\n\t    /** */\r\n\r\n\t  }, {\r\n\t    key: \"_updateRegExps\",\r\n\t    value: function _updateRegExps() {\r\n\t      // use different regexp to process user input (more strict, input suffix) and tail shifting\r\n\t      var start = '^' + (this.allowNegative ? '[+|\\\\-]?' : '');\r\n\t      var midInput = '(0|([1-9]+\\\\d*))?';\r\n\t      var mid = '\\\\d*';\r\n\t      var end = (this.scale ? '(' + escapeRegExp(this.radix) + '\\\\d{0,' + this.scale + '})?' : '') + '$';\r\n\t      this._numberRegExpInput = new RegExp(start + midInput + end);\r\n\t      this._numberRegExp = new RegExp(start + mid + end);\r\n\t      this._mapToRadixRegExp = new RegExp('[' + this.mapToRadix.map(escapeRegExp).join('') + ']', 'g');\r\n\t      this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(this.thousandsSeparator), 'g');\r\n\t    }\r\n\t    /** */\r\n\r\n\t  }, {\r\n\t    key: \"_removeThousandsSeparators\",\r\n\t    value: function _removeThousandsSeparators(value) {\r\n\t      return value.replace(this._thousandsSeparatorRegExp, '');\r\n\t    }\r\n\t    /** */\r\n\r\n\t  }, {\r\n\t    key: \"_insertThousandsSeparators\",\r\n\t    value: function _insertThousandsSeparators(value) {\r\n\t      // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\r\n\t      var parts = value.split(this.radix);\r\n\t      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\r\n\t      return parts.join(this.radix);\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"doPrepare\",\r\n\t    value: function doPrepare(ch) {\r\n\t      var _get2;\r\n\r\n\t      ch = ch.replace(this._mapToRadixRegExp, this.radix);\r\n\r\n\t      var noSepCh = this._removeThousandsSeparators(ch);\r\n\r\n\t      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n\t        args[_key - 1] = arguments[_key];\r\n\t      }\r\n\r\n\t      var _normalizePrepare = normalizePrepare((_get2 = _get(_getPrototypeOf(MaskedNumber.prototype), \"doPrepare\", this)).call.apply(_get2, [this, noSepCh].concat(args))),\r\n\t          _normalizePrepare2 = _slicedToArray(_normalizePrepare, 2),\r\n\t          prepCh = _normalizePrepare2[0],\r\n\t          details = _normalizePrepare2[1];\r\n\r\n\t      if (ch && !noSepCh) details.skip = true;\r\n\t      return [prepCh, details];\r\n\t    }\r\n\t    /** */\r\n\r\n\t  }, {\r\n\t    key: \"_separatorsCount\",\r\n\t    value: function _separatorsCount(to) {\r\n\t      var extendOnSeparators = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n\t      var count = 0;\r\n\r\n\t      for (var pos = 0; pos < to; ++pos) {\r\n\t        if (this._value.indexOf(this.thousandsSeparator, pos) === pos) {\r\n\t          ++count;\r\n\t          if (extendOnSeparators) to += this.thousandsSeparator.length;\r\n\t        }\r\n\t      }\r\n\r\n\t      return count;\r\n\t    }\r\n\t    /** */\r\n\r\n\t  }, {\r\n\t    key: \"_separatorsCountFromSlice\",\r\n\t    value: function _separatorsCountFromSlice() {\r\n\t      var slice = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._value;\r\n\t      return this._separatorsCount(this._removeThousandsSeparators(slice).length, true);\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"extractInput\",\r\n\t    value: function extractInput() {\r\n\t      var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n\t      var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n\t      var flags = arguments.length > 2 ? arguments[2] : undefined;\r\n\r\n\t      var _this$_adjustRangeWit = this._adjustRangeWithSeparators(fromPos, toPos);\r\n\r\n\t      var _this$_adjustRangeWit2 = _slicedToArray(_this$_adjustRangeWit, 2);\r\n\r\n\t      fromPos = _this$_adjustRangeWit2[0];\r\n\t      toPos = _this$_adjustRangeWit2[1];\r\n\t      return this._removeThousandsSeparators(_get(_getPrototypeOf(MaskedNumber.prototype), \"extractInput\", this).call(this, fromPos, toPos, flags));\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"_appendCharRaw\",\r\n\t    value: function _appendCharRaw(ch) {\r\n\t      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\t      if (!this.thousandsSeparator) return _get(_getPrototypeOf(MaskedNumber.prototype), \"_appendCharRaw\", this).call(this, ch, flags);\r\n\t      var prevBeforeTailValue = flags.tail && flags._beforeTailState ? flags._beforeTailState._value : this._value;\r\n\r\n\t      var prevBeforeTailSeparatorsCount = this._separatorsCountFromSlice(prevBeforeTailValue);\r\n\r\n\t      this._value = this._removeThousandsSeparators(this.value);\r\n\r\n\t      var appendDetails = _get(_getPrototypeOf(MaskedNumber.prototype), \"_appendCharRaw\", this).call(this, ch, flags);\r\n\r\n\t      this._value = this._insertThousandsSeparators(this._value);\r\n\t      var beforeTailValue = flags.tail && flags._beforeTailState ? flags._beforeTailState._value : this._value;\r\n\r\n\t      var beforeTailSeparatorsCount = this._separatorsCountFromSlice(beforeTailValue);\r\n\r\n\t      appendDetails.tailShift += (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length;\r\n\t      appendDetails.skip = !appendDetails.rawInserted && ch === this.thousandsSeparator;\r\n\t      return appendDetails;\r\n\t    }\r\n\t    /** */\r\n\r\n\t  }, {\r\n\t    key: \"_findSeparatorAround\",\r\n\t    value: function _findSeparatorAround(pos) {\r\n\t      if (this.thousandsSeparator) {\r\n\t        var searchFrom = pos - this.thousandsSeparator.length + 1;\r\n\t        var separatorPos = this.value.indexOf(this.thousandsSeparator, searchFrom);\r\n\t        if (separatorPos <= pos) return separatorPos;\r\n\t      }\r\n\r\n\t      return -1;\r\n\t    }\r\n\t  }, {\r\n\t    key: \"_adjustRangeWithSeparators\",\r\n\t    value: function _adjustRangeWithSeparators(from, to) {\r\n\t      var separatorAroundFromPos = this._findSeparatorAround(from);\r\n\r\n\t      if (separatorAroundFromPos >= 0) from = separatorAroundFromPos;\r\n\r\n\t      var separatorAroundToPos = this._findSeparatorAround(to);\r\n\r\n\t      if (separatorAroundToPos >= 0) to = separatorAroundToPos + this.thousandsSeparator.length;\r\n\t      return [from, to];\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"remove\",\r\n\t    value: function remove() {\r\n\t      var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n\t      var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\r\n\r\n\t      var _this$_adjustRangeWit3 = this._adjustRangeWithSeparators(fromPos, toPos);\r\n\r\n\t      var _this$_adjustRangeWit4 = _slicedToArray(_this$_adjustRangeWit3, 2);\r\n\r\n\t      fromPos = _this$_adjustRangeWit4[0];\r\n\t      toPos = _this$_adjustRangeWit4[1];\r\n\t      var valueBeforePos = this.value.slice(0, fromPos);\r\n\t      var valueAfterPos = this.value.slice(toPos);\r\n\r\n\t      var prevBeforeTailSeparatorsCount = this._separatorsCount(valueBeforePos.length);\r\n\r\n\t      this._value = this._insertThousandsSeparators(this._removeThousandsSeparators(valueBeforePos + valueAfterPos));\r\n\r\n\t      var beforeTailSeparatorsCount = this._separatorsCountFromSlice(valueBeforePos);\r\n\r\n\t      return new ChangeDetails({\r\n\t        tailShift: (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length\r\n\t      });\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"nearestInputPos\",\r\n\t    value: function nearestInputPos(cursorPos, direction) {\r\n\t      if (!this.thousandsSeparator) return cursorPos;\r\n\r\n\t      switch (direction) {\r\n\t        case DIRECTION.NONE:\r\n\t        case DIRECTION.LEFT:\r\n\t        case DIRECTION.FORCE_LEFT:\r\n\t          {\r\n\t            var separatorAtLeftPos = this._findSeparatorAround(cursorPos - 1);\r\n\r\n\t            if (separatorAtLeftPos >= 0) {\r\n\t              var separatorAtLeftEndPos = separatorAtLeftPos + this.thousandsSeparator.length;\r\n\r\n\t              if (cursorPos < separatorAtLeftEndPos || this.value.length <= separatorAtLeftEndPos || direction === DIRECTION.FORCE_LEFT) {\r\n\t                return separatorAtLeftPos;\r\n\t              }\r\n\t            }\r\n\r\n\t            break;\r\n\t          }\r\n\r\n\t        case DIRECTION.RIGHT:\r\n\t        case DIRECTION.FORCE_RIGHT:\r\n\t          {\r\n\t            var separatorAtRightPos = this._findSeparatorAround(cursorPos);\r\n\r\n\t            if (separatorAtRightPos >= 0) {\r\n\t              return separatorAtRightPos + this.thousandsSeparator.length;\r\n\t            }\r\n\t          }\r\n\t      }\r\n\r\n\t      return cursorPos;\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"doValidate\",\r\n\t    value: function doValidate(flags) {\r\n\t      var regexp = flags.input ? this._numberRegExpInput : this._numberRegExp; // validate as string\r\n\r\n\t      var valid = regexp.test(this._removeThousandsSeparators(this.value));\r\n\r\n\t      if (valid) {\r\n\t        // validate as number\r\n\t        var number = this.number;\r\n\t        valid = valid && !isNaN(number) && ( // check min bound for negative values\r\n\t        this.min == null || this.min >= 0 || this.min <= this.number) && ( // check max bound for positive values\r\n\t        this.max == null || this.max <= 0 || this.number <= this.max);\r\n\t      }\r\n\r\n\t      return valid && _get(_getPrototypeOf(MaskedNumber.prototype), \"doValidate\", this).call(this, flags);\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"doCommit\",\r\n\t    value: function doCommit() {\r\n\t      if (this.value) {\r\n\t        var number = this.number;\r\n\t        var validnum = number; // check bounds\r\n\r\n\t        if (this.min != null) validnum = Math.max(validnum, this.min);\r\n\t        if (this.max != null) validnum = Math.min(validnum, this.max);\r\n\t        if (validnum !== number) this.unmaskedValue = String(validnum);\r\n\t        var formatted = this.value;\r\n\t        if (this.normalizeZeros) formatted = this._normalizeZeros(formatted);\r\n\t        if (this.padFractionalZeros && this.scale > 0) formatted = this._padFractionalZeros(formatted);\r\n\t        this._value = formatted;\r\n\t      }\r\n\r\n\t      _get(_getPrototypeOf(MaskedNumber.prototype), \"doCommit\", this).call(this);\r\n\t    }\r\n\t    /** */\r\n\r\n\t  }, {\r\n\t    key: \"_normalizeZeros\",\r\n\t    value: function _normalizeZeros(value) {\r\n\t      var parts = this._removeThousandsSeparators(value).split(this.radix); // remove leading zeros\r\n\r\n\r\n\t      parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, function (match, sign, zeros, num) {\r\n\t        return sign + num;\r\n\t      }); // add leading zero\r\n\r\n\t      if (value.length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\r\n\r\n\t      if (parts.length > 1) {\r\n\t        parts[1] = parts[1].replace(/0*$/, ''); // remove trailing zeros\r\n\r\n\t        if (!parts[1].length) parts.length = 1; // remove fractional\r\n\t      }\r\n\r\n\t      return this._insertThousandsSeparators(parts.join(this.radix));\r\n\t    }\r\n\t    /** */\r\n\r\n\t  }, {\r\n\t    key: \"_padFractionalZeros\",\r\n\t    value: function _padFractionalZeros(value) {\r\n\t      if (!value) return value;\r\n\t      var parts = value.split(this.radix);\r\n\t      if (parts.length < 2) parts.push('');\r\n\t      parts[1] = parts[1].padEnd(this.scale, '0');\r\n\t      return parts.join(this.radix);\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"unmaskedValue\",\r\n\t    get: function get() {\r\n\t      return this._removeThousandsSeparators(this._normalizeZeros(this.value)).replace(this.radix, '.');\r\n\t    },\r\n\t    set: function set(unmaskedValue) {\r\n\t      _set(_getPrototypeOf(MaskedNumber.prototype), \"unmaskedValue\", unmaskedValue.replace('.', this.radix), this, true);\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"typedValue\",\r\n\t    get: function get() {\r\n\t      return Number(this.unmaskedValue);\r\n\t    },\r\n\t    set: function set(n) {\r\n\t      _set(_getPrototypeOf(MaskedNumber.prototype), \"unmaskedValue\", String(n), this, true);\r\n\t    }\r\n\t    /** Parsed Number */\r\n\r\n\t  }, {\r\n\t    key: \"number\",\r\n\t    get: function get() {\r\n\t      return this.typedValue;\r\n\t    },\r\n\t    set: function set(number) {\r\n\t      this.typedValue = number;\r\n\t    }\r\n\t    /**\r\n\t      Is negative allowed\r\n\t      @readonly\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"allowNegative\",\r\n\t    get: function get() {\r\n\t      return this.signed || this.min != null && this.min < 0 || this.max != null && this.max < 0;\r\n\t    }\r\n\t  }]);\r\n\r\n\t  return MaskedNumber;\r\n\t}(Masked);\r\n\tMaskedNumber.DEFAULTS = {\r\n\t  radix: ',',\r\n\t  thousandsSeparator: '',\r\n\t  mapToRadix: ['.'],\r\n\t  scale: 2,\r\n\t  signed: false,\r\n\t  normalizeZeros: true,\r\n\t  padFractionalZeros: false\r\n\t};\r\n\tIMask.MaskedNumber = MaskedNumber;\r\n\r\n\t/** Masking by custom Function */\r\n\r\n\tvar MaskedFunction = /*#__PURE__*/function (_Masked) {\r\n\t  _inherits(MaskedFunction, _Masked);\r\n\r\n\t  var _super = _createSuper(MaskedFunction);\r\n\r\n\t  function MaskedFunction() {\r\n\t    _classCallCheck(this, MaskedFunction);\r\n\r\n\t    return _super.apply(this, arguments);\r\n\t  }\r\n\r\n\t  _createClass(MaskedFunction, [{\r\n\t    key: \"_update\",\r\n\t    value:\r\n\t    /**\r\n\t      @override\r\n\t      @param {Object} opts\r\n\t    */\r\n\t    function _update(opts) {\r\n\t      if (opts.mask) opts.validate = opts.mask;\r\n\r\n\t      _get(_getPrototypeOf(MaskedFunction.prototype), \"_update\", this).call(this, opts);\r\n\t    }\r\n\t  }]);\r\n\r\n\t  return MaskedFunction;\r\n\t}(Masked);\r\n\tIMask.MaskedFunction = MaskedFunction;\r\n\r\n\tvar _excluded = [\"compiledMasks\", \"currentMaskRef\", \"currentMask\"];\r\n\r\n\t/** Dynamic mask for choosing apropriate mask in run-time */\r\n\tvar MaskedDynamic = /*#__PURE__*/function (_Masked) {\r\n\t  _inherits(MaskedDynamic, _Masked);\r\n\r\n\t  var _super = _createSuper(MaskedDynamic);\r\n\r\n\t  /** Currently chosen mask */\r\n\r\n\t  /** Compliled {@link Masked} options */\r\n\r\n\t  /** Chooses {@link Masked} depending on input value */\r\n\r\n\t  /**\r\n\t    @param {Object} opts\r\n\t  */\r\n\t  function MaskedDynamic(opts) {\r\n\t    var _this;\r\n\r\n\t    _classCallCheck(this, MaskedDynamic);\r\n\r\n\t    _this = _super.call(this, Object.assign({}, MaskedDynamic.DEFAULTS, opts));\r\n\t    _this.currentMask = null;\r\n\t    return _this;\r\n\t  }\r\n\t  /**\r\n\t    @override\r\n\t  */\r\n\r\n\r\n\t  _createClass(MaskedDynamic, [{\r\n\t    key: \"_update\",\r\n\t    value: function _update(opts) {\r\n\t      _get(_getPrototypeOf(MaskedDynamic.prototype), \"_update\", this).call(this, opts);\r\n\r\n\t      if ('mask' in opts) {\r\n\t        // mask could be totally dynamic with only `dispatch` option\r\n\t        this.compiledMasks = Array.isArray(opts.mask) ? opts.mask.map(function (m) {\r\n\t          return createMask(m);\r\n\t        }) : [];\r\n\t      }\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"_appendCharRaw\",\r\n\t    value: function _appendCharRaw(ch) {\r\n\t      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\r\n\t      var details = this._applyDispatch(ch, flags);\r\n\r\n\t      if (this.currentMask) {\r\n\t        details.aggregate(this.currentMask._appendChar(ch, flags));\r\n\t      }\r\n\r\n\t      return details;\r\n\t    }\r\n\t  }, {\r\n\t    key: \"_applyDispatch\",\r\n\t    value: function _applyDispatch() {\r\n\t      var appended = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\r\n\t      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\t      var prevValueBeforeTail = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._value : this.value;\r\n\t      var inputValue = this.rawInputValue;\r\n\t      var insertValue = flags.tail && flags._beforeTailState != null ? // $FlowFixMe - tired to fight with type system\r\n\t      flags._beforeTailState._rawInputValue : inputValue;\r\n\t      var tailValue = inputValue.slice(insertValue.length);\r\n\t      var prevMask = this.currentMask;\r\n\t      var details = new ChangeDetails();\r\n\t      var prevMaskState = prevMask && prevMask.state; // clone flags to prevent overwriting `_beforeTailState`\r\n\r\n\t      this.currentMask = this.doDispatch(appended, Object.assign({}, flags)); // restore state after dispatch\r\n\r\n\t      if (this.currentMask) {\r\n\t        if (this.currentMask !== prevMask) {\r\n\t          // if mask changed reapply input\r\n\t          this.currentMask.reset();\r\n\r\n\t          if (insertValue) {\r\n\t            // $FlowFixMe - it's ok, we don't change current mask above\r\n\t            var d = this.currentMask.append(insertValue, {\r\n\t              raw: true\r\n\t            });\r\n\t            details.tailShift = d.inserted.length - prevValueBeforeTail.length;\r\n\t          }\r\n\r\n\t          if (tailValue) {\r\n\t            // $FlowFixMe - it's ok, we don't change current mask above\r\n\t            details.tailShift += this.currentMask.append(tailValue, {\r\n\t              raw: true,\r\n\t              tail: true\r\n\t            }).tailShift;\r\n\t          }\r\n\t        } else {\r\n\t          // Dispatch can do something bad with state, so\r\n\t          // restore prev mask state\r\n\t          this.currentMask.state = prevMaskState;\r\n\t        }\r\n\t      }\r\n\r\n\t      return details;\r\n\t    }\r\n\t  }, {\r\n\t    key: \"_appendPlaceholder\",\r\n\t    value: function _appendPlaceholder() {\r\n\t      var details = this._applyDispatch.apply(this, arguments);\r\n\r\n\t      if (this.currentMask) {\r\n\t        details.aggregate(this.currentMask._appendPlaceholder());\r\n\t      }\r\n\r\n\t      return details;\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"doDispatch\",\r\n\t    value: function doDispatch(appended) {\r\n\t      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\t      return this.dispatch(appended, this, flags);\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"doValidate\",\r\n\t    value: function doValidate() {\r\n\t      var _get2, _this$currentMask;\r\n\r\n\t      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n\t        args[_key] = arguments[_key];\r\n\t      }\r\n\r\n\t      return (_get2 = _get(_getPrototypeOf(MaskedDynamic.prototype), \"doValidate\", this)).call.apply(_get2, [this].concat(args)) && (!this.currentMask || (_this$currentMask = this.currentMask).doValidate.apply(_this$currentMask, args));\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"reset\",\r\n\t    value: function reset() {\r\n\t      if (this.currentMask) this.currentMask.reset();\r\n\t      this.compiledMasks.forEach(function (m) {\r\n\t        return m.reset();\r\n\t      });\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"value\",\r\n\t    get: function get() {\r\n\t      return this.currentMask ? this.currentMask.value : '';\r\n\t    },\r\n\t    set: function set(value) {\r\n\t      _set(_getPrototypeOf(MaskedDynamic.prototype), \"value\", value, this, true);\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"unmaskedValue\",\r\n\t    get: function get() {\r\n\t      return this.currentMask ? this.currentMask.unmaskedValue : '';\r\n\t    },\r\n\t    set: function set(unmaskedValue) {\r\n\t      _set(_getPrototypeOf(MaskedDynamic.prototype), \"unmaskedValue\", unmaskedValue, this, true);\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"typedValue\",\r\n\t    get: function get() {\r\n\t      return this.currentMask ? this.currentMask.typedValue : '';\r\n\t    } // probably typedValue should not be used with dynamic\r\n\t    ,\r\n\t    set: function set(value) {\r\n\t      var unmaskedValue = String(value); // double check it\r\n\r\n\t      if (this.currentMask) {\r\n\t        this.currentMask.typedValue = value;\r\n\t        unmaskedValue = this.currentMask.unmaskedValue;\r\n\t      }\r\n\r\n\t      this.unmaskedValue = unmaskedValue;\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"isComplete\",\r\n\t    get: function get() {\r\n\t      return !!this.currentMask && this.currentMask.isComplete;\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"remove\",\r\n\t    value: function remove() {\r\n\t      var details = new ChangeDetails();\r\n\r\n\t      if (this.currentMask) {\r\n\t        var _this$currentMask2;\r\n\r\n\t        details.aggregate((_this$currentMask2 = this.currentMask).remove.apply(_this$currentMask2, arguments)) // update with dispatch\r\n\t        .aggregate(this._applyDispatch());\r\n\t      }\r\n\r\n\t      return details;\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"state\",\r\n\t    get: function get() {\r\n\t      return Object.assign({}, _get(_getPrototypeOf(MaskedDynamic.prototype), \"state\", this), {\r\n\t        _rawInputValue: this.rawInputValue,\r\n\t        compiledMasks: this.compiledMasks.map(function (m) {\r\n\t          return m.state;\r\n\t        }),\r\n\t        currentMaskRef: this.currentMask,\r\n\t        currentMask: this.currentMask && this.currentMask.state\r\n\t      });\r\n\t    },\r\n\t    set: function set(state) {\r\n\t      var compiledMasks = state.compiledMasks,\r\n\t          currentMaskRef = state.currentMaskRef,\r\n\t          currentMask = state.currentMask,\r\n\t          maskedState = _objectWithoutProperties(state, _excluded);\r\n\r\n\t      this.compiledMasks.forEach(function (m, mi) {\r\n\t        return m.state = compiledMasks[mi];\r\n\t      });\r\n\r\n\t      if (currentMaskRef != null) {\r\n\t        this.currentMask = currentMaskRef;\r\n\t        this.currentMask.state = currentMask;\r\n\t      }\r\n\r\n\t      _set(_getPrototypeOf(MaskedDynamic.prototype), \"state\", maskedState, this, true);\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"extractInput\",\r\n\t    value: function extractInput() {\r\n\t      var _this$currentMask3;\r\n\r\n\t      return this.currentMask ? (_this$currentMask3 = this.currentMask).extractInput.apply(_this$currentMask3, arguments) : '';\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"extractTail\",\r\n\t    value: function extractTail() {\r\n\t      var _this$currentMask4, _get3;\r\n\r\n\t      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n\t        args[_key2] = arguments[_key2];\r\n\t      }\r\n\r\n\t      return this.currentMask ? (_this$currentMask4 = this.currentMask).extractTail.apply(_this$currentMask4, args) : (_get3 = _get(_getPrototypeOf(MaskedDynamic.prototype), \"extractTail\", this)).call.apply(_get3, [this].concat(args));\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"doCommit\",\r\n\t    value: function doCommit() {\r\n\t      if (this.currentMask) this.currentMask.doCommit();\r\n\r\n\t      _get(_getPrototypeOf(MaskedDynamic.prototype), \"doCommit\", this).call(this);\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"nearestInputPos\",\r\n\t    value: function nearestInputPos() {\r\n\t      var _this$currentMask5, _get4;\r\n\r\n\t      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\r\n\t        args[_key3] = arguments[_key3];\r\n\t      }\r\n\r\n\t      return this.currentMask ? (_this$currentMask5 = this.currentMask).nearestInputPos.apply(_this$currentMask5, args) : (_get4 = _get(_getPrototypeOf(MaskedDynamic.prototype), \"nearestInputPos\", this)).call.apply(_get4, [this].concat(args));\r\n\t    }\r\n\t  }, {\r\n\t    key: \"overwrite\",\r\n\t    get: function get() {\r\n\t      return this.currentMask ? this.currentMask.overwrite : _get(_getPrototypeOf(MaskedDynamic.prototype), \"overwrite\", this);\r\n\t    },\r\n\t    set: function set(overwrite) {\r\n\t      console.warn('\"overwrite\" option is not available in dynamic mask, use this option in siblings');\r\n\t    }\r\n\t    /**\r\n\t      @override\r\n\t    */\r\n\r\n\t  }, {\r\n\t    key: \"maskEquals\",\r\n\t    value: function maskEquals(mask) {\r\n\t      return Array.isArray(mask) && this.compiledMasks.every(function (m, mi) {\r\n\t        var _mask$mi;\r\n\r\n\t        return m.maskEquals((_mask$mi = mask[mi]) === null || _mask$mi === void 0 ? void 0 : _mask$mi.mask);\r\n\t      });\r\n\t    }\r\n\t  }]);\r\n\r\n\t  return MaskedDynamic;\r\n\t}(Masked);\r\n\tMaskedDynamic.DEFAULTS = {\r\n\t  dispatch: function dispatch(appended, masked, flags) {\r\n\t    if (!masked.compiledMasks.length) return;\r\n\t    var inputValue = masked.rawInputValue; // simulate input\r\n\r\n\t    var inputs = masked.compiledMasks.map(function (m, index) {\r\n\t      m.reset();\r\n\t      m.append(inputValue, {\r\n\t        raw: true\r\n\t      });\r\n\t      m.append(appended, flags);\r\n\t      var weight = m.rawInputValue.length;\r\n\t      return {\r\n\t        weight: weight,\r\n\t        index: index\r\n\t      };\r\n\t    }); // pop masks with longer values first\r\n\r\n\t    inputs.sort(function (i1, i2) {\r\n\t      return i2.weight - i1.weight;\r\n\t    });\r\n\t    return masked.compiledMasks[inputs[0].index];\r\n\t  }\r\n\t};\r\n\tIMask.MaskedDynamic = MaskedDynamic;\r\n\r\n\t/** Mask pipe source and destination types */\r\n\r\n\tvar PIPE_TYPE = {\r\n\t  MASKED: 'value',\r\n\t  UNMASKED: 'unmaskedValue',\r\n\t  TYPED: 'typedValue'\r\n\t};\r\n\t/** Creates new pipe function depending on mask type, source and destination options */\r\n\r\n\tfunction createPipe(mask) {\r\n\t  var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : PIPE_TYPE.MASKED;\r\n\t  var to = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : PIPE_TYPE.MASKED;\r\n\t  var masked = createMask(mask);\r\n\t  return function (value) {\r\n\t    return masked.runIsolated(function (m) {\r\n\t      m[from] = value;\r\n\t      return m[to];\r\n\t    });\r\n\t  };\r\n\t}\r\n\t/** Pipes value through mask depending on mask type, source and destination options */\r\n\r\n\tfunction pipe(value) {\r\n\t  for (var _len = arguments.length, pipeArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n\t    pipeArgs[_key - 1] = arguments[_key];\r\n\t  }\r\n\r\n\t  return createPipe.apply(void 0, pipeArgs)(value);\r\n\t}\r\n\tIMask.PIPE_TYPE = PIPE_TYPE;\r\n\tIMask.createPipe = createPipe;\r\n\tIMask.pipe = pipe;\r\n\r\n\ttry {\r\n\t  globalThis.IMask = IMask;\r\n\t} catch (e) {}\r\n\r\n\texports.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;\r\n\texports.HTMLMaskElement = HTMLMaskElement;\r\n\texports.InputMask = InputMask;\r\n\texports.MaskElement = MaskElement;\r\n\texports.Masked = Masked;\r\n\texports.MaskedDate = MaskedDate;\r\n\texports.MaskedDynamic = MaskedDynamic;\r\n\texports.MaskedEnum = MaskedEnum;\r\n\texports.MaskedFunction = MaskedFunction;\r\n\texports.MaskedNumber = MaskedNumber;\r\n\texports.MaskedPattern = MaskedPattern;\r\n\texports.MaskedRange = MaskedRange;\r\n\texports.MaskedRegExp = MaskedRegExp;\r\n\texports.PIPE_TYPE = PIPE_TYPE;\r\n\texports.createMask = createMask;\r\n\texports.createPipe = createPipe;\r\n\texports[\"default\"] = IMask;\r\n\texports.pipe = pipe;\r\n\r\n\tObject.defineProperty(exports, '__esModule', { value: true });\r\n\r\n}));\r\n//# sourceMappingURL=imask.js.map\r\n\r\n\r\n/* Partials */\r\n\r\nwindow.addEventListener('load', () => {\r\n\tconst burger = document.querySelector('.header__burger');\r\n\r\n\tif (burger) {\r\n\t\tburger.addEventListener('click', (e) => {\r\n\t\t\te.target.classList.toggle('active');\r\n\t\t});\r\n\t}\r\n});\r\nwindow.addEventListener('load', () => {\r\n\tconst menuLinks = document.querySelectorAll('.sidebar-item__link');\r\n\r\n\tmenuLinks.forEach((elem) => {\r\n\t\tif (!elem.hasAttribute('href')) {\r\n\t\t\telem.addEventListener('click', () => {\r\n\t\t\t\telem.classList.toggle('active');\r\n\t\t\t\tlet submenu = elem.nextElementSibling;\r\n\r\n\t\t\t\tif (submenu.style.maxHeight) {\r\n\t\t\t\t\tsubmenu.style.maxHeight = null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsubmenu.style.maxHeight = submenu.scrollHeight + 'px';\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n});\r\nwindow.addEventListener('load', () => {\r\n\t// Подписи на оси X\r\n\tconst labels = [\r\n\t\t'Январь',\r\n\t\t'Февраль',\r\n\t\t'Март',\r\n\t\t'Апрель',\r\n\t\t'Май',\r\n\t\t'Июнь',\r\n\t\t'Июль',\r\n\t\t'Август',\r\n\t\t'Сентябрь',\r\n\t\t'Октябрь',\r\n\t\t'Ноябрь',\r\n\t\t'Декабрь'\r\n\t];\r\n\r\n\tconst options = {\r\n\t\tresponsive: true,\r\n\t\tlayout: {\r\n\t\t\tpadding: 10,\r\n\t\t},\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\talign: 'start',\r\n\t\t\t\tposition: 'bottom',\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tboxWidth: 15,\r\n\t\t\t\t\tboxHeight: 15\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\ty: {\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tcolor: 'rgb(255, 255, 255, 0.8)',\r\n\t\t\t\t\ttickWidth: 0\r\n\t\t\t\t},\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tcolor: 'rgb(255, 255, 255, 0.8)'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tx: {\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tcolor: 'rgb(255, 255, 255, 0.8)',\r\n\t\t\t\t\ttickWidth: 0\r\n\t\t\t\t},\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tcolor: 'rgb(255, 255, 255, 0.8)'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst data1 = {\r\n\t\tlabels: labels,\r\n\t\tdatasets: [{\r\n\t\t\tlabel: 'Популярность запроса «Телевизор купить» за 2020г.',\r\n\t\t\tbackgroundColor: 'rgb(32, 214, 66)',\r\n\t\t\tborderColor: 'rgb(32, 214, 66)',\r\n\t\t\tpointBorderWidth: 0,\r\n\t\t\tpointRadius: 4,\r\n\t\t\tdata: [72, 100, 85, 100, 55, 45, 35, 30, 60, 75, 90, 95], // Значения на оси Y для каждого X\r\n\t\t}]\r\n\t};\r\n\r\n\tconst data2 = {\r\n\t\tlabels: labels,\r\n\t\tdatasets: [{\r\n\t\t\tlabel: 'Популярность запроса «Телевизор купить» за 2020г.',\r\n\t\t\tbackgroundColor: 'rgb(99, 239, 255)',\r\n\t\t\tborderColor: 'rgb(99, 239, 255)',\r\n\t\t\tdata: [72, 100, 85, 100, 55, 45, 35, 30, 60, 75, 90, 95], // Значения на оси Y для каждого X\r\n\t\t}]\r\n\t};\r\n\r\n\tconst data3 = {\r\n\t\tlabels: labels,\r\n\t\tdatasets: [{\r\n\t\t\ttype: 'line',\r\n\t\t\tlabel: 'Популярность запроса «Телевизор купить» за 2020г.',\r\n\t\t\tbackgroundColor: 'rgb(32, 214, 66)',\r\n\t\t\tborderColor: 'rgb(32, 214, 66)',\r\n\t\t\tpointBorderWidth: 0,\r\n\t\t\tpointRadius: 4,\r\n\t\t\tdata: [72, 100, 85, 100, 55, 45, 35, 30, 60, 75, 90, 95], // Значения на оси Y для каждого X\r\n\t\t}, {\r\n\t\t\ttype: 'bar',\r\n\t\t\tlabel: 'Популярность запроса «Телевизор купить» за 2021г.',\r\n\t\t\tbackgroundColor: 'rgb(78, 97, 99)',\r\n\t\t\tborderColor: 'rgb(78, 97, 99)',\r\n\t\t\tdata: [100, 90, 80, 70, 60, 50, 50, 60, 70, 80, 90, 100], // Значения на оси Y для каждого X\r\n\t\t}]\r\n\t};\r\n\r\n\tconst config1 = {\r\n\t\ttype: 'line',\r\n\t\tdata: data1,\r\n\t\toptions: options\r\n\t};\r\n\r\n\tconst config2 = {\r\n\t\ttype: 'bar',\r\n\t\tdata: data2,\r\n\t\toptions: options\r\n\t};\r\n\r\n\tconst config3 = {\r\n\t\tdata: data3,\r\n\t\toptions: options\r\n\t};\r\n\r\n\tconst diagElem1 = document.getElementById('myChart1');\r\n\tconst diagElem2 = document.getElementById('myChart2');\r\n\tconst diagElem3 = document.getElementById('myChart3');\r\n\r\n\tif (diagElem1) {\r\n\t\tconst chart = new Chart(\r\n\t\t\tdocument.getElementById('myChart1'),\r\n\t\t\tconfig1\r\n\t\t);\r\n\t}\r\n\r\n\tif (diagElem2) {\r\n\t\tconst chart2 = new Chart(\r\n\t\t\tdocument.getElementById('myChart2'),\r\n\t\t\tconfig2\r\n\t\t);\r\n\t}\r\n\r\n\tif (diagElem3) {\r\n\t\tconst chart3 = new Chart(\r\n\t\t\tdocument.getElementById('myChart3'),\r\n\t\t\tconfig3\r\n\t\t);\r\n\t}\r\n});\r\n$(window).on('load', function () {\r\n\t$('.js-select-place').select2({\r\n\t\tselectionCssClass: 'custom-select',\r\n\t\tdropdownCssClass: 'cs-dropdown',\r\n\t\tplaceholder: 'Place',\r\n\t});\r\n\r\n\t$('.js-select-gender').select2({\r\n\t\tselectionCssClass: 'custom-select',\r\n\t\tdropdownCssClass: 'cs-dropdown',\r\n\t\tplaceholder: 'Gender',\r\n\t\tminimumResultsForSearch: -1\r\n\t});\r\n})\r\n$(window).on('load', function () {\r\n\tlet maskedElem = document.querySelector('[type=\"tel\"]');\r\n\r\n\tlet phoneMask = IMask(\r\n\t\tmaskedElem, {\r\n\t\t\tmask: '+{7}(000)000-00-00'\r\n\t\t});\r\n})\r\n$(window).on('load', function () {\r\n\t/**\r\n\t * Валидация поля email\r\n\t * @param email\r\n\t * @returns {boolean}\r\n\t */\r\n\tfunction validateEmail(email) {\r\n\t\tvar re = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n\t\treturn re.test(String(email).toLowerCase());\r\n\t}\r\n\r\n\t/**\r\n\t * Проверка поля на правильность данных\r\n\t * @param errs\r\n\t * @returns {boolean}\r\n\t */\r\n\tfunction checkValid(errs) {\r\n\t\tvar isValid = true;\r\n\r\n\t\terrs.each(function () {\r\n\t\t\tif ($(this).is(':visible')) {\r\n\t\t\t\tisValid = false;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn isValid;\r\n\t}\r\n\r\n\t/**\r\n\t * Вывод сообщения об ошибке\r\n\t * @param elem\r\n\t */\r\n\tfunction fieldValidate(elem) {\r\n\t\telem.each(function () {\r\n\t\t\tvar err = $(this).siblings('.field-error'),\r\n\t\t\t\tisValid = checkValid(err),\r\n\t\t\t\tval = $(this).val();\r\n\r\n\t\t\tif ($(this).prop('required') === true) {\r\n\t\t\t\tif ($(this).val().length === 0) {\r\n\t\t\t\t\terr.show().text('Please enter a value.');\r\n\t\t\t\t\tisValid = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\terr.hide().text('');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ($(this).attr('type') === \"email\") {\r\n\t\t\t\tif (validateEmail(val)) {\r\n\t\t\t\t\terr.hide().text('');\r\n\t\t\t\t} else {\r\n\t\t\t\t\terr.show().text('Please enter a valid email address.');\r\n\t\t\t\t\tisValid = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t$('.js-form-validate button').on('click', function (e) {\r\n\t\tvar form = $(this).parent('form'),\r\n\t\t\tfields = $(this).parent().find('input').add($(this).parent().find('textarea')),\r\n\t\t\tisValid = checkValid(form.find('.field-error'));\r\n\r\n\t\tfieldValidate(fields);\r\n\r\n\t\tif (isValid) {\r\n\t\t\tform.submit(function (event) {\r\n\t\t\t\talert('Регистрация прошла успешно');\r\n\t\t\t});\r\n\r\n\t\t\tsetTimeout(function () {\r\n\t\t\t\tform.off('submit');\r\n\t\t\t}, 100);\r\n\t\t} else {\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t});\r\n\r\n\t$('.js-form-validate .field input').add($('.js-form-validate .field textarea')).on('focusout keyup change', function () {\r\n\t\tfieldValidate($(this));\r\n\t});\r\n})"]}